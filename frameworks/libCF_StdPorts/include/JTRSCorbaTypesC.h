// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_JTRSCORBATYPESC_W5JCTK_H_
#define _TAO_IDL_JTRSCORBATYPESC_W5JCTK_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "CFC.h"
#include "PortTypesC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace JTRS
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::UShort ExtEnum;
  typedef ::CORBA::UShort_out ExtEnum_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_ExtEnum;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_JTRS_EXTENUMSEQUENCE_CH_)
#define _JTRS_EXTENUMSEQUENCE_CH_

  class ExtEnumSequence;

  typedef
    ::TAO_FixedSeq_Var_T<
        ExtEnumSequence
      >
    ExtEnumSequence_var;

  typedef
    ::TAO_Seq_Out_T<
        ExtEnumSequence
      >
    ExtEnumSequence_out;

  class  ExtEnumSequence
    : public
        ::TAO::unbounded_value_sequence<
            ExtEnum
          >
  {
  public:
    ExtEnumSequence (void);
    ExtEnumSequence ( ::CORBA::ULong max);
    ExtEnumSequence (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::UShort* buffer, 
      ::CORBA::Boolean release = false);
    ExtEnumSequence (const ExtEnumSequence &);
    virtual ~ExtEnumSequence (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ExtEnumSequence_var _var_type;
    typedef ExtEnumSequence_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_ExtEnumSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef CF::OctetSequence OctetSequence;
  typedef CF::OctetSequence_var OctetSequence_var;
  typedef CF::OctetSequence_out OctetSequence_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_OctetSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef CF::StringSequence StringSequence;
  typedef CF::StringSequence_var StringSequence_var;
  typedef CF::StringSequence_out StringSequence_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_StringSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef PortTypes::BooleanSequence BooleanSequence;
  typedef PortTypes::BooleanSequence_var BooleanSequence_var;
  typedef PortTypes::BooleanSequence_out BooleanSequence_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_BooleanSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef PortTypes::CharSequence CharSequence;
  typedef PortTypes::CharSequence_var CharSequence_var;
  typedef PortTypes::CharSequence_out CharSequence_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_CharSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef PortTypes::LongLongSequence LongLongSequence;
  typedef PortTypes::LongLongSequence_var LongLongSequence_var;
  typedef PortTypes::LongLongSequence_out LongLongSequence_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_LongLongSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef PortTypes::LongSequence LongSequence;
  typedef PortTypes::LongSequence_var LongSequence_var;
  typedef PortTypes::LongSequence_out LongSequence_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_LongSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef PortTypes::ShortSequence ShortSequence;
  typedef PortTypes::ShortSequence_var ShortSequence_var;
  typedef PortTypes::ShortSequence_out ShortSequence_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_ShortSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef PortTypes::UlongLongSequence UlongLongSequence;
  typedef PortTypes::UlongLongSequence_var UlongLongSequence_var;
  typedef PortTypes::UlongLongSequence_out UlongLongSequence_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_UlongLongSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef PortTypes::UlongSequence UlongSequence;
  typedef PortTypes::UlongSequence_var UlongSequence_var;
  typedef PortTypes::UlongSequence_out UlongSequence_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_UlongSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef PortTypes::UshortSequence UshortSequence;
  typedef PortTypes::UshortSequence_var UshortSequence_var;
  typedef PortTypes::UshortSequence_out UshortSequence_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_UshortSequence;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class  InvalidParameter : public ::CORBA::UserException
  {
  public:
    
    InvalidParameter (void);
    InvalidParameter (const InvalidParameter &);
    ~InvalidParameter (void);

    InvalidParameter &operator= (const InvalidParameter &);

    static void _tao_any_destructor (void *);

    static InvalidParameter *_downcast ( ::CORBA::Exception *);
    static const InvalidParameter *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_InvalidParameter;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class  Unsupported : public ::CORBA::UserException
  {
  public:
    
    Unsupported (void);
    Unsupported (const Unsupported &);
    ~Unsupported (void);

    Unsupported &operator= (const Unsupported &);

    static void _tao_any_destructor (void *);

    static Unsupported *_downcast ( ::CORBA::Exception *);
    static const Unsupported *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_Unsupported;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module JTRS

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::JTRS::ExtEnumSequence>
    : public
        Var_Size_Arg_Traits_T<
            ::JTRS::ExtEnumSequence,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace JTRS
{
   void operator<<= ( ::CORBA::Any &, const ::JTRS::ExtEnumSequence &); // copying version
   void operator<<= ( ::CORBA::Any &, ::JTRS::ExtEnumSequence*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::JTRS::ExtEnumSequence *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::JTRS::ExtEnumSequence *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const JTRS::ExtEnumSequence &); // copying version
 void operator<<= ( ::CORBA::Any &, JTRS::ExtEnumSequence*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, JTRS::ExtEnumSequence *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const JTRS::ExtEnumSequence *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace JTRS
{
  

   void operator<<= (::CORBA::Any &, const ::JTRS::InvalidParameter &); // copying version
   void operator<<= (::CORBA::Any &, ::JTRS::InvalidParameter*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::JTRS::InvalidParameter *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::JTRS::InvalidParameter *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const JTRS::InvalidParameter &); // copying version
 void operator<<= (::CORBA::Any &, JTRS::InvalidParameter*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, JTRS::InvalidParameter *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const JTRS::InvalidParameter *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace JTRS
{
  

   void operator<<= (::CORBA::Any &, const ::JTRS::Unsupported &); // copying version
   void operator<<= (::CORBA::Any &, ::JTRS::Unsupported*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::JTRS::Unsupported *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::JTRS::Unsupported *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const JTRS::Unsupported &); // copying version
 void operator<<= (::CORBA::Any &, JTRS::Unsupported*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, JTRS::Unsupported *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const JTRS::Unsupported *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_JTRS_ExtEnumSequence_H_
#define _TAO_CDR_OP_JTRS_ExtEnumSequence_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const JTRS::ExtEnumSequence &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    JTRS::ExtEnumSequence &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_JTRS_ExtEnumSequence_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const JTRS::InvalidParameter &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, JTRS::InvalidParameter &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const JTRS::Unsupported &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, JTRS::Unsupported &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581
#if defined (__ACE_INLINE__)
#include "JTRSCorbaTypesC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

