// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_STANDARDEVENTC_LSC4FH_H_
#define _TAO_IDL_STANDARDEVENTC_LSC4FH_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace StandardEvent
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum StateChangeCategoryType
  {
    ADMINISTRATIVE_STATE_EVENT,
    OPERATIONAL_STATE_EVENT,
    USAGE_STATE_EVENT
  };

  typedef StateChangeCategoryType &StateChangeCategoryType_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_StateChangeCategoryType;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum StateChangeType
  {
    LOCKED,
    UNLOCKED,
    SHUTTING_DOWN,
    ENABLED,
    DISABLED,
    IDLE,
    ACTIVE,
    BUSY
  };

  typedef StateChangeType &StateChangeType_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_StateChangeType;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct StateChangeEventType;

  typedef
    ::TAO_Var_Var_T<
        StateChangeEventType
      >
    StateChangeEventType_var;
  
  typedef
    ::TAO_Out_T<
        StateChangeEventType
      >
    StateChangeEventType_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct  StateChangeEventType
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef StateChangeEventType_var _var_type;
    typedef StateChangeEventType_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager producerId;
    ::TAO::String_Manager sourceId;
    StandardEvent::StateChangeCategoryType stateChangeCategory;
    StandardEvent::StateChangeType stateChangeFrom;
    StandardEvent::StateChangeType stateChangeTo;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_StateChangeEventType;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum SourceCategoryType
  {
    DEVICE_MANAGER,
    DEVICE,
    APPLICATION_FACTORY,
    APPLICATION,
    SERVICE
  };

  typedef SourceCategoryType &SourceCategoryType_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_SourceCategoryType;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct DomainManagementObjectRemovedEventType;

  typedef
    ::TAO_Var_Var_T<
        DomainManagementObjectRemovedEventType
      >
    DomainManagementObjectRemovedEventType_var;
  
  typedef
    ::TAO_Out_T<
        DomainManagementObjectRemovedEventType
      >
    DomainManagementObjectRemovedEventType_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct  DomainManagementObjectRemovedEventType
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DomainManagementObjectRemovedEventType_var _var_type;
    typedef DomainManagementObjectRemovedEventType_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager producerId;
    ::TAO::String_Manager sourceId;
    ::TAO::String_Manager sourceName;
    StandardEvent::SourceCategoryType sourceCategory;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_DomainManagementObjectRemovedEventType;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct DomainManagementObjectAddedEventType;

  typedef
    ::TAO_Var_Var_T<
        DomainManagementObjectAddedEventType
      >
    DomainManagementObjectAddedEventType_var;
  
  typedef
    ::TAO_Out_T<
        DomainManagementObjectAddedEventType
      >
    DomainManagementObjectAddedEventType_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct  DomainManagementObjectAddedEventType
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DomainManagementObjectAddedEventType_var _var_type;
    typedef DomainManagementObjectAddedEventType_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager producerId;
    ::TAO::String_Manager sourceId;
    ::TAO::String_Manager sourceName;
    StandardEvent::SourceCategoryType sourceCategory;
    ::CORBA::Object_var sourceIOR;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern  ::CORBA::TypeCode_ptr const _tc_DomainManagementObjectAddedEventType;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module StandardEvent

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::StandardEvent::StateChangeCategoryType>
    : public
        Basic_Arg_Traits_T<
            ::StandardEvent::StateChangeCategoryType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::StandardEvent::StateChangeType>
    : public
        Basic_Arg_Traits_T<
            ::StandardEvent::StateChangeType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::StandardEvent::StateChangeEventType>
    : public
        Var_Size_Arg_Traits_T<
            ::StandardEvent::StateChangeEventType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::StandardEvent::SourceCategoryType>
    : public
        Basic_Arg_Traits_T<
            ::StandardEvent::SourceCategoryType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::StandardEvent::DomainManagementObjectRemovedEventType>
    : public
        Var_Size_Arg_Traits_T<
            ::StandardEvent::DomainManagementObjectRemovedEventType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::StandardEvent::DomainManagementObjectAddedEventType>
    : public
        Var_Size_Arg_Traits_T<
            ::StandardEvent::DomainManagementObjectAddedEventType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace StandardEvent
{
  

   void operator<<= (::CORBA::Any &, ::StandardEvent::StateChangeCategoryType);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::StandardEvent::StateChangeCategoryType &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, StandardEvent::StateChangeCategoryType);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StandardEvent::StateChangeCategoryType &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace StandardEvent
{
  

   void operator<<= (::CORBA::Any &, ::StandardEvent::StateChangeType);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::StandardEvent::StateChangeType &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, StandardEvent::StateChangeType);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StandardEvent::StateChangeType &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace StandardEvent
{
   void operator<<= (::CORBA::Any &, const ::StandardEvent::StateChangeEventType &); // copying version
   void operator<<= (::CORBA::Any &, ::StandardEvent::StateChangeEventType*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::StandardEvent::StateChangeEventType *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::StandardEvent::StateChangeEventType *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const StandardEvent::StateChangeEventType &); // copying version
 void operator<<= (::CORBA::Any &, StandardEvent::StateChangeEventType*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StandardEvent::StateChangeEventType *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const StandardEvent::StateChangeEventType *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace StandardEvent
{
  

   void operator<<= (::CORBA::Any &, ::StandardEvent::SourceCategoryType);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::StandardEvent::SourceCategoryType &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, StandardEvent::SourceCategoryType);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StandardEvent::SourceCategoryType &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace StandardEvent
{
   void operator<<= (::CORBA::Any &, const ::StandardEvent::DomainManagementObjectRemovedEventType &); // copying version
   void operator<<= (::CORBA::Any &, ::StandardEvent::DomainManagementObjectRemovedEventType*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::StandardEvent::DomainManagementObjectRemovedEventType *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::StandardEvent::DomainManagementObjectRemovedEventType *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const StandardEvent::DomainManagementObjectRemovedEventType &); // copying version
 void operator<<= (::CORBA::Any &, StandardEvent::DomainManagementObjectRemovedEventType*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StandardEvent::DomainManagementObjectRemovedEventType *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const StandardEvent::DomainManagementObjectRemovedEventType *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace StandardEvent
{
   void operator<<= (::CORBA::Any &, const ::StandardEvent::DomainManagementObjectAddedEventType &); // copying version
   void operator<<= (::CORBA::Any &, ::StandardEvent::DomainManagementObjectAddedEventType*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::StandardEvent::DomainManagementObjectAddedEventType *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::StandardEvent::DomainManagementObjectAddedEventType *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const StandardEvent::DomainManagementObjectAddedEventType &); // copying version
 void operator<<= (::CORBA::Any &, StandardEvent::DomainManagementObjectAddedEventType*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StandardEvent::DomainManagementObjectAddedEventType *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const StandardEvent::DomainManagementObjectAddedEventType *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, StandardEvent::StateChangeCategoryType _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, StandardEvent::StateChangeCategoryType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, StandardEvent::StateChangeType _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, StandardEvent::StateChangeType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const StandardEvent::StateChangeEventType &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, StandardEvent::StateChangeEventType &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, StandardEvent::SourceCategoryType _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, StandardEvent::SourceCategoryType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const StandardEvent::DomainManagementObjectRemovedEventType &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, StandardEvent::DomainManagementObjectRemovedEventType &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const StandardEvent::DomainManagementObjectAddedEventType &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, StandardEvent::DomainManagementObjectAddedEventType &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581
#if defined (__ACE_INLINE__)
#include "StandardEventC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

