// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_PIDL_MESSAGING_NO_IMPLC_KLXVWV_H_
#define _TAO_PIDL_MESSAGING_NO_IMPLC_KLXVWV_H_

#ifndef TAO_MESSAGING_SAFE_INCLUDE
#error You should not include Messaging_No_ImplC.h, use tao/Messaging/Messaging.h
#endif /* TAO_MESSAGING_SAFE_INCLUDE */

#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/Messaging/messaging_export.h"
#include "tao/Basic_Types.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/TimeBaseC.h"
#include "tao/PolicyC.h"
#include "tao/Messaging/Messaging_TypesC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Messaging_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace Messaging
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Short Priority;
  typedef ::CORBA::Short_out Priority_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Short RebindMode;
  typedef ::CORBA::Short_out RebindMode_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::Short TRANSPARENT = 0;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::Short NO_REBIND = 1;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::Short NO_RECONNECT = 2;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Short RoutingType;
  typedef ::CORBA::Short_out RoutingType_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::Short ROUTE_NONE = 0;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::Short ROUTE_FORWARD = 1;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::Short ROUTE_STORE_AND_FORWARD = 2;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::UShort Ordering;
  typedef ::CORBA::UShort_out Ordering_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort ORDER_ANY = 1U;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort ORDER_TEMPORAL = 2U;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort ORDER_PRIORITY = 4U;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort ORDER_DEADLINE = 8U;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_REBINDPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REBINDPOLICY__VAR_OUT_CH_

  class RebindPolicy;
  typedef RebindPolicy *RebindPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        RebindPolicy
      >
    RebindPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        RebindPolicy
      >
    RebindPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export RebindPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef RebindPolicy_ptr _ptr_type;
    typedef RebindPolicy_var _var_type;
    typedef RebindPolicy_out _out_type;

    // The static operations.
    static RebindPolicy_ptr _duplicate (RebindPolicy_ptr obj);

    static void _tao_release (RebindPolicy_ptr obj);

    static RebindPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RebindPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RebindPolicy_ptr _nil (void);

    virtual ::Messaging::RebindMode rebind_mode (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RebindPolicy (void);

    

    virtual ~RebindPolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    RebindPolicy (const RebindPolicy &);

    void operator= (const RebindPolicy &);
  };

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct PriorityRange;

  typedef
    ::TAO_Fixed_Var_T<
        PriorityRange
      >
    PriorityRange_var;
  
  typedef
    PriorityRange &
    PriorityRange_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Messaging_Export PriorityRange
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef PriorityRange_var _var_type;
    typedef PriorityRange_out _out_type;

    static void _tao_any_destructor (void *);
    
    Messaging::Priority min;
    Messaging::Priority max;
  };

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_REQUESTPRIORITYPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REQUESTPRIORITYPOLICY__VAR_OUT_CH_

  class RequestPriorityPolicy;
  typedef RequestPriorityPolicy *RequestPriorityPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        RequestPriorityPolicy
      >
    RequestPriorityPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        RequestPriorityPolicy
      >
    RequestPriorityPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export RequestPriorityPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef RequestPriorityPolicy_ptr _ptr_type;
    typedef RequestPriorityPolicy_var _var_type;
    typedef RequestPriorityPolicy_out _out_type;

    // The static operations.
    static RequestPriorityPolicy_ptr _duplicate (RequestPriorityPolicy_ptr obj);

    static void _tao_release (RequestPriorityPolicy_ptr obj);

    static RequestPriorityPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RequestPriorityPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RequestPriorityPolicy_ptr _nil (void);

    virtual ::Messaging::PriorityRange priority_range (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RequestPriorityPolicy (void);

    

    virtual ~RequestPriorityPolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    RequestPriorityPolicy (const RequestPriorityPolicy &);

    void operator= (const RequestPriorityPolicy &);
  };

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_REPLYPRIORITYPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REPLYPRIORITYPOLICY__VAR_OUT_CH_

  class ReplyPriorityPolicy;
  typedef ReplyPriorityPolicy *ReplyPriorityPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        ReplyPriorityPolicy
      >
    ReplyPriorityPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        ReplyPriorityPolicy
      >
    ReplyPriorityPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export ReplyPriorityPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ReplyPriorityPolicy_ptr _ptr_type;
    typedef ReplyPriorityPolicy_var _var_type;
    typedef ReplyPriorityPolicy_out _out_type;

    // The static operations.
    static ReplyPriorityPolicy_ptr _duplicate (ReplyPriorityPolicy_ptr obj);

    static void _tao_release (ReplyPriorityPolicy_ptr obj);

    static ReplyPriorityPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static ReplyPriorityPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ReplyPriorityPolicy_ptr _nil (void);

    virtual ::Messaging::PriorityRange priority_range (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ReplyPriorityPolicy (void);

    

    virtual ~ReplyPriorityPolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ReplyPriorityPolicy (const ReplyPriorityPolicy &);

    void operator= (const ReplyPriorityPolicy &);
  };

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_REQUESTSTARTTIMEPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REQUESTSTARTTIMEPOLICY__VAR_OUT_CH_

  class RequestStartTimePolicy;
  typedef RequestStartTimePolicy *RequestStartTimePolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        RequestStartTimePolicy
      >
    RequestStartTimePolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        RequestStartTimePolicy
      >
    RequestStartTimePolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export RequestStartTimePolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef RequestStartTimePolicy_ptr _ptr_type;
    typedef RequestStartTimePolicy_var _var_type;
    typedef RequestStartTimePolicy_out _out_type;

    // The static operations.
    static RequestStartTimePolicy_ptr _duplicate (RequestStartTimePolicy_ptr obj);

    static void _tao_release (RequestStartTimePolicy_ptr obj);

    static RequestStartTimePolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RequestStartTimePolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RequestStartTimePolicy_ptr _nil (void);

    virtual ::TimeBase::UtcT start_time (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RequestStartTimePolicy (void);

    

    virtual ~RequestStartTimePolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    RequestStartTimePolicy (const RequestStartTimePolicy &);

    void operator= (const RequestStartTimePolicy &);
  };

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_REQUESTENDTIMEPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REQUESTENDTIMEPOLICY__VAR_OUT_CH_

  class RequestEndTimePolicy;
  typedef RequestEndTimePolicy *RequestEndTimePolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        RequestEndTimePolicy
      >
    RequestEndTimePolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        RequestEndTimePolicy
      >
    RequestEndTimePolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export RequestEndTimePolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef RequestEndTimePolicy_ptr _ptr_type;
    typedef RequestEndTimePolicy_var _var_type;
    typedef RequestEndTimePolicy_out _out_type;

    // The static operations.
    static RequestEndTimePolicy_ptr _duplicate (RequestEndTimePolicy_ptr obj);

    static void _tao_release (RequestEndTimePolicy_ptr obj);

    static RequestEndTimePolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RequestEndTimePolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RequestEndTimePolicy_ptr _nil (void);

    virtual ::TimeBase::UtcT end_time (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RequestEndTimePolicy (void);

    

    virtual ~RequestEndTimePolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    RequestEndTimePolicy (const RequestEndTimePolicy &);

    void operator= (const RequestEndTimePolicy &);
  };

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_REPLYSTARTTIMEPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REPLYSTARTTIMEPOLICY__VAR_OUT_CH_

  class ReplyStartTimePolicy;
  typedef ReplyStartTimePolicy *ReplyStartTimePolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        ReplyStartTimePolicy
      >
    ReplyStartTimePolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        ReplyStartTimePolicy
      >
    ReplyStartTimePolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export ReplyStartTimePolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ReplyStartTimePolicy_ptr _ptr_type;
    typedef ReplyStartTimePolicy_var _var_type;
    typedef ReplyStartTimePolicy_out _out_type;

    // The static operations.
    static ReplyStartTimePolicy_ptr _duplicate (ReplyStartTimePolicy_ptr obj);

    static void _tao_release (ReplyStartTimePolicy_ptr obj);

    static ReplyStartTimePolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static ReplyStartTimePolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ReplyStartTimePolicy_ptr _nil (void);

    virtual ::TimeBase::UtcT start_time (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ReplyStartTimePolicy (void);

    

    virtual ~ReplyStartTimePolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ReplyStartTimePolicy (const ReplyStartTimePolicy &);

    void operator= (const ReplyStartTimePolicy &);
  };

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_REPLYENDTIMEPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REPLYENDTIMEPOLICY__VAR_OUT_CH_

  class ReplyEndTimePolicy;
  typedef ReplyEndTimePolicy *ReplyEndTimePolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        ReplyEndTimePolicy
      >
    ReplyEndTimePolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        ReplyEndTimePolicy
      >
    ReplyEndTimePolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export ReplyEndTimePolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ReplyEndTimePolicy_ptr _ptr_type;
    typedef ReplyEndTimePolicy_var _var_type;
    typedef ReplyEndTimePolicy_out _out_type;

    // The static operations.
    static ReplyEndTimePolicy_ptr _duplicate (ReplyEndTimePolicy_ptr obj);

    static void _tao_release (ReplyEndTimePolicy_ptr obj);

    static ReplyEndTimePolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static ReplyEndTimePolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ReplyEndTimePolicy_ptr _nil (void);

    virtual ::TimeBase::UtcT end_time (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ReplyEndTimePolicy (void);

    

    virtual ~ReplyEndTimePolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ReplyEndTimePolicy (const ReplyEndTimePolicy &);

    void operator= (const ReplyEndTimePolicy &);
  };

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY__VAR_OUT_CH_)
#define _MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY__VAR_OUT_CH_

  class RelativeRequestTimeoutPolicy;
  typedef RelativeRequestTimeoutPolicy *RelativeRequestTimeoutPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        RelativeRequestTimeoutPolicy
      >
    RelativeRequestTimeoutPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        RelativeRequestTimeoutPolicy
      >
    RelativeRequestTimeoutPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export RelativeRequestTimeoutPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef RelativeRequestTimeoutPolicy_ptr _ptr_type;
    typedef RelativeRequestTimeoutPolicy_var _var_type;
    typedef RelativeRequestTimeoutPolicy_out _out_type;

    // The static operations.
    static RelativeRequestTimeoutPolicy_ptr _duplicate (RelativeRequestTimeoutPolicy_ptr obj);

    static void _tao_release (RelativeRequestTimeoutPolicy_ptr obj);

    static RelativeRequestTimeoutPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RelativeRequestTimeoutPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RelativeRequestTimeoutPolicy_ptr _nil (void);

    virtual ::TimeBase::TimeT relative_expiry (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RelativeRequestTimeoutPolicy (void);

    

    virtual ~RelativeRequestTimeoutPolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    RelativeRequestTimeoutPolicy (const RelativeRequestTimeoutPolicy &);

    void operator= (const RelativeRequestTimeoutPolicy &);
  };

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct RoutingTypeRange;

  typedef
    ::TAO_Fixed_Var_T<
        RoutingTypeRange
      >
    RoutingTypeRange_var;
  
  typedef
    RoutingTypeRange &
    RoutingTypeRange_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Messaging_Export RoutingTypeRange
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef RoutingTypeRange_var _var_type;
    typedef RoutingTypeRange_out _out_type;

    static void _tao_any_destructor (void *);
    
    Messaging::RoutingType min;
    Messaging::RoutingType max;
  };

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_ROUTINGPOLICY__VAR_OUT_CH_)
#define _MESSAGING_ROUTINGPOLICY__VAR_OUT_CH_

  class RoutingPolicy;
  typedef RoutingPolicy *RoutingPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        RoutingPolicy
      >
    RoutingPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        RoutingPolicy
      >
    RoutingPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export RoutingPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef RoutingPolicy_ptr _ptr_type;
    typedef RoutingPolicy_var _var_type;
    typedef RoutingPolicy_out _out_type;

    // The static operations.
    static RoutingPolicy_ptr _duplicate (RoutingPolicy_ptr obj);

    static void _tao_release (RoutingPolicy_ptr obj);

    static RoutingPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RoutingPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RoutingPolicy_ptr _nil (void);

    virtual ::Messaging::RoutingTypeRange routing_range (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RoutingPolicy (void);

    

    virtual ~RoutingPolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    RoutingPolicy (const RoutingPolicy &);

    void operator= (const RoutingPolicy &);
  };

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_MAXHOPSPOLICY__VAR_OUT_CH_)
#define _MESSAGING_MAXHOPSPOLICY__VAR_OUT_CH_

  class MaxHopsPolicy;
  typedef MaxHopsPolicy *MaxHopsPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        MaxHopsPolicy
      >
    MaxHopsPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        MaxHopsPolicy
      >
    MaxHopsPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export MaxHopsPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef MaxHopsPolicy_ptr _ptr_type;
    typedef MaxHopsPolicy_var _var_type;
    typedef MaxHopsPolicy_out _out_type;

    // The static operations.
    static MaxHopsPolicy_ptr _duplicate (MaxHopsPolicy_ptr obj);

    static void _tao_release (MaxHopsPolicy_ptr obj);

    static MaxHopsPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static MaxHopsPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static MaxHopsPolicy_ptr _nil (void);

    virtual ::CORBA::UShort max_hops (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    MaxHopsPolicy (void);

    

    virtual ~MaxHopsPolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    MaxHopsPolicy (const MaxHopsPolicy &);

    void operator= (const MaxHopsPolicy &);
  };

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_MESSAGING_QUEUEORDERPOLICY__VAR_OUT_CH_)
#define _MESSAGING_QUEUEORDERPOLICY__VAR_OUT_CH_

  class QueueOrderPolicy;
  typedef QueueOrderPolicy *QueueOrderPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        QueueOrderPolicy
      >
    QueueOrderPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        QueueOrderPolicy
      >
    QueueOrderPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Messaging_Export QueueOrderPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef QueueOrderPolicy_ptr _ptr_type;
    typedef QueueOrderPolicy_var _var_type;
    typedef QueueOrderPolicy_out _out_type;

    // The static operations.
    static QueueOrderPolicy_ptr _duplicate (QueueOrderPolicy_ptr obj);

    static void _tao_release (QueueOrderPolicy_ptr obj);

    static QueueOrderPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static QueueOrderPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static QueueOrderPolicy_ptr _nil (void);

    virtual ::Messaging::Ordering allowed_orders (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    QueueOrderPolicy (void);

    

    virtual ~QueueOrderPolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    QueueOrderPolicy (const QueueOrderPolicy &);

    void operator= (const QueueOrderPolicy &);
  };

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module Messaging

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Messaging::PriorityRange>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Messaging::PriorityRange,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Messaging::RoutingTypeRange>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Messaging::RoutingTypeRange,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_MESSAGING_REBINDPOLICY__TRAITS_)
#define _MESSAGING_REBINDPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RebindPolicy>
  {
    static ::Messaging::RebindPolicy_ptr duplicate (
        ::Messaging::RebindPolicy_ptr p);
    static void release (
        ::Messaging::RebindPolicy_ptr p);
    static ::Messaging::RebindPolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::RebindPolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REQUESTPRIORITYPOLICY__TRAITS_)
#define _MESSAGING_REQUESTPRIORITYPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RequestPriorityPolicy>
  {
    static ::Messaging::RequestPriorityPolicy_ptr duplicate (
        ::Messaging::RequestPriorityPolicy_ptr p);
    static void release (
        ::Messaging::RequestPriorityPolicy_ptr p);
    static ::Messaging::RequestPriorityPolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::RequestPriorityPolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REPLYPRIORITYPOLICY__TRAITS_)
#define _MESSAGING_REPLYPRIORITYPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::ReplyPriorityPolicy>
  {
    static ::Messaging::ReplyPriorityPolicy_ptr duplicate (
        ::Messaging::ReplyPriorityPolicy_ptr p);
    static void release (
        ::Messaging::ReplyPriorityPolicy_ptr p);
    static ::Messaging::ReplyPriorityPolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::ReplyPriorityPolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REQUESTSTARTTIMEPOLICY__TRAITS_)
#define _MESSAGING_REQUESTSTARTTIMEPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RequestStartTimePolicy>
  {
    static ::Messaging::RequestStartTimePolicy_ptr duplicate (
        ::Messaging::RequestStartTimePolicy_ptr p);
    static void release (
        ::Messaging::RequestStartTimePolicy_ptr p);
    static ::Messaging::RequestStartTimePolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::RequestStartTimePolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REQUESTENDTIMEPOLICY__TRAITS_)
#define _MESSAGING_REQUESTENDTIMEPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RequestEndTimePolicy>
  {
    static ::Messaging::RequestEndTimePolicy_ptr duplicate (
        ::Messaging::RequestEndTimePolicy_ptr p);
    static void release (
        ::Messaging::RequestEndTimePolicy_ptr p);
    static ::Messaging::RequestEndTimePolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::RequestEndTimePolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REPLYSTARTTIMEPOLICY__TRAITS_)
#define _MESSAGING_REPLYSTARTTIMEPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::ReplyStartTimePolicy>
  {
    static ::Messaging::ReplyStartTimePolicy_ptr duplicate (
        ::Messaging::ReplyStartTimePolicy_ptr p);
    static void release (
        ::Messaging::ReplyStartTimePolicy_ptr p);
    static ::Messaging::ReplyStartTimePolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::ReplyStartTimePolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REPLYENDTIMEPOLICY__TRAITS_)
#define _MESSAGING_REPLYENDTIMEPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::ReplyEndTimePolicy>
  {
    static ::Messaging::ReplyEndTimePolicy_ptr duplicate (
        ::Messaging::ReplyEndTimePolicy_ptr p);
    static void release (
        ::Messaging::ReplyEndTimePolicy_ptr p);
    static ::Messaging::ReplyEndTimePolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::ReplyEndTimePolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY__TRAITS_)
#define _MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RelativeRequestTimeoutPolicy>
  {
    static ::Messaging::RelativeRequestTimeoutPolicy_ptr duplicate (
        ::Messaging::RelativeRequestTimeoutPolicy_ptr p);
    static void release (
        ::Messaging::RelativeRequestTimeoutPolicy_ptr p);
    static ::Messaging::RelativeRequestTimeoutPolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::RelativeRequestTimeoutPolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_ROUTINGPOLICY__TRAITS_)
#define _MESSAGING_ROUTINGPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RoutingPolicy>
  {
    static ::Messaging::RoutingPolicy_ptr duplicate (
        ::Messaging::RoutingPolicy_ptr p);
    static void release (
        ::Messaging::RoutingPolicy_ptr p);
    static ::Messaging::RoutingPolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::RoutingPolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_MAXHOPSPOLICY__TRAITS_)
#define _MESSAGING_MAXHOPSPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::MaxHopsPolicy>
  {
    static ::Messaging::MaxHopsPolicy_ptr duplicate (
        ::Messaging::MaxHopsPolicy_ptr p);
    static void release (
        ::Messaging::MaxHopsPolicy_ptr p);
    static ::Messaging::MaxHopsPolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::MaxHopsPolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_QUEUEORDERPOLICY__TRAITS_)
#define _MESSAGING_QUEUEORDERPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::QueueOrderPolicy>
  {
    static ::Messaging::QueueOrderPolicy_ptr duplicate (
        ::Messaging::QueueOrderPolicy_ptr p);
    static void release (
        ::Messaging::QueueOrderPolicy_ptr p);
    static ::Messaging::QueueOrderPolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messaging::QueueOrderPolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Messaging_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::PriorityRange &);
TAO_Messaging_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::PriorityRange &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Messaging_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::RoutingTypeRange &);
TAO_Messaging_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::RoutingTypeRange &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* ifndef */

