// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_PIDL_IFR_BASEC_1IPW7O_H_
#define _TAO_PIDL_IFR_BASEC_1IPW7O_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/IFR_Client/ifr_client_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/orb_typesA.h"
#include "tao/AnyTypeCode/Typecode_typesA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/AnyTypeCode/Any_Arg_Traits.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/orb_typesC.h"
#include "tao/Typecode_typesC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_IFR_Client_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace CORBA
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef char * ScopedName;
  typedef ::CORBA::String_var ScopedName_var;
  typedef ::CORBA::String_out ScopedName_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ScopedName;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum DefinitionKind
  {
    dk_none,
    dk_all,
    dk_Attribute,
    dk_Constant,
    dk_Exception,
    dk_Interface,
    dk_Module,
    dk_Operation,
    dk_Typedef,
    dk_Alias,
    dk_Struct,
    dk_Union,
    dk_Enum,
    dk_Primitive,
    dk_String,
    dk_Sequence,
    dk_Array,
    dk_Repository,
    dk_Wstring,
    dk_Fixed,
    dk_Value,
    dk_ValueBox,
    dk_ValueMember,
    dk_Native,
    dk_AbstractInterface,
    dk_LocalInterface,
    dk_Component,
    dk_Home,
    dk_Factory,
    dk_Finder,
    dk_Emits,
    dk_Publishes,
    dk_Consumes,
    dk_Provides,
    dk_Uses,
    dk_Event
  };

  typedef DefinitionKind &DefinitionKind_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_DefinitionKind;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_IROBJECT__VAR_OUT_CH_)
#define _CORBA_IROBJECT__VAR_OUT_CH_

  class IRObject;
  typedef IRObject *IRObject_ptr;

  typedef
    TAO_Objref_Var_T<
        IRObject
      >
    IRObject_var;
  
  typedef
    TAO_Objref_Out_T<
        IRObject
      >
    IRObject_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_IFR_Client_Export IRObject
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<IRObject>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef IRObject_ptr _ptr_type;
    typedef IRObject_var _var_type;
    typedef IRObject_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static IRObject_ptr _duplicate (IRObject_ptr obj);

    static void _tao_release (IRObject_ptr obj);

    static IRObject_ptr _narrow (::CORBA::Object_ptr obj);
    static IRObject_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static IRObject_ptr _nil (void);

    virtual ::CORBA::DefinitionKind def_kind (
      void);

    virtual void destroy (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_IRObject_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    IRObject (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_IRObject_setup_collocation (void);

    // Concrete non-local interface only.
    IRObject (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    IRObject (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~IRObject (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    IRObject (const IRObject &);

    void operator= (const IRObject &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_IRObject;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef char * VersionSpec;
  typedef ::CORBA::String_var VersionSpec_var;
  typedef ::CORBA::String_out VersionSpec_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_VersionSpec;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_CONTAINED__VAR_OUT_CH_)
#define _CORBA_CONTAINED__VAR_OUT_CH_

  class Contained;
  typedef Contained *Contained_ptr;

  typedef
    TAO_Objref_Var_T<
        Contained
      >
    Contained_var;
  
  typedef
    TAO_Objref_Out_T<
        Contained
      >
    Contained_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_REPOSITORY__VAR_OUT_CH_)
#define _CORBA_REPOSITORY__VAR_OUT_CH_

  class Repository;
  typedef Repository *Repository_ptr;

  typedef
    TAO_Objref_Var_T<
        Repository
      >
    Repository_var;
  
  typedef
    TAO_Objref_Out_T<
        Repository
      >
    Repository_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_CONTAINER__VAR_OUT_CH_)
#define _CORBA_CONTAINER__VAR_OUT_CH_

  class Container;
  typedef Container *Container_ptr;

  typedef
    TAO_Objref_Var_T<
        Container
      >
    Container_var;
  
  typedef
    TAO_Objref_Out_T<
        Container
      >
    Container_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_IFR_Client_Export Contained
    : public virtual ::CORBA::IRObject
  
  {
  public:
    friend class TAO::Narrow_Utils<Contained>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Contained_ptr _ptr_type;
    typedef Contained_var _var_type;
    typedef Contained_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Contained_ptr _duplicate (Contained_ptr obj);

    static void _tao_release (Contained_ptr obj);

    static Contained_ptr _narrow (::CORBA::Object_ptr obj);
    static Contained_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Contained_ptr _nil (void);

    virtual char * id (
      void);

    virtual void id (
      const char * id);

    virtual char * name (
      void);

    virtual void name (
      const char * name);

    virtual char * version (
      void);

    virtual void version (
      const char * version);

    virtual ::CORBA::Container_ptr defined_in (
      void);

    virtual char * absolute_name (
      void);

    virtual ::CORBA::Repository_ptr containing_repository (
      void);

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:261

    struct Description;

    typedef
      ::TAO_Var_Var_T<
          Description
        >
      Description_var;
    
    typedef
      ::TAO_Out_T<
          Description
        >
      Description_out;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

    struct TAO_IFR_Client_Export Description
    {

      // TAO_IDL - Generated from
      // .\be\be_type.cpp:307
      
      typedef Description_var _var_type;
      typedef Description_out _out_type;

      static void _tao_any_destructor (void *);
      
      CORBA::DefinitionKind kind;
      ::CORBA::Any value;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_Description;

    virtual ::CORBA::Contained::Description * describe (
      void);

    virtual void move (
      ::CORBA::Container_ptr new_container,
      const char * new_name,
      const char * new_version);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_Contained_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    Contained (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_Contained_setup_collocation (void);

    // Concrete non-local interface only.
    Contained (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Contained (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Contained (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Contained (const Contained &);

    void operator= (const Contained &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_Contained;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_MODULEDEF__VAR_OUT_CH_)
#define _CORBA_MODULEDEF__VAR_OUT_CH_

  class ModuleDef;
  typedef ModuleDef *ModuleDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ModuleDef
      >
    ModuleDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ModuleDef
      >
    ModuleDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_CONSTANTDEF__VAR_OUT_CH_)
#define _CORBA_CONSTANTDEF__VAR_OUT_CH_

  class ConstantDef;
  typedef ConstantDef *ConstantDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ConstantDef
      >
    ConstantDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ConstantDef
      >
    ConstantDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_IDLTYPE__VAR_OUT_CH_)
#define _CORBA_IDLTYPE__VAR_OUT_CH_

  class IDLType;
  typedef IDLType *IDLType_ptr;

  typedef
    TAO_Objref_Var_T<
        IDLType
      >
    IDLType_var;
  
  typedef
    TAO_Objref_Out_T<
        IDLType
      >
    IDLType_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_STRUCTDEF__VAR_OUT_CH_)
#define _CORBA_STRUCTDEF__VAR_OUT_CH_

  class StructDef;
  typedef StructDef *StructDef_ptr;

  typedef
    TAO_Objref_Var_T<
        StructDef
      >
    StructDef_var;
  
  typedef
    TAO_Objref_Out_T<
        StructDef
      >
    StructDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_UNIONDEF__VAR_OUT_CH_)
#define _CORBA_UNIONDEF__VAR_OUT_CH_

  class UnionDef;
  typedef UnionDef *UnionDef_ptr;

  typedef
    TAO_Objref_Var_T<
        UnionDef
      >
    UnionDef_var;
  
  typedef
    TAO_Objref_Out_T<
        UnionDef
      >
    UnionDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_ENUMDEF__VAR_OUT_CH_)
#define _CORBA_ENUMDEF__VAR_OUT_CH_

  class EnumDef;
  typedef EnumDef *EnumDef_ptr;

  typedef
    TAO_Objref_Var_T<
        EnumDef
      >
    EnumDef_var;
  
  typedef
    TAO_Objref_Out_T<
        EnumDef
      >
    EnumDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_ALIASDEF__VAR_OUT_CH_)
#define _CORBA_ALIASDEF__VAR_OUT_CH_

  class AliasDef;
  typedef AliasDef *AliasDef_ptr;

  typedef
    TAO_Objref_Var_T<
        AliasDef
      >
    AliasDef_var;
  
  typedef
    TAO_Objref_Out_T<
        AliasDef
      >
    AliasDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_INTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_INTERFACEDEF__VAR_OUT_CH_

  class InterfaceDef;
  typedef InterfaceDef *InterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        InterfaceDef
      >
    InterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        InterfaceDef
      >
    InterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_INTERFACEDEFSEQ_CH_)
#define _CORBA_INTERFACEDEFSEQ_CH_

  class InterfaceDefSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        InterfaceDefSeq
      >
    InterfaceDefSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        InterfaceDefSeq
      >
    InterfaceDefSeq_out;

  class TAO_IFR_Client_Export InterfaceDefSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            InterfaceDef,
            InterfaceDef_var
          >
  {
  public:
    InterfaceDefSeq (void);
    InterfaceDefSeq ( ::CORBA::ULong max);
    InterfaceDefSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      InterfaceDef_ptr* buffer, 
      ::CORBA::Boolean release = false);
    InterfaceDefSeq (const InterfaceDefSeq &);
    virtual ~InterfaceDefSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef InterfaceDefSeq_var _var_type;
    typedef InterfaceDefSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_InterfaceDefSeq;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_EXCEPTIONDEF__VAR_OUT_CH_)
#define _CORBA_EXCEPTIONDEF__VAR_OUT_CH_

  class ExceptionDef;
  typedef ExceptionDef *ExceptionDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ExceptionDef
      >
    ExceptionDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExceptionDef
      >
    ExceptionDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_NATIVEDEF__VAR_OUT_CH_)
#define _CORBA_NATIVEDEF__VAR_OUT_CH_

  class NativeDef;
  typedef NativeDef *NativeDef_ptr;

  typedef
    TAO_Objref_Var_T<
        NativeDef
      >
    NativeDef_var;
  
  typedef
    TAO_Objref_Out_T<
        NativeDef
      >
    NativeDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_VALUEDEF__VAR_OUT_CH_)
#define _CORBA_VALUEDEF__VAR_OUT_CH_

  class ValueDef;
  typedef ValueDef *ValueDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ValueDef
      >
    ValueDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ValueDef
      >
    ValueDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_VALUEDEFSEQ_CH_)
#define _CORBA_VALUEDEFSEQ_CH_

  class ValueDefSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ValueDefSeq
      >
    ValueDefSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ValueDefSeq
      >
    ValueDefSeq_out;

  class TAO_IFR_Client_Export ValueDefSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            ValueDef,
            ValueDef_var
          >
  {
  public:
    ValueDefSeq (void);
    ValueDefSeq ( ::CORBA::ULong max);
    ValueDefSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ValueDef_ptr* buffer, 
      ::CORBA::Boolean release = false);
    ValueDefSeq (const ValueDefSeq &);
    virtual ~ValueDefSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ValueDefSeq_var _var_type;
    typedef ValueDefSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ValueDefSeq;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_VALUEBOXDEF__VAR_OUT_CH_)
#define _CORBA_VALUEBOXDEF__VAR_OUT_CH_

  class ValueBoxDef;
  typedef ValueBoxDef *ValueBoxDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ValueBoxDef
      >
    ValueBoxDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ValueBoxDef
      >
    ValueBoxDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_ABSTRACTINTERFACEDEF__VAR_OUT_CH_

  class AbstractInterfaceDef;
  typedef AbstractInterfaceDef *AbstractInterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        AbstractInterfaceDef
      >
    AbstractInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        AbstractInterfaceDef
      >
    AbstractInterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_ABSTRACTINTERFACEDEFSEQ_CH_)
#define _CORBA_ABSTRACTINTERFACEDEFSEQ_CH_

  class AbstractInterfaceDefSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        AbstractInterfaceDefSeq
      >
    AbstractInterfaceDefSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        AbstractInterfaceDefSeq
      >
    AbstractInterfaceDefSeq_out;

  class TAO_IFR_Client_Export AbstractInterfaceDefSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            AbstractInterfaceDef,
            AbstractInterfaceDef_var
          >
  {
  public:
    AbstractInterfaceDefSeq (void);
    AbstractInterfaceDefSeq ( ::CORBA::ULong max);
    AbstractInterfaceDefSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      AbstractInterfaceDef_ptr* buffer, 
      ::CORBA::Boolean release = false);
    AbstractInterfaceDefSeq (const AbstractInterfaceDefSeq &);
    virtual ~AbstractInterfaceDefSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AbstractInterfaceDefSeq_var _var_type;
    typedef AbstractInterfaceDefSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_AbstractInterfaceDefSeq;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_LOCALINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_LOCALINTERFACEDEF__VAR_OUT_CH_

  class LocalInterfaceDef;
  typedef LocalInterfaceDef *LocalInterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        LocalInterfaceDef
      >
    LocalInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        LocalInterfaceDef
      >
    LocalInterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_LOCALINTERFACEDEFSEQ_CH_)
#define _CORBA_LOCALINTERFACEDEFSEQ_CH_

  class LocalInterfaceDefSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        LocalInterfaceDefSeq
      >
    LocalInterfaceDefSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        LocalInterfaceDefSeq
      >
    LocalInterfaceDefSeq_out;

  class TAO_IFR_Client_Export LocalInterfaceDefSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            LocalInterfaceDef,
            LocalInterfaceDef_var
          >
  {
  public:
    LocalInterfaceDefSeq (void);
    LocalInterfaceDefSeq ( ::CORBA::ULong max);
    LocalInterfaceDefSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      LocalInterfaceDef_ptr* buffer, 
      ::CORBA::Boolean release = false);
    LocalInterfaceDefSeq (const LocalInterfaceDefSeq &);
    virtual ~LocalInterfaceDefSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef LocalInterfaceDefSeq_var _var_type;
    typedef LocalInterfaceDefSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_LocalInterfaceDefSeq;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_EXTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTINTERFACEDEF__VAR_OUT_CH_

  class ExtInterfaceDef;
  typedef ExtInterfaceDef *ExtInterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ExtInterfaceDef
      >
    ExtInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtInterfaceDef
      >
    ExtInterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_EXTINTERFACEDEFSEQ_CH_)
#define _CORBA_EXTINTERFACEDEFSEQ_CH_

  class ExtInterfaceDefSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ExtInterfaceDefSeq
      >
    ExtInterfaceDefSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ExtInterfaceDefSeq
      >
    ExtInterfaceDefSeq_out;

  class TAO_IFR_Client_Export ExtInterfaceDefSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            ExtInterfaceDef,
            ExtInterfaceDef_var
          >
  {
  public:
    ExtInterfaceDefSeq (void);
    ExtInterfaceDefSeq ( ::CORBA::ULong max);
    ExtInterfaceDefSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ExtInterfaceDef_ptr* buffer, 
      ::CORBA::Boolean release = false);
    ExtInterfaceDefSeq (const ExtInterfaceDefSeq &);
    virtual ~ExtInterfaceDefSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ExtInterfaceDefSeq_var _var_type;
    typedef ExtInterfaceDefSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtInterfaceDefSeq;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_EXTVALUEDEF__VAR_OUT_CH_)
#define _CORBA_EXTVALUEDEF__VAR_OUT_CH_

  class ExtValueDef;
  typedef ExtValueDef *ExtValueDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ExtValueDef
      >
    ExtValueDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtValueDef
      >
    ExtValueDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_EXTVALUEDEFSEQ_CH_)
#define _CORBA_EXTVALUEDEFSEQ_CH_

  class ExtValueDefSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ExtValueDefSeq
      >
    ExtValueDefSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ExtValueDefSeq
      >
    ExtValueDefSeq_out;

  class TAO_IFR_Client_Export ExtValueDefSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            ExtValueDef,
            ExtValueDef_var
          >
  {
  public:
    ExtValueDefSeq (void);
    ExtValueDefSeq ( ::CORBA::ULong max);
    ExtValueDefSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ExtValueDef_ptr* buffer, 
      ::CORBA::Boolean release = false);
    ExtValueDefSeq (const ExtValueDefSeq &);
    virtual ~ExtValueDefSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ExtValueDefSeq_var _var_type;
    typedef ExtValueDefSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtValueDefSeq;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__VAR_OUT_CH_

  class ExtAbstractInterfaceDef;
  typedef ExtAbstractInterfaceDef *ExtAbstractInterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ExtAbstractInterfaceDef
      >
    ExtAbstractInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtAbstractInterfaceDef
      >
    ExtAbstractInterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEFSEQ_CH_)
#define _CORBA_EXTABSTRACTINTERFACEDEFSEQ_CH_

  class ExtAbstractInterfaceDefSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ExtAbstractInterfaceDefSeq
      >
    ExtAbstractInterfaceDefSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ExtAbstractInterfaceDefSeq
      >
    ExtAbstractInterfaceDefSeq_out;

  class TAO_IFR_Client_Export ExtAbstractInterfaceDefSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            ExtAbstractInterfaceDef,
            ExtAbstractInterfaceDef_var
          >
  {
  public:
    ExtAbstractInterfaceDefSeq (void);
    ExtAbstractInterfaceDefSeq ( ::CORBA::ULong max);
    ExtAbstractInterfaceDefSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ExtAbstractInterfaceDef_ptr* buffer, 
      ::CORBA::Boolean release = false);
    ExtAbstractInterfaceDefSeq (const ExtAbstractInterfaceDefSeq &);
    virtual ~ExtAbstractInterfaceDefSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ExtAbstractInterfaceDefSeq_var _var_type;
    typedef ExtAbstractInterfaceDefSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtAbstractInterfaceDefSeq;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTLOCALINTERFACEDEF__VAR_OUT_CH_

  class ExtLocalInterfaceDef;
  typedef ExtLocalInterfaceDef *ExtLocalInterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ExtLocalInterfaceDef
      >
    ExtLocalInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtLocalInterfaceDef
      >
    ExtLocalInterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_EXTLOCALINTERFACEDEFSEQ_CH_)
#define _CORBA_EXTLOCALINTERFACEDEFSEQ_CH_

  class ExtLocalInterfaceDefSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ExtLocalInterfaceDefSeq
      >
    ExtLocalInterfaceDefSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ExtLocalInterfaceDefSeq
      >
    ExtLocalInterfaceDefSeq_out;

  class TAO_IFR_Client_Export ExtLocalInterfaceDefSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            ExtLocalInterfaceDef,
            ExtLocalInterfaceDef_var
          >
  {
  public:
    ExtLocalInterfaceDefSeq (void);
    ExtLocalInterfaceDefSeq ( ::CORBA::ULong max);
    ExtLocalInterfaceDefSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ExtLocalInterfaceDef_ptr* buffer, 
      ::CORBA::Boolean release = false);
    ExtLocalInterfaceDefSeq (const ExtLocalInterfaceDefSeq &);
    virtual ~ExtLocalInterfaceDefSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ExtLocalInterfaceDefSeq_var _var_type;
    typedef ExtLocalInterfaceDefSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtLocalInterfaceDefSeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_CONTAINEDSEQ_CH_)
#define _CORBA_CONTAINEDSEQ_CH_

  class ContainedSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ContainedSeq
      >
    ContainedSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ContainedSeq
      >
    ContainedSeq_out;

  class TAO_IFR_Client_Export ContainedSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            Contained,
            Contained_var
          >
  {
  public:
    ContainedSeq (void);
    ContainedSeq ( ::CORBA::ULong max);
    ContainedSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Contained_ptr* buffer, 
      ::CORBA::Boolean release = false);
    ContainedSeq (const ContainedSeq &);
    virtual ~ContainedSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ContainedSeq_var _var_type;
    typedef ContainedSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ContainedSeq;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct StructMember;

  typedef
    ::TAO_Var_Var_T<
        StructMember
      >
    StructMember_var;
  
  typedef
    ::TAO_Out_T<
        StructMember
      >
    StructMember_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_IFR_Client_Export StructMember
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef StructMember_var _var_type;
    typedef StructMember_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::CORBA::TypeCode_var type;
    CORBA::IDLType_var type_def;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_StructMember;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_STRUCTMEMBERSEQ_CH_)
#define _CORBA_STRUCTMEMBERSEQ_CH_

  class StructMemberSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        StructMemberSeq
      >
    StructMemberSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        StructMemberSeq
      >
    StructMemberSeq_out;

  class TAO_IFR_Client_Export StructMemberSeq
    : public
        ::TAO::unbounded_value_sequence<
            StructMember
          >
  {
  public:
    StructMemberSeq (void);
    StructMemberSeq ( ::CORBA::ULong max);
    StructMemberSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      StructMember* buffer, 
      ::CORBA::Boolean release = false);
    StructMemberSeq (const StructMemberSeq &);
    virtual ~StructMemberSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef StructMemberSeq_var _var_type;
    typedef StructMemberSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_StructMemberSeq;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct Initializer;

  typedef
    ::TAO_Var_Var_T<
        Initializer
      >
    Initializer_var;
  
  typedef
    ::TAO_Out_T<
        Initializer
      >
    Initializer_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_IFR_Client_Export Initializer
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Initializer_var _var_type;
    typedef Initializer_out _out_type;

    static void _tao_any_destructor (void *);
    
    CORBA::StructMemberSeq members;
    ::TAO::String_Manager name;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_Initializer;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_INITIALIZERSEQ_CH_)
#define _CORBA_INITIALIZERSEQ_CH_

  class InitializerSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        InitializerSeq
      >
    InitializerSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        InitializerSeq
      >
    InitializerSeq_out;

  class TAO_IFR_Client_Export InitializerSeq
    : public
        ::TAO::unbounded_value_sequence<
            Initializer
          >
  {
  public:
    InitializerSeq (void);
    InitializerSeq ( ::CORBA::ULong max);
    InitializerSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Initializer* buffer, 
      ::CORBA::Boolean release = false);
    InitializerSeq (const InitializerSeq &);
    virtual ~InitializerSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef InitializerSeq_var _var_type;
    typedef InitializerSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_InitializerSeq;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct ExceptionDescription;

  typedef
    ::TAO_Var_Var_T<
        ExceptionDescription
      >
    ExceptionDescription_var;
  
  typedef
    ::TAO_Out_T<
        ExceptionDescription
      >
    ExceptionDescription_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_IFR_Client_Export ExceptionDescription
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ExceptionDescription_var _var_type;
    typedef ExceptionDescription_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager id;
    ::TAO::String_Manager defined_in;
    ::TAO::String_Manager version;
    ::CORBA::TypeCode_var type;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExceptionDescription;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_EXCDESCRIPTIONSEQ_CH_)
#define _CORBA_EXCDESCRIPTIONSEQ_CH_

  class ExcDescriptionSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ExcDescriptionSeq
      >
    ExcDescriptionSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ExcDescriptionSeq
      >
    ExcDescriptionSeq_out;

  class TAO_IFR_Client_Export ExcDescriptionSeq
    : public
        ::TAO::unbounded_value_sequence<
            ExceptionDescription
          >
  {
  public:
    ExcDescriptionSeq (void);
    ExcDescriptionSeq ( ::CORBA::ULong max);
    ExcDescriptionSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ExceptionDescription* buffer, 
      ::CORBA::Boolean release = false);
    ExcDescriptionSeq (const ExcDescriptionSeq &);
    virtual ~ExcDescriptionSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ExcDescriptionSeq_var _var_type;
    typedef ExcDescriptionSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExcDescriptionSeq;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct ExtInitializer;

  typedef
    ::TAO_Var_Var_T<
        ExtInitializer
      >
    ExtInitializer_var;
  
  typedef
    ::TAO_Out_T<
        ExtInitializer
      >
    ExtInitializer_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_IFR_Client_Export ExtInitializer
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ExtInitializer_var _var_type;
    typedef ExtInitializer_out _out_type;

    static void _tao_any_destructor (void *);
    
    CORBA::StructMemberSeq members;
    CORBA::ExcDescriptionSeq exceptions;
    ::TAO::String_Manager name;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtInitializer;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_EXTINITIALIZERSEQ_CH_)
#define _CORBA_EXTINITIALIZERSEQ_CH_

  class ExtInitializerSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ExtInitializerSeq
      >
    ExtInitializerSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ExtInitializerSeq
      >
    ExtInitializerSeq_out;

  class TAO_IFR_Client_Export ExtInitializerSeq
    : public
        ::TAO::unbounded_value_sequence<
            ExtInitializer
          >
  {
  public:
    ExtInitializerSeq (void);
    ExtInitializerSeq ( ::CORBA::ULong max);
    ExtInitializerSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ExtInitializer* buffer, 
      ::CORBA::Boolean release = false);
    ExtInitializerSeq (const ExtInitializerSeq &);
    virtual ~ExtInitializerSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ExtInitializerSeq_var _var_type;
    typedef ExtInitializerSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtInitializerSeq;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct UnionMember;

  typedef
    ::TAO_Var_Var_T<
        UnionMember
      >
    UnionMember_var;
  
  typedef
    ::TAO_Out_T<
        UnionMember
      >
    UnionMember_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_IFR_Client_Export UnionMember
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef UnionMember_var _var_type;
    typedef UnionMember_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::CORBA::Any label;
    ::CORBA::TypeCode_var type;
    CORBA::IDLType_var type_def;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_UnionMember;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_UNIONMEMBERSEQ_CH_)
#define _CORBA_UNIONMEMBERSEQ_CH_

  class UnionMemberSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        UnionMemberSeq
      >
    UnionMemberSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        UnionMemberSeq
      >
    UnionMemberSeq_out;

  class TAO_IFR_Client_Export UnionMemberSeq
    : public
        ::TAO::unbounded_value_sequence<
            UnionMember
          >
  {
  public:
    UnionMemberSeq (void);
    UnionMemberSeq ( ::CORBA::ULong max);
    UnionMemberSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      UnionMember* buffer, 
      ::CORBA::Boolean release = false);
    UnionMemberSeq (const UnionMemberSeq &);
    virtual ~UnionMemberSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef UnionMemberSeq_var _var_type;
    typedef UnionMemberSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_UnionMemberSeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_ENUMMEMBERSEQ_CH_)
#define _CORBA_ENUMMEMBERSEQ_CH_

  class EnumMemberSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        EnumMemberSeq
      >
    EnumMemberSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        EnumMemberSeq
      >
    EnumMemberSeq_out;

  class TAO_IFR_Client_Export EnumMemberSeq
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    EnumMemberSeq (void);
    EnumMemberSeq ( ::CORBA::ULong max);
    EnumMemberSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer, 
      ::CORBA::Boolean release = false);
    EnumMemberSeq (const EnumMemberSeq &);
    virtual ~EnumMemberSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef EnumMemberSeq_var _var_type;
    typedef EnumMemberSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_EnumMemberSeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_IFR_Client_Export Container
    : public virtual ::CORBA::IRObject
  
  {
  public:
    friend class TAO::Narrow_Utils<Container>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Container_ptr _ptr_type;
    typedef Container_var _var_type;
    typedef Container_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Container_ptr _duplicate (Container_ptr obj);

    static void _tao_release (Container_ptr obj);

    static Container_ptr _narrow (::CORBA::Object_ptr obj);
    static Container_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Container_ptr _nil (void);

    virtual ::CORBA::Contained_ptr lookup (
      const char * search_name);

    virtual ::CORBA::ContainedSeq * contents (
      ::CORBA::DefinitionKind limit_type,
      ::CORBA::Boolean exclude_inherited);

    virtual ::CORBA::ContainedSeq * lookup_name (
      const char * search_name,
      ::CORBA::Long levels_to_search,
      ::CORBA::DefinitionKind limit_type,
      ::CORBA::Boolean exclude_inherited);

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:261

    struct Description;

    typedef
      ::TAO_Var_Var_T<
          Description
        >
      Description_var;
    
    typedef
      ::TAO_Out_T<
          Description
        >
      Description_out;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

    struct TAO_IFR_Client_Export Description
    {

      // TAO_IDL - Generated from
      // .\be\be_type.cpp:307
      
      typedef Description_var _var_type;
      typedef Description_out _out_type;

      static void _tao_any_destructor (void *);
      
      CORBA::Contained_var contained_object;
      CORBA::DefinitionKind kind;
      ::CORBA::Any value;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_Description;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_CORBA_CONTAINER_DESCRIPTIONSEQ_CH_)
#define _CORBA_CONTAINER_DESCRIPTIONSEQ_CH_

    class DescriptionSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          DescriptionSeq
        >
      DescriptionSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DescriptionSeq
        >
      DescriptionSeq_out;

    class TAO_IFR_Client_Export DescriptionSeq
      : public
          ::TAO::unbounded_value_sequence<
              Description
            >
    {
    public:
      DescriptionSeq (void);
      DescriptionSeq ( ::CORBA::ULong max);
      DescriptionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        Description* buffer, 
        ::CORBA::Boolean release = false);
      DescriptionSeq (const DescriptionSeq &);
      virtual ~DescriptionSeq (void);
      

      // TAO_IDL - Generated from
      // .\be\be_type.cpp:307
      
      typedef DescriptionSeq_var _var_type;
      typedef DescriptionSeq_out _out_type;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_DescriptionSeq;

    virtual ::CORBA::Container::DescriptionSeq * describe_contents (
      ::CORBA::DefinitionKind limit_type,
      ::CORBA::Boolean exclude_inherited,
      ::CORBA::Long max_returned_objs);

    virtual ::CORBA::ModuleDef_ptr create_module (
      const char * id,
      const char * name,
      const char * version);

    virtual ::CORBA::ConstantDef_ptr create_constant (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr type,
      const ::CORBA::Any & value);

    virtual ::CORBA::StructDef_ptr create_struct (
      const char * id,
      const char * name,
      const char * version,
      const ::CORBA::StructMemberSeq & members);

    virtual ::CORBA::UnionDef_ptr create_union (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr discriminator_type,
      const ::CORBA::UnionMemberSeq & members);

    virtual ::CORBA::EnumDef_ptr create_enum (
      const char * id,
      const char * name,
      const char * version,
      const ::CORBA::EnumMemberSeq & members);

    virtual ::CORBA::AliasDef_ptr create_alias (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr original_type);

    virtual ::CORBA::InterfaceDef_ptr create_interface (
      const char * id,
      const char * name,
      const char * version,
      const ::CORBA::InterfaceDefSeq & base_interfaces);

    virtual ::CORBA::ValueDef_ptr create_value (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::Boolean is_custom,
      ::CORBA::Boolean is_abstract,
      ::CORBA::ValueDef_ptr base_value,
      ::CORBA::Boolean is_truncatable,
      const ::CORBA::ValueDefSeq & abstract_base_values,
      const ::CORBA::InterfaceDefSeq & supported_interfaces,
      const ::CORBA::InitializerSeq & initializers);

    virtual ::CORBA::ValueBoxDef_ptr create_value_box (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr original_type_def);

    virtual ::CORBA::ExceptionDef_ptr create_exception (
      const char * id,
      const char * name,
      const char * version,
      const ::CORBA::StructMemberSeq & members);

    virtual ::CORBA::NativeDef_ptr create_native (
      const char * id,
      const char * name,
      const char * version);

    virtual ::CORBA::AbstractInterfaceDef_ptr create_abstract_interface (
      const char * id,
      const char * name,
      const char * version,
      const ::CORBA::AbstractInterfaceDefSeq & base_interfaces);

    virtual ::CORBA::LocalInterfaceDef_ptr create_local_interface (
      const char * id,
      const char * name,
      const char * version,
      const ::CORBA::InterfaceDefSeq & base_interfaces);

    virtual ::CORBA::ExtValueDef_ptr create_ext_value (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::Boolean is_custom,
      ::CORBA::Boolean is_abstract,
      ::CORBA::ValueDef_ptr base_value,
      ::CORBA::Boolean is_truncatable,
      const ::CORBA::ValueDefSeq & abstract_base_values,
      const ::CORBA::InterfaceDefSeq & supported_interfaces,
      const ::CORBA::ExtInitializerSeq & initializers);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_Container_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    Container (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_Container_setup_collocation (void);

    // Concrete non-local interface only.
    Container (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Container (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Container (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Container (const Container &);

    void operator= (const Container &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_Container;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_IFR_Client_Export IDLType
    : public virtual ::CORBA::IRObject
  
  {
  public:
    friend class TAO::Narrow_Utils<IDLType>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef IDLType_ptr _ptr_type;
    typedef IDLType_var _var_type;
    typedef IDLType_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static IDLType_ptr _duplicate (IDLType_ptr obj);

    static void _tao_release (IDLType_ptr obj);

    static IDLType_ptr _narrow (::CORBA::Object_ptr obj);
    static IDLType_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static IDLType_ptr _nil (void);

    virtual ::CORBA::TypeCode_ptr type (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_IDLType_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    IDLType (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_IDLType_setup_collocation (void);

    // Concrete non-local interface only.
    IDLType (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    IDLType (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~IDLType (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    IDLType (const IDLType &);

    void operator= (const IDLType &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_IDLType;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_CORBA_TYPEDEFDEF__VAR_OUT_CH_)
#define _CORBA_TYPEDEFDEF__VAR_OUT_CH_

  class TypedefDef;
  typedef TypedefDef *TypedefDef_ptr;

  typedef
    TAO_Objref_Var_T<
        TypedefDef
      >
    TypedefDef_var;
  
  typedef
    TAO_Objref_Out_T<
        TypedefDef
      >
    TypedefDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_IFR_Client_Export TypedefDef
    : public virtual ::CORBA::Contained,
      public virtual ::CORBA::IDLType
  
  {
  public:
    friend class TAO::Narrow_Utils<TypedefDef>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef TypedefDef_ptr _ptr_type;
    typedef TypedefDef_var _var_type;
    typedef TypedefDef_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static TypedefDef_ptr _duplicate (TypedefDef_ptr obj);

    static void _tao_release (TypedefDef_ptr obj);

    static TypedefDef_ptr _narrow (::CORBA::Object_ptr obj);
    static TypedefDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TypedefDef_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_TypedefDef_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    TypedefDef (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_TypedefDef_setup_collocation (void);

    // Concrete non-local interface only.
    TypedefDef (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    TypedefDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~TypedefDef (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TypedefDef (const TypedefDef &);

    void operator= (const TypedefDef &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_TypedefDef;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct TypeDescription;

  typedef
    ::TAO_Var_Var_T<
        TypeDescription
      >
    TypeDescription_var;
  
  typedef
    ::TAO_Out_T<
        TypeDescription
      >
    TypeDescription_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_IFR_Client_Export TypeDescription
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef TypeDescription_var _var_type;
    typedef TypeDescription_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager id;
    ::TAO::String_Manager defined_in;
    ::TAO::String_Manager version;
    ::CORBA::TypeCode_var type;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_TypeDescription;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module CORBA

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::CORBA::DefinitionKind>
    : public
        Basic_Arg_Traits_T<
            ::CORBA::DefinitionKind,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_IROBJECT__ARG_TRAITS_)
#define _CORBA_IROBJECT__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::IRObject>
    : public
        Object_Arg_Traits_T<
            ::CORBA::IRObject_ptr,
            ::CORBA::IRObject_var,
            ::CORBA::IRObject_out,
            TAO::Objref_Traits<CORBA::IRObject>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_CONTAINED__ARG_TRAITS_)
#define _CORBA_CONTAINED__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::Contained>
    : public
        Object_Arg_Traits_T<
            ::CORBA::Contained_ptr,
            ::CORBA::Contained_var,
            ::CORBA::Contained_out,
            TAO::Objref_Traits<CORBA::Contained>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CORBA::Contained::Description>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::Contained::Description,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_REPOSITORY__ARG_TRAITS_)
#define _CORBA_REPOSITORY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::Repository>
    : public
        Object_Arg_Traits_T<
            ::CORBA::Repository_ptr,
            ::CORBA::Repository_var,
            ::CORBA::Repository_out,
            TAO::Objref_Traits<CORBA::Repository>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_CONTAINER__ARG_TRAITS_)
#define _CORBA_CONTAINER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::Container>
    : public
        Object_Arg_Traits_T<
            ::CORBA::Container_ptr,
            ::CORBA::Container_var,
            ::CORBA::Container_out,
            TAO::Objref_Traits<CORBA::Container>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CORBA::Container::Description>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::Container::Description,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::Container::DescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::Container::DescriptionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_MODULEDEF__ARG_TRAITS_)
#define _CORBA_MODULEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ModuleDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::ModuleDef_ptr,
            ::CORBA::ModuleDef_var,
            ::CORBA::ModuleDef_out,
            TAO::Objref_Traits<CORBA::ModuleDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_CONSTANTDEF__ARG_TRAITS_)
#define _CORBA_CONSTANTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ConstantDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::ConstantDef_ptr,
            ::CORBA::ConstantDef_var,
            ::CORBA::ConstantDef_out,
            TAO::Objref_Traits<CORBA::ConstantDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_IDLTYPE__ARG_TRAITS_)
#define _CORBA_IDLTYPE__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::IDLType>
    : public
        Object_Arg_Traits_T<
            ::CORBA::IDLType_ptr,
            ::CORBA::IDLType_var,
            ::CORBA::IDLType_out,
            TAO::Objref_Traits<CORBA::IDLType>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_STRUCTDEF__ARG_TRAITS_)
#define _CORBA_STRUCTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::StructDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::StructDef_ptr,
            ::CORBA::StructDef_var,
            ::CORBA::StructDef_out,
            TAO::Objref_Traits<CORBA::StructDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_UNIONDEF__ARG_TRAITS_)
#define _CORBA_UNIONDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::UnionDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::UnionDef_ptr,
            ::CORBA::UnionDef_var,
            ::CORBA::UnionDef_out,
            TAO::Objref_Traits<CORBA::UnionDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_ENUMDEF__ARG_TRAITS_)
#define _CORBA_ENUMDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::EnumDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::EnumDef_ptr,
            ::CORBA::EnumDef_var,
            ::CORBA::EnumDef_out,
            TAO::Objref_Traits<CORBA::EnumDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_ALIASDEF__ARG_TRAITS_)
#define _CORBA_ALIASDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::AliasDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::AliasDef_ptr,
            ::CORBA::AliasDef_var,
            ::CORBA::AliasDef_out,
            TAO::Objref_Traits<CORBA::AliasDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_INTERFACEDEF__ARG_TRAITS_)
#define _CORBA_INTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::InterfaceDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::InterfaceDef_ptr,
            ::CORBA::InterfaceDef_var,
            ::CORBA::InterfaceDef_out,
            TAO::Objref_Traits<CORBA::InterfaceDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::InterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::InterfaceDefSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_EXCEPTIONDEF__ARG_TRAITS_)
#define _CORBA_EXCEPTIONDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExceptionDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::ExceptionDef_ptr,
            ::CORBA::ExceptionDef_var,
            ::CORBA::ExceptionDef_out,
            TAO::Objref_Traits<CORBA::ExceptionDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_NATIVEDEF__ARG_TRAITS_)
#define _CORBA_NATIVEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::NativeDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::NativeDef_ptr,
            ::CORBA::NativeDef_var,
            ::CORBA::NativeDef_out,
            TAO::Objref_Traits<CORBA::NativeDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_VALUEDEF__ARG_TRAITS_)
#define _CORBA_VALUEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ValueDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::ValueDef_ptr,
            ::CORBA::ValueDef_var,
            ::CORBA::ValueDef_out,
            TAO::Objref_Traits<CORBA::ValueDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::ValueDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ValueDefSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_VALUEBOXDEF__ARG_TRAITS_)
#define _CORBA_VALUEBOXDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ValueBoxDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::ValueBoxDef_ptr,
            ::CORBA::ValueBoxDef_var,
            ::CORBA::ValueBoxDef_out,
            TAO::Objref_Traits<CORBA::ValueBoxDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_ABSTRACTINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::AbstractInterfaceDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::AbstractInterfaceDef_ptr,
            ::CORBA::AbstractInterfaceDef_var,
            ::CORBA::AbstractInterfaceDef_out,
            TAO::Objref_Traits<CORBA::AbstractInterfaceDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::AbstractInterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::AbstractInterfaceDefSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_LOCALINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_LOCALINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::LocalInterfaceDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::LocalInterfaceDef_ptr,
            ::CORBA::LocalInterfaceDef_var,
            ::CORBA::LocalInterfaceDef_out,
            TAO::Objref_Traits<CORBA::LocalInterfaceDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::LocalInterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::LocalInterfaceDefSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_EXTINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_EXTINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExtInterfaceDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::ExtInterfaceDef_ptr,
            ::CORBA::ExtInterfaceDef_var,
            ::CORBA::ExtInterfaceDef_out,
            TAO::Objref_Traits<CORBA::ExtInterfaceDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::ExtInterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExtInterfaceDefSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_EXTVALUEDEF__ARG_TRAITS_)
#define _CORBA_EXTVALUEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExtValueDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::ExtValueDef_ptr,
            ::CORBA::ExtValueDef_var,
            ::CORBA::ExtValueDef_out,
            TAO::Objref_Traits<CORBA::ExtValueDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::ExtValueDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExtValueDefSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExtAbstractInterfaceDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::ExtAbstractInterfaceDef_ptr,
            ::CORBA::ExtAbstractInterfaceDef_var,
            ::CORBA::ExtAbstractInterfaceDef_out,
            TAO::Objref_Traits<CORBA::ExtAbstractInterfaceDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::ExtAbstractInterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExtAbstractInterfaceDefSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_EXTLOCALINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExtLocalInterfaceDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::ExtLocalInterfaceDef_ptr,
            ::CORBA::ExtLocalInterfaceDef_var,
            ::CORBA::ExtLocalInterfaceDef_out,
            TAO::Objref_Traits<CORBA::ExtLocalInterfaceDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::ExtLocalInterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExtLocalInterfaceDefSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::ContainedSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ContainedSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CORBA::StructMember>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::StructMember,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::StructMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::StructMemberSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CORBA::Initializer>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::Initializer,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::InitializerSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::InitializerSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CORBA::ExceptionDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExceptionDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::ExcDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExcDescriptionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CORBA::ExtInitializer>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExtInitializer,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::ExtInitializerSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExtInitializerSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CORBA::UnionMember>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::UnionMember,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::UnionMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::UnionMemberSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CORBA::EnumMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::EnumMemberSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_TYPEDEFDEF__ARG_TRAITS_)
#define _CORBA_TYPEDEFDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::TypedefDef>
    : public
        Object_Arg_Traits_T<
            ::CORBA::TypedefDef_ptr,
            ::CORBA::TypedefDef_var,
            ::CORBA::TypedefDef_out,
            TAO::Objref_Traits<CORBA::TypedefDef>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CORBA::TypeDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::TypeDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_Contained_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_Container_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_IDLType_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CORBA_IROBJECT__TRAITS_)
#define _CORBA_IROBJECT__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::IRObject>
  {
    static ::CORBA::IRObject_ptr duplicate (
        ::CORBA::IRObject_ptr p);
    static void release (
        ::CORBA::IRObject_ptr p);
    static ::CORBA::IRObject_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::IRObject_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_REPOSITORY__TRAITS_)
#define _CORBA_REPOSITORY__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::Repository>
  {
    static ::CORBA::Repository_ptr duplicate (
        ::CORBA::Repository_ptr p);
    static void release (
        ::CORBA::Repository_ptr p);
    static ::CORBA::Repository_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::Repository_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_CONTAINED__TRAITS_)
#define _CORBA_CONTAINED__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::Contained>
  {
    static ::CORBA::Contained_ptr duplicate (
        ::CORBA::Contained_ptr p);
    static void release (
        ::CORBA::Contained_ptr p);
    static ::CORBA::Contained_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::Contained_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_MODULEDEF__TRAITS_)
#define _CORBA_MODULEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ModuleDef>
  {
    static ::CORBA::ModuleDef_ptr duplicate (
        ::CORBA::ModuleDef_ptr p);
    static void release (
        ::CORBA::ModuleDef_ptr p);
    static ::CORBA::ModuleDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::ModuleDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_CONSTANTDEF__TRAITS_)
#define _CORBA_CONSTANTDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ConstantDef>
  {
    static ::CORBA::ConstantDef_ptr duplicate (
        ::CORBA::ConstantDef_ptr p);
    static void release (
        ::CORBA::ConstantDef_ptr p);
    static ::CORBA::ConstantDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::ConstantDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_STRUCTDEF__TRAITS_)
#define _CORBA_STRUCTDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::StructDef>
  {
    static ::CORBA::StructDef_ptr duplicate (
        ::CORBA::StructDef_ptr p);
    static void release (
        ::CORBA::StructDef_ptr p);
    static ::CORBA::StructDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::StructDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_UNIONDEF__TRAITS_)
#define _CORBA_UNIONDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::UnionDef>
  {
    static ::CORBA::UnionDef_ptr duplicate (
        ::CORBA::UnionDef_ptr p);
    static void release (
        ::CORBA::UnionDef_ptr p);
    static ::CORBA::UnionDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::UnionDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ENUMDEF__TRAITS_)
#define _CORBA_ENUMDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::EnumDef>
  {
    static ::CORBA::EnumDef_ptr duplicate (
        ::CORBA::EnumDef_ptr p);
    static void release (
        ::CORBA::EnumDef_ptr p);
    static ::CORBA::EnumDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::EnumDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ALIASDEF__TRAITS_)
#define _CORBA_ALIASDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::AliasDef>
  {
    static ::CORBA::AliasDef_ptr duplicate (
        ::CORBA::AliasDef_ptr p);
    static void release (
        ::CORBA::AliasDef_ptr p);
    static ::CORBA::AliasDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::AliasDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_INTERFACEDEF__TRAITS_)
#define _CORBA_INTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::InterfaceDef>
  {
    static ::CORBA::InterfaceDef_ptr duplicate (
        ::CORBA::InterfaceDef_ptr p);
    static void release (
        ::CORBA::InterfaceDef_ptr p);
    static ::CORBA::InterfaceDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::InterfaceDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXCEPTIONDEF__TRAITS_)
#define _CORBA_EXCEPTIONDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ExceptionDef>
  {
    static ::CORBA::ExceptionDef_ptr duplicate (
        ::CORBA::ExceptionDef_ptr p);
    static void release (
        ::CORBA::ExceptionDef_ptr p);
    static ::CORBA::ExceptionDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::ExceptionDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_NATIVEDEF__TRAITS_)
#define _CORBA_NATIVEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::NativeDef>
  {
    static ::CORBA::NativeDef_ptr duplicate (
        ::CORBA::NativeDef_ptr p);
    static void release (
        ::CORBA::NativeDef_ptr p);
    static ::CORBA::NativeDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::NativeDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_VALUEDEF__TRAITS_)
#define _CORBA_VALUEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ValueDef>
  {
    static ::CORBA::ValueDef_ptr duplicate (
        ::CORBA::ValueDef_ptr p);
    static void release (
        ::CORBA::ValueDef_ptr p);
    static ::CORBA::ValueDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::ValueDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_VALUEBOXDEF__TRAITS_)
#define _CORBA_VALUEBOXDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ValueBoxDef>
  {
    static ::CORBA::ValueBoxDef_ptr duplicate (
        ::CORBA::ValueBoxDef_ptr p);
    static void release (
        ::CORBA::ValueBoxDef_ptr p);
    static ::CORBA::ValueBoxDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::ValueBoxDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__TRAITS_)
#define _CORBA_ABSTRACTINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::AbstractInterfaceDef>
  {
    static ::CORBA::AbstractInterfaceDef_ptr duplicate (
        ::CORBA::AbstractInterfaceDef_ptr p);
    static void release (
        ::CORBA::AbstractInterfaceDef_ptr p);
    static ::CORBA::AbstractInterfaceDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::AbstractInterfaceDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_LOCALINTERFACEDEF__TRAITS_)
#define _CORBA_LOCALINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::LocalInterfaceDef>
  {
    static ::CORBA::LocalInterfaceDef_ptr duplicate (
        ::CORBA::LocalInterfaceDef_ptr p);
    static void release (
        ::CORBA::LocalInterfaceDef_ptr p);
    static ::CORBA::LocalInterfaceDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::LocalInterfaceDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTINTERFACEDEF__TRAITS_)
#define _CORBA_EXTINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ExtInterfaceDef>
  {
    static ::CORBA::ExtInterfaceDef_ptr duplicate (
        ::CORBA::ExtInterfaceDef_ptr p);
    static void release (
        ::CORBA::ExtInterfaceDef_ptr p);
    static ::CORBA::ExtInterfaceDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::ExtInterfaceDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTVALUEDEF__TRAITS_)
#define _CORBA_EXTVALUEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ExtValueDef>
  {
    static ::CORBA::ExtValueDef_ptr duplicate (
        ::CORBA::ExtValueDef_ptr p);
    static void release (
        ::CORBA::ExtValueDef_ptr p);
    static ::CORBA::ExtValueDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::ExtValueDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__TRAITS_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ExtAbstractInterfaceDef>
  {
    static ::CORBA::ExtAbstractInterfaceDef_ptr duplicate (
        ::CORBA::ExtAbstractInterfaceDef_ptr p);
    static void release (
        ::CORBA::ExtAbstractInterfaceDef_ptr p);
    static ::CORBA::ExtAbstractInterfaceDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::ExtAbstractInterfaceDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__TRAITS_)
#define _CORBA_EXTLOCALINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ExtLocalInterfaceDef>
  {
    static ::CORBA::ExtLocalInterfaceDef_ptr duplicate (
        ::CORBA::ExtLocalInterfaceDef_ptr p);
    static void release (
        ::CORBA::ExtLocalInterfaceDef_ptr p);
    static ::CORBA::ExtLocalInterfaceDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::ExtLocalInterfaceDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_IDLTYPE__TRAITS_)
#define _CORBA_IDLTYPE__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::IDLType>
  {
    static ::CORBA::IDLType_ptr duplicate (
        ::CORBA::IDLType_ptr p);
    static void release (
        ::CORBA::IDLType_ptr p);
    static ::CORBA::IDLType_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::IDLType_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_CONTAINER__TRAITS_)
#define _CORBA_CONTAINER__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::Container>
  {
    static ::CORBA::Container_ptr duplicate (
        ::CORBA::Container_ptr p);
    static void release (
        ::CORBA::Container_ptr p);
    static ::CORBA::Container_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::Container_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_TYPEDEFDEF__TRAITS_)
#define _CORBA_TYPEDEFDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::TypedefDef>
  {
    static ::CORBA::TypedefDef_ptr duplicate (
        ::CORBA::TypedefDef_ptr p);
    static void release (
        ::CORBA::TypedefDef_ptr p);
    static ::CORBA::TypedefDef_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::TypedefDef_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  

  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, ::CORBA::DefinitionKind);
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::DefinitionKind &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::DefinitionKind);
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::DefinitionKind &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, IRObject_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, IRObject_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IRObject_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::IRObject_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::IRObject_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::IRObject_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, Repository_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, Repository_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Repository *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::Repository_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::Repository_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::Repository *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, Contained_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, Contained_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Contained_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::Contained_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::Contained_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::Contained_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const ::CORBA::Contained::Description &); // copying version
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, ::CORBA::Contained::Description*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::Contained::Description *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::Contained::Description *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const CORBA::Contained::Description &); // copying version
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::Contained::Description*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::Contained::Description *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::Contained::Description *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ModuleDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ModuleDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ModuleDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ModuleDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ModuleDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ModuleDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ConstantDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ConstantDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ConstantDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ConstantDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ConstantDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ConstantDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, StructDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, StructDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StructDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::StructDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::StructDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::StructDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, UnionDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, UnionDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, UnionDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::UnionDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::UnionDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::UnionDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, EnumDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, EnumDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EnumDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::EnumDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::EnumDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::EnumDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, AliasDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, AliasDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AliasDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::AliasDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::AliasDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::AliasDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, InterfaceDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, InterfaceDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, InterfaceDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::InterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::InterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::InterfaceDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::InterfaceDefSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::InterfaceDefSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::InterfaceDefSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::InterfaceDefSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::InterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::InterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::InterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::InterfaceDefSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ExceptionDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ExceptionDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExceptionDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExceptionDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExceptionDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExceptionDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, NativeDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, NativeDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NativeDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::NativeDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::NativeDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::NativeDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ValueDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ValueDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ValueDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ValueDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ValueDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ValueDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ValueDefSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ValueDefSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::ValueDefSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ValueDefSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::ValueDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::ValueDefSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ValueDefSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ValueDefSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ValueBoxDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ValueBoxDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ValueBoxDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ValueBoxDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ValueBoxDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ValueBoxDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, AbstractInterfaceDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, AbstractInterfaceDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AbstractInterfaceDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::AbstractInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::AbstractInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::AbstractInterfaceDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::AbstractInterfaceDefSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::AbstractInterfaceDefSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::AbstractInterfaceDefSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::AbstractInterfaceDefSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::AbstractInterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::AbstractInterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::AbstractInterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::AbstractInterfaceDefSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, LocalInterfaceDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, LocalInterfaceDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LocalInterfaceDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::LocalInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::LocalInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::LocalInterfaceDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::LocalInterfaceDefSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::LocalInterfaceDefSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::LocalInterfaceDefSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::LocalInterfaceDefSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::LocalInterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::LocalInterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::LocalInterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::LocalInterfaceDefSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ExtInterfaceDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ExtInterfaceDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtInterfaceDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExtInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExtInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtInterfaceDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ExtInterfaceDefSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ExtInterfaceDefSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::ExtInterfaceDefSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExtInterfaceDefSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::ExtInterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::ExtInterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtInterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExtInterfaceDefSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ExtValueDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ExtValueDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtValueDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExtValueDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExtValueDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtValueDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ExtValueDefSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ExtValueDefSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::ExtValueDefSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExtValueDefSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::ExtValueDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::ExtValueDefSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtValueDefSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExtValueDefSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ExtAbstractInterfaceDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ExtAbstractInterfaceDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtAbstractInterfaceDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtAbstractInterfaceDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ExtAbstractInterfaceDefSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ExtAbstractInterfaceDefSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::ExtAbstractInterfaceDefSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExtAbstractInterfaceDefSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::ExtAbstractInterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::ExtAbstractInterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtAbstractInterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExtAbstractInterfaceDefSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:56



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ExtLocalInterfaceDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ExtLocalInterfaceDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtLocalInterfaceDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtLocalInterfaceDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ExtLocalInterfaceDefSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ExtLocalInterfaceDefSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::ExtLocalInterfaceDefSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExtLocalInterfaceDefSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::ExtLocalInterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::ExtLocalInterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtLocalInterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExtLocalInterfaceDefSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ContainedSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ContainedSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::ContainedSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ContainedSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::ContainedSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::ContainedSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ContainedSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ContainedSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const ::CORBA::StructMember &); // copying version
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, ::CORBA::StructMember*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::StructMember *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::StructMember *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const CORBA::StructMember &); // copying version
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::StructMember*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::StructMember *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::StructMember *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::StructMemberSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::StructMemberSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::StructMemberSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::StructMemberSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::StructMemberSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::StructMemberSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::StructMemberSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::StructMemberSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const ::CORBA::Initializer &); // copying version
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, ::CORBA::Initializer*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::Initializer *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::Initializer *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const CORBA::Initializer &); // copying version
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::Initializer*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::Initializer *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::Initializer *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::InitializerSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::InitializerSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::InitializerSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::InitializerSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::InitializerSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::InitializerSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::InitializerSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::InitializerSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const ::CORBA::ExceptionDescription &); // copying version
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, ::CORBA::ExceptionDescription*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::ExceptionDescription *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExceptionDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const CORBA::ExceptionDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExceptionDescription*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExceptionDescription *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExceptionDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ExcDescriptionSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ExcDescriptionSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::ExcDescriptionSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExcDescriptionSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::ExcDescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::ExcDescriptionSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExcDescriptionSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExcDescriptionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const ::CORBA::ExtInitializer &); // copying version
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, ::CORBA::ExtInitializer*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::ExtInitializer *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExtInitializer *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const CORBA::ExtInitializer &); // copying version
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::ExtInitializer*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtInitializer *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExtInitializer *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ExtInitializerSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ExtInitializerSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::ExtInitializerSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExtInitializerSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::ExtInitializerSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::ExtInitializerSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtInitializerSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExtInitializerSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const ::CORBA::UnionMember &); // copying version
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, ::CORBA::UnionMember*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::UnionMember *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::UnionMember *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const CORBA::UnionMember &); // copying version
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::UnionMember*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::UnionMember *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::UnionMember *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::UnionMemberSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::UnionMemberSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::UnionMemberSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::UnionMemberSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::UnionMemberSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::UnionMemberSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::UnionMemberSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::UnionMemberSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::EnumMemberSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::EnumMemberSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::EnumMemberSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::EnumMemberSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::EnumMemberSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::EnumMemberSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::EnumMemberSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::EnumMemberSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, Container_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, Container_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Container_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::Container_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::Container_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::Container_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const ::CORBA::Container::Description &); // copying version
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, ::CORBA::Container::Description*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::Container::Description *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::Container::Description *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const CORBA::Container::Description &); // copying version
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::Container::Description*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::Container::Description *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::Container::Description *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::Container::DescriptionSeq &); // copying version
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, ::CORBA::Container::DescriptionSeq*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::Container::DescriptionSeq *&); // deprecated
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::Container::DescriptionSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, const CORBA::Container::DescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, CORBA::Container::DescriptionSeq*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::Container::DescriptionSeq *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::Container::DescriptionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, IDLType_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, IDLType_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IDLType_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::IDLType_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::IDLType_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::IDLType_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, TypedefDef_ptr); // copying
  TAO_IFR_Client_Export void operator<<= ( ::CORBA::Any &, TypedefDef_ptr *); // non-copying
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TypedefDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::TypedefDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::TypedefDef_ptr *); // non-copying
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::TypedefDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const ::CORBA::TypeDescription &); // copying version
  TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, ::CORBA::TypeDescription*); // noncopying version
  TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::TypeDescription *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::TypeDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, const CORBA::TypeDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (::CORBA::Any &, CORBA::TypeDescription*); // noncopying version
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::TypeDescription *&); // deprecated
TAO_IFR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::TypeDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CORBA::DefinitionKind _tao_enumerator);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::DefinitionKind &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::IRObject_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::IRObject_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Repository_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Repository_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Contained_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Contained_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Contained::Description &);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Contained::Description &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ModuleDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ModuleDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ConstantDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ConstantDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::StructDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::StructDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::UnionDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::UnionDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::EnumDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::EnumDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AliasDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AliasDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_InterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_InterfaceDefSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceDefSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceDefSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_InterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExceptionDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExceptionDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::NativeDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::NativeDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ValueDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ValueDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_ValueDefSeq_H_
#define _TAO_CDR_OP_CORBA_ValueDefSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ValueDefSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ValueDefSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ValueDefSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ValueBoxDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ValueBoxDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AbstractInterfaceDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AbstractInterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_AbstractInterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_AbstractInterfaceDefSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AbstractInterfaceDefSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AbstractInterfaceDefSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_AbstractInterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::LocalInterfaceDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::LocalInterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_LocalInterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_LocalInterfaceDefSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::LocalInterfaceDefSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::LocalInterfaceDefSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_LocalInterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtInterfaceDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtInterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_ExtInterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExtInterfaceDefSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtInterfaceDefSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtInterfaceDefSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ExtInterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtValueDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtValueDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_ExtValueDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExtValueDefSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtValueDefSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtValueDefSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ExtValueDefSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAbstractInterfaceDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAbstractInterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_ExtAbstractInterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExtAbstractInterfaceDefSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAbstractInterfaceDefSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAbstractInterfaceDefSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ExtAbstractInterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:55



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtLocalInterfaceDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtLocalInterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_ExtLocalInterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExtLocalInterfaceDefSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtLocalInterfaceDefSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtLocalInterfaceDefSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ExtLocalInterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_ContainedSeq_H_
#define _TAO_CDR_OP_CORBA_ContainedSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ContainedSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ContainedSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ContainedSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::StructMember &);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::StructMember &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_StructMemberSeq_H_
#define _TAO_CDR_OP_CORBA_StructMemberSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::StructMemberSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::StructMemberSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_StructMemberSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Initializer &);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Initializer &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_InitializerSeq_H_
#define _TAO_CDR_OP_CORBA_InitializerSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InitializerSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InitializerSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_InitializerSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExceptionDescription &);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExceptionDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_ExcDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ExcDescriptionSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExcDescriptionSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExcDescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ExcDescriptionSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtInitializer &);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtInitializer &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_ExtInitializerSeq_H_
#define _TAO_CDR_OP_CORBA_ExtInitializerSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtInitializerSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtInitializerSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ExtInitializerSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::UnionMember &);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::UnionMember &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_UnionMemberSeq_H_
#define _TAO_CDR_OP_CORBA_UnionMemberSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::UnionMemberSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::UnionMemberSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_UnionMemberSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_EnumMemberSeq_H_
#define _TAO_CDR_OP_CORBA_EnumMemberSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::EnumMemberSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::EnumMemberSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_EnumMemberSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Container_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Container_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Container::Description &);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Container::Description &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CORBA_Container_DescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_Container_DescriptionSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::Container::DescriptionSeq &_tao_sequence);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::Container::DescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_Container_DescriptionSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::IDLType_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::IDLType_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::TypedefDef_ptr );
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::TypedefDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::TypeDescription &);
TAO_IFR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::TypeDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "IFR_BaseC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

