// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_PIDL_DYNAMICANYC_KSTZXT_H_
#define _TAO_PIDL_DYNAMICANYC_KSTZXT_H_

#ifndef TAO_DYNAMICANY_SAFE_INCLUDE
#error You should not include DynamicAnyC.h, use tao/DynamicAny/DynamicAny.h
#endif /* TAO_DYNAMICANY_SAFE_INCLUDE */

#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/DynamicAny/dynamicany_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/AbstractBase.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/CDR.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/Typecode_typesA.h"
#include "tao/AnyTypeCode/BooleanSeqA.h"
#include "tao/AnyTypeCode/CharSeqA.h"
#include "tao/AnyTypeCode/DoubleSeqA.h"
#include "tao/AnyTypeCode/FloatSeqA.h"
#include "tao/AnyTypeCode/LongDoubleSeqA.h"
#include "tao/AnyTypeCode/LongLongSeqA.h"
#include "tao/AnyTypeCode/LongSeqA.h"
#include "tao/AnyTypeCode/OctetSeqA.h"
#include "tao/AnyTypeCode/ShortSeqA.h"
#include "tao/AnyTypeCode/ULongLongSeqA.h"
#include "tao/AnyTypeCode/ULongSeqA.h"
#include "tao/AnyTypeCode/UShortSeqA.h"
#include "tao/AnyTypeCode/WCharSeqA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/Typecode_typesC.h"
#include "tao/BooleanSeqC.h"
#include "tao/CharSeqC.h"
#include "tao/DoubleSeqC.h"
#include "tao/FloatSeqC.h"
#include "tao/LongDoubleSeqC.h"
#include "tao/LongLongSeqC.h"
#include "tao/LongSeqC.h"
#include "tao/OctetSeqC.h"
#include "tao/ShortSeqC.h"
#include "tao/ULongLongSeqC.h"
#include "tao/ULongSeqC.h"
#include "tao/UShortSeqC.h"
#include "tao/WCharSeqC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_DynamicAny_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace DynamicAny
{

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNANY__VAR_OUT_CH_)
#define _DYNAMICANY_DYNANY__VAR_OUT_CH_

  class DynAny;
  typedef DynAny *DynAny_ptr;

  typedef
    TAO_Objref_Var_T<
        DynAny
      >
    DynAny_var;
  
  typedef
    TAO_Objref_Out_T<
        DynAny
      >
    DynAny_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynAny
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynAny_ptr _ptr_type;
    typedef DynAny_var _var_type;
    typedef DynAny_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynAny_ptr _duplicate (DynAny_ptr obj);

    static void _tao_release (DynAny_ptr obj);

    static DynAny_ptr _narrow (::CORBA::Object_ptr obj);
    static DynAny_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynAny_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_DynamicAny_Export InvalidValue : public ::CORBA::UserException
    {
    public:
      
      InvalidValue (void);
      InvalidValue (const InvalidValue &);
      ~InvalidValue (void);

      InvalidValue &operator= (const InvalidValue &);

      static void _tao_any_destructor (void *);

      static InvalidValue *_downcast ( ::CORBA::Exception *);
      static const InvalidValue *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_InvalidValue;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_DynamicAny_Export TypeMismatch : public ::CORBA::UserException
    {
    public:
      
      TypeMismatch (void);
      TypeMismatch (const TypeMismatch &);
      ~TypeMismatch (void);

      TypeMismatch &operator= (const TypeMismatch &);

      static void _tao_any_destructor (void *);

      static TypeMismatch *_downcast ( ::CORBA::Exception *);
      static const TypeMismatch *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_TypeMismatch;

    virtual ::CORBA::TypeCode_ptr type (
      void) = 0;

    virtual void assign (
      ::DynamicAny::DynAny_ptr dyn_any) = 0;

    virtual void from_any (
      const ::CORBA::Any & value) = 0;

    virtual ::CORBA::Any * to_any (
      void) = 0;

    virtual ::CORBA::Boolean equal (
      ::DynamicAny::DynAny_ptr dyn_any) = 0;

    virtual void destroy (
      void) = 0;

    virtual ::DynamicAny::DynAny_ptr copy (
      void) = 0;

    virtual void insert_boolean (
      ::CORBA::Boolean value) = 0;

    virtual void insert_octet (
      ::CORBA::Octet value) = 0;

    virtual void insert_char (
      ::CORBA::Char value) = 0;

    virtual void insert_short (
      ::CORBA::Short value) = 0;

    virtual void insert_ushort (
      ::CORBA::UShort value) = 0;

    virtual void insert_long (
      ::CORBA::Long value) = 0;

    virtual void insert_ulong (
      ::CORBA::ULong value) = 0;

    virtual void insert_float (
      ::CORBA::Float value) = 0;

    virtual void insert_double (
      ::CORBA::Double value) = 0;

    virtual void insert_string (
      const char * value) = 0;

    virtual void insert_reference (
      ::CORBA::Object_ptr value) = 0;

    virtual void insert_typecode (
      ::CORBA::TypeCode_ptr value) = 0;

    virtual void insert_longlong (
      ::CORBA::LongLong value) = 0;

    virtual void insert_ulonglong (
      ::CORBA::ULongLong value) = 0;

    virtual void insert_longdouble (
      ::CORBA::LongDouble value) = 0;

    virtual void insert_wchar (
      ::CORBA::WChar value) = 0;

    virtual void insert_wstring (
      const ::CORBA::WChar * value) = 0;

    virtual void insert_any (
      const ::CORBA::Any & value) = 0;

    virtual void insert_dyn_any (
      ::DynamicAny::DynAny_ptr value) = 0;

    virtual void insert_val (
      ::CORBA::ValueBase * value) = 0;

    virtual ::CORBA::Boolean get_boolean (
      void) = 0;

    virtual ::CORBA::Octet get_octet (
      void) = 0;

    virtual ::CORBA::Char get_char (
      void) = 0;

    virtual ::CORBA::Short get_short (
      void) = 0;

    virtual ::CORBA::UShort get_ushort (
      void) = 0;

    virtual ::CORBA::Long get_long (
      void) = 0;

    virtual ::CORBA::ULong get_ulong (
      void) = 0;

    virtual ::CORBA::Float get_float (
      void) = 0;

    virtual ::CORBA::Double get_double (
      void) = 0;

    virtual char * get_string (
      void) = 0;

    virtual ::CORBA::Object_ptr get_reference (
      void) = 0;

    virtual ::CORBA::TypeCode_ptr get_typecode (
      void) = 0;

    virtual ::CORBA::LongLong get_longlong (
      void) = 0;

    virtual ::CORBA::ULongLong get_ulonglong (
      void) = 0;

    virtual ::CORBA::LongDouble get_longdouble (
      void) = 0;

    virtual ::CORBA::WChar get_wchar (
      void) = 0;

    virtual ::CORBA::WChar * get_wstring (
      void) = 0;

    virtual ::CORBA::Any * get_any (
      void) = 0;

    virtual ::DynamicAny::DynAny_ptr get_dyn_any (
      void) = 0;

    virtual ::CORBA::ValueBase * get_val (
      void) = 0;

    virtual ::CORBA::Boolean seek (
      ::CORBA::Long index) = 0;

    virtual void rewind (
      void) = 0;

    virtual ::CORBA::Boolean next (
      void) = 0;

    virtual ::CORBA::ULong component_count (
      void) = 0;

    virtual ::DynamicAny::DynAny_ptr current_component (
      void) = 0;

    virtual void insert_abstract (
      ::CORBA::AbstractBase_ptr value) = 0;

    virtual ::CORBA::AbstractBase_ptr get_abstract (
      void) = 0;

    virtual void insert_boolean_seq (
      const ::CORBA::BooleanSeq & value) = 0;

    virtual void insert_octet_seq (
      const ::CORBA::OctetSeq & value) = 0;

    virtual void insert_char_seq (
      const ::CORBA::CharSeq & value) = 0;

    virtual void insert_short_seq (
      const ::CORBA::ShortSeq & value) = 0;

    virtual void insert_ushort_seq (
      const ::CORBA::UShortSeq & value) = 0;

    virtual void insert_long_seq (
      const ::CORBA::LongSeq & value) = 0;

    virtual void insert_ulong_seq (
      const ::CORBA::ULongSeq & value) = 0;

    virtual void insert_float_seq (
      const ::CORBA::FloatSeq & value) = 0;

    virtual void insert_double_seq (
      const ::CORBA::DoubleSeq & value) = 0;

    virtual void insert_longlong_seq (
      const ::CORBA::LongLongSeq & value) = 0;

    virtual void insert_ulonglong_seq (
      const ::CORBA::ULongLongSeq & value) = 0;

    virtual void insert_longdouble_seq (
      const ::CORBA::LongDoubleSeq & value) = 0;

    virtual void insert_wchar_seq (
      const ::CORBA::WCharSeq & value) = 0;

    virtual ::CORBA::BooleanSeq * get_boolean_seq (
      void) = 0;

    virtual ::CORBA::OctetSeq * get_octet_seq (
      void) = 0;

    virtual ::CORBA::CharSeq * get_char_seq (
      void) = 0;

    virtual ::CORBA::ShortSeq * get_short_seq (
      void) = 0;

    virtual ::CORBA::UShortSeq * get_ushort_seq (
      void) = 0;

    virtual ::CORBA::LongSeq * get_long_seq (
      void) = 0;

    virtual ::CORBA::ULongSeq * get_ulong_seq (
      void) = 0;

    virtual ::CORBA::FloatSeq * get_float_seq (
      void) = 0;

    virtual ::CORBA::DoubleSeq * get_double_seq (
      void) = 0;

    virtual ::CORBA::LongLongSeq * get_longlong_seq (
      void) = 0;

    virtual ::CORBA::ULongLongSeq * get_ulonglong_seq (
      void) = 0;

    virtual ::CORBA::LongDoubleSeq * get_longdouble_seq (
      void) = 0;

    virtual ::CORBA::WCharSeq * get_wchar_seq (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynAny (void);

    

    virtual ~DynAny (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynAny (const DynAny &);

    void operator= (const DynAny &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynAny;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNFIXED__VAR_OUT_CH_)
#define _DYNAMICANY_DYNFIXED__VAR_OUT_CH_

  class DynFixed;
  typedef DynFixed *DynFixed_ptr;

  typedef
    TAO_Objref_Var_T<
        DynFixed
      >
    DynFixed_var;
  
  typedef
    TAO_Objref_Out_T<
        DynFixed
      >
    DynFixed_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynFixed
    : public virtual ::DynamicAny::DynAny
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynFixed_ptr _ptr_type;
    typedef DynFixed_var _var_type;
    typedef DynFixed_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynFixed_ptr _duplicate (DynFixed_ptr obj);

    static void _tao_release (DynFixed_ptr obj);

    static DynFixed_ptr _narrow (::CORBA::Object_ptr obj);
    static DynFixed_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynFixed_ptr _nil (void);

    virtual char * get_value (
      void) = 0;

    virtual ::CORBA::Boolean set_value (
      const char * val) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynFixed (void);

    

    virtual ~DynFixed (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynFixed (const DynFixed &);

    void operator= (const DynFixed &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynFixed;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNENUM__VAR_OUT_CH_)
#define _DYNAMICANY_DYNENUM__VAR_OUT_CH_

  class DynEnum;
  typedef DynEnum *DynEnum_ptr;

  typedef
    TAO_Objref_Var_T<
        DynEnum
      >
    DynEnum_var;
  
  typedef
    TAO_Objref_Out_T<
        DynEnum
      >
    DynEnum_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynEnum
    : public virtual ::DynamicAny::DynAny
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynEnum_ptr _ptr_type;
    typedef DynEnum_var _var_type;
    typedef DynEnum_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynEnum_ptr _duplicate (DynEnum_ptr obj);

    static void _tao_release (DynEnum_ptr obj);

    static DynEnum_ptr _narrow (::CORBA::Object_ptr obj);
    static DynEnum_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynEnum_ptr _nil (void);

    virtual char * get_as_string (
      void) = 0;

    virtual void set_as_string (
      const char * value) = 0;

    virtual ::CORBA::ULong get_as_ulong (
      void) = 0;

    virtual void set_as_ulong (
      ::CORBA::ULong value) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynEnum (void);

    

    virtual ~DynEnum (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynEnum (const DynEnum &);

    void operator= (const DynEnum &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynEnum;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef char * FieldName;
  typedef ::CORBA::String_var FieldName_var;
  typedef ::CORBA::String_out FieldName_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_FieldName;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct NameValuePair;

  typedef
    ::TAO_Var_Var_T<
        NameValuePair
      >
    NameValuePair_var;
  
  typedef
    ::TAO_Out_T<
        NameValuePair
      >
    NameValuePair_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_DynamicAny_Export NameValuePair
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef NameValuePair_var _var_type;
    typedef NameValuePair_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager id;
    ::CORBA::Any value;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_NameValuePair;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_DYNAMICANY_NAMEVALUEPAIRSEQ_CH_)
#define _DYNAMICANY_NAMEVALUEPAIRSEQ_CH_

  class NameValuePairSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        NameValuePairSeq
      >
    NameValuePairSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        NameValuePairSeq
      >
    NameValuePairSeq_out;

  class TAO_DynamicAny_Export NameValuePairSeq
    : public
        ::TAO::unbounded_value_sequence<
            NameValuePair
          >
  {
  public:
    NameValuePairSeq (void);
    NameValuePairSeq ( ::CORBA::ULong max);
    NameValuePairSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      NameValuePair* buffer, 
      ::CORBA::Boolean release = false);
    NameValuePairSeq (const NameValuePairSeq &);
    virtual ~NameValuePairSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef NameValuePairSeq_var _var_type;
    typedef NameValuePairSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_NameValuePairSeq;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct NameDynAnyPair;

  typedef
    ::TAO_Var_Var_T<
        NameDynAnyPair
      >
    NameDynAnyPair_var;
  
  typedef
    ::TAO_Out_T<
        NameDynAnyPair
      >
    NameDynAnyPair_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_DynamicAny_Export NameDynAnyPair
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef NameDynAnyPair_var _var_type;
    typedef NameDynAnyPair_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager id;
    DynamicAny::DynAny_var value;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_NameDynAnyPair;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_)
#define _DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_

  class NameDynAnyPairSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        NameDynAnyPairSeq
      >
    NameDynAnyPairSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        NameDynAnyPairSeq
      >
    NameDynAnyPairSeq_out;

  class TAO_DynamicAny_Export NameDynAnyPairSeq
    : public
        ::TAO::unbounded_value_sequence<
            NameDynAnyPair
          >
  {
  public:
    NameDynAnyPairSeq (void);
    NameDynAnyPairSeq ( ::CORBA::ULong max);
    NameDynAnyPairSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      NameDynAnyPair* buffer, 
      ::CORBA::Boolean release = false);
    NameDynAnyPairSeq (const NameDynAnyPairSeq &);
    virtual ~NameDynAnyPairSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef NameDynAnyPairSeq_var _var_type;
    typedef NameDynAnyPairSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_NameDynAnyPairSeq;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNSTRUCT__VAR_OUT_CH_)
#define _DYNAMICANY_DYNSTRUCT__VAR_OUT_CH_

  class DynStruct;
  typedef DynStruct *DynStruct_ptr;

  typedef
    TAO_Objref_Var_T<
        DynStruct
      >
    DynStruct_var;
  
  typedef
    TAO_Objref_Out_T<
        DynStruct
      >
    DynStruct_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynStruct
    : public virtual ::DynamicAny::DynAny
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynStruct_ptr _ptr_type;
    typedef DynStruct_var _var_type;
    typedef DynStruct_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynStruct_ptr _duplicate (DynStruct_ptr obj);

    static void _tao_release (DynStruct_ptr obj);

    static DynStruct_ptr _narrow (::CORBA::Object_ptr obj);
    static DynStruct_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynStruct_ptr _nil (void);

    virtual char * current_member_name (
      void) = 0;

    virtual ::CORBA::TCKind current_member_kind (
      void) = 0;

    virtual ::DynamicAny::NameValuePairSeq * get_members (
      void) = 0;

    virtual void set_members (
      const ::DynamicAny::NameValuePairSeq & value) = 0;

    virtual ::DynamicAny::NameDynAnyPairSeq * get_members_as_dyn_any (
      void) = 0;

    virtual void set_members_as_dyn_any (
      const ::DynamicAny::NameDynAnyPairSeq & value) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynStruct (void);

    

    virtual ~DynStruct (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynStruct (const DynStruct &);

    void operator= (const DynStruct &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynStruct;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNUNION__VAR_OUT_CH_)
#define _DYNAMICANY_DYNUNION__VAR_OUT_CH_

  class DynUnion;
  typedef DynUnion *DynUnion_ptr;

  typedef
    TAO_Objref_Var_T<
        DynUnion
      >
    DynUnion_var;
  
  typedef
    TAO_Objref_Out_T<
        DynUnion
      >
    DynUnion_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynUnion
    : public virtual ::DynamicAny::DynAny
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynUnion_ptr _ptr_type;
    typedef DynUnion_var _var_type;
    typedef DynUnion_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynUnion_ptr _duplicate (DynUnion_ptr obj);

    static void _tao_release (DynUnion_ptr obj);

    static DynUnion_ptr _narrow (::CORBA::Object_ptr obj);
    static DynUnion_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynUnion_ptr _nil (void);

    virtual ::DynamicAny::DynAny_ptr get_discriminator (
      void) = 0;

    virtual void set_discriminator (
      ::DynamicAny::DynAny_ptr d) = 0;

    virtual void set_to_default_member (
      void) = 0;

    virtual void set_to_no_active_member (
      void) = 0;

    virtual ::CORBA::Boolean has_no_active_member (
      void) = 0;

    virtual ::CORBA::TCKind discriminator_kind (
      void) = 0;

    virtual ::DynamicAny::DynAny_ptr member (
      void) = 0;

    virtual char * member_name (
      void) = 0;

    virtual ::CORBA::TCKind member_kind (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynUnion (void);

    

    virtual ~DynUnion (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynUnion (const DynUnion &);

    void operator= (const DynUnion &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynUnion;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_DYNAMICANY_ANYSEQ_CH_)
#define _DYNAMICANY_ANYSEQ_CH_

  class AnySeq;

  typedef
    ::TAO_VarSeq_Var_T<
        AnySeq
      >
    AnySeq_var;

  typedef
    ::TAO_Seq_Out_T<
        AnySeq
      >
    AnySeq_out;

  class TAO_DynamicAny_Export AnySeq
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Any
          >
  {
  public:
    AnySeq (void);
    AnySeq ( ::CORBA::ULong max);
    AnySeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Any* buffer, 
      ::CORBA::Boolean release = false);
    AnySeq (const AnySeq &);
    virtual ~AnySeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AnySeq_var _var_type;
    typedef AnySeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_AnySeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_DYNAMICANY_DYNANYSEQ_CH_)
#define _DYNAMICANY_DYNANYSEQ_CH_

  class DynAnySeq;

  typedef
    ::TAO_VarSeq_Var_T<
        DynAnySeq
      >
    DynAnySeq_var;

  typedef
    ::TAO_Seq_Out_T<
        DynAnySeq
      >
    DynAnySeq_out;

  class TAO_DynamicAny_Export DynAnySeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            DynAny,
            DynAny_var
          >
  {
  public:
    DynAnySeq (void);
    DynAnySeq ( ::CORBA::ULong max);
    DynAnySeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      DynAny_ptr* buffer, 
      ::CORBA::Boolean release = false);
    DynAnySeq (const DynAnySeq &);
    virtual ~DynAnySeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynAnySeq_var _var_type;
    typedef DynAnySeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynAnySeq;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNSEQUENCE__VAR_OUT_CH_)
#define _DYNAMICANY_DYNSEQUENCE__VAR_OUT_CH_

  class DynSequence;
  typedef DynSequence *DynSequence_ptr;

  typedef
    TAO_Objref_Var_T<
        DynSequence
      >
    DynSequence_var;
  
  typedef
    TAO_Objref_Out_T<
        DynSequence
      >
    DynSequence_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynSequence
    : public virtual ::DynamicAny::DynAny
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynSequence_ptr _ptr_type;
    typedef DynSequence_var _var_type;
    typedef DynSequence_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynSequence_ptr _duplicate (DynSequence_ptr obj);

    static void _tao_release (DynSequence_ptr obj);

    static DynSequence_ptr _narrow (::CORBA::Object_ptr obj);
    static DynSequence_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynSequence_ptr _nil (void);

    virtual ::CORBA::ULong get_length (
      void) = 0;

    virtual void set_length (
      ::CORBA::ULong len) = 0;

    virtual ::DynamicAny::AnySeq * get_elements (
      void) = 0;

    virtual void set_elements (
      const ::DynamicAny::AnySeq & value) = 0;

    virtual ::DynamicAny::DynAnySeq * get_elements_as_dyn_any (
      void) = 0;

    virtual void set_elements_as_dyn_any (
      const ::DynamicAny::DynAnySeq & value) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynSequence (void);

    

    virtual ~DynSequence (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynSequence (const DynSequence &);

    void operator= (const DynSequence &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynSequence;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNARRAY__VAR_OUT_CH_)
#define _DYNAMICANY_DYNARRAY__VAR_OUT_CH_

  class DynArray;
  typedef DynArray *DynArray_ptr;

  typedef
    TAO_Objref_Var_T<
        DynArray
      >
    DynArray_var;
  
  typedef
    TAO_Objref_Out_T<
        DynArray
      >
    DynArray_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynArray
    : public virtual ::DynamicAny::DynAny
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynArray_ptr _ptr_type;
    typedef DynArray_var _var_type;
    typedef DynArray_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynArray_ptr _duplicate (DynArray_ptr obj);

    static void _tao_release (DynArray_ptr obj);

    static DynArray_ptr _narrow (::CORBA::Object_ptr obj);
    static DynArray_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynArray_ptr _nil (void);

    virtual ::DynamicAny::AnySeq * get_elements (
      void) = 0;

    virtual void set_elements (
      const ::DynamicAny::AnySeq & value) = 0;

    virtual ::DynamicAny::DynAnySeq * get_elements_as_dyn_any (
      void) = 0;

    virtual void set_elements_as_dyn_any (
      const ::DynamicAny::DynAnySeq & value) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynArray (void);

    

    virtual ~DynArray (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynArray (const DynArray &);

    void operator= (const DynArray &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynArray;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNVALUECOMMON__VAR_OUT_CH_)
#define _DYNAMICANY_DYNVALUECOMMON__VAR_OUT_CH_

  class DynValueCommon;
  typedef DynValueCommon *DynValueCommon_ptr;

  typedef
    TAO_Objref_Var_T<
        DynValueCommon
      >
    DynValueCommon_var;
  
  typedef
    TAO_Objref_Out_T<
        DynValueCommon
      >
    DynValueCommon_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynValueCommon
    : public virtual ::DynamicAny::DynAny
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynValueCommon_ptr _ptr_type;
    typedef DynValueCommon_var _var_type;
    typedef DynValueCommon_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynValueCommon_ptr _duplicate (DynValueCommon_ptr obj);

    static void _tao_release (DynValueCommon_ptr obj);

    static DynValueCommon_ptr _narrow (::CORBA::Object_ptr obj);
    static DynValueCommon_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynValueCommon_ptr _nil (void);

    virtual ::CORBA::Boolean is_null (
      void) = 0;

    virtual void set_to_null (
      void) = 0;

    virtual void set_to_value (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynValueCommon (void);

    

    virtual ~DynValueCommon (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynValueCommon (const DynValueCommon &);

    void operator= (const DynValueCommon &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynValueCommon;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNVALUE__VAR_OUT_CH_)
#define _DYNAMICANY_DYNVALUE__VAR_OUT_CH_

  class DynValue;
  typedef DynValue *DynValue_ptr;

  typedef
    TAO_Objref_Var_T<
        DynValue
      >
    DynValue_var;
  
  typedef
    TAO_Objref_Out_T<
        DynValue
      >
    DynValue_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynValue
    : public virtual ::DynamicAny::DynValueCommon
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynValue_ptr _ptr_type;
    typedef DynValue_var _var_type;
    typedef DynValue_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynValue_ptr _duplicate (DynValue_ptr obj);

    static void _tao_release (DynValue_ptr obj);

    static DynValue_ptr _narrow (::CORBA::Object_ptr obj);
    static DynValue_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynValue_ptr _nil (void);

    virtual char * current_member_name (
      void) = 0;

    virtual ::CORBA::TCKind current_member_kind (
      void) = 0;

    virtual ::DynamicAny::NameValuePairSeq * get_members (
      void) = 0;

    virtual void set_members (
      const ::DynamicAny::NameValuePairSeq & value) = 0;

    virtual ::DynamicAny::NameDynAnyPairSeq * get_members_as_dyn_any (
      void) = 0;

    virtual void set_members_as_dyn_any (
      const ::DynamicAny::NameDynAnyPairSeq & value) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynValue (void);

    

    virtual ~DynValue (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynValue (const DynValue &);

    void operator= (const DynValue &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynValue;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNVALUEBOX__VAR_OUT_CH_)
#define _DYNAMICANY_DYNVALUEBOX__VAR_OUT_CH_

  class DynValueBox;
  typedef DynValueBox *DynValueBox_ptr;

  typedef
    TAO_Objref_Var_T<
        DynValueBox
      >
    DynValueBox_var;
  
  typedef
    TAO_Objref_Out_T<
        DynValueBox
      >
    DynValueBox_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynValueBox
    : public virtual ::DynamicAny::DynValueCommon
  
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynValueBox_ptr _ptr_type;
    typedef DynValueBox_var _var_type;
    typedef DynValueBox_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynValueBox_ptr _duplicate (DynValueBox_ptr obj);

    static void _tao_release (DynValueBox_ptr obj);

    static DynValueBox_ptr _narrow (::CORBA::Object_ptr obj);
    static DynValueBox_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynValueBox_ptr _nil (void);

    virtual ::CORBA::Any * get_boxed_value (
      void) = 0;

    virtual void set_boxed_value (
      const ::CORBA::Any & boxed) = 0;

    virtual ::DynamicAny::DynAny_ptr get_boxed_value_as_dyn_any (
      void) = 0;

    virtual void set_boxed_value_as_dyn_any (
      ::DynamicAny::DynAny_ptr boxed) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynValueBox (void);

    

    virtual ~DynValueBox (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynValueBox (const DynValueBox &);

    void operator= (const DynValueBox &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynValueBox;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_DynamicAny_Export MustTruncate : public ::CORBA::UserException
  {
  public:
    
    MustTruncate (void);
    MustTruncate (const MustTruncate &);
    ~MustTruncate (void);

    MustTruncate &operator= (const MustTruncate &);

    static void _tao_any_destructor (void *);

    static MustTruncate *_downcast ( ::CORBA::Exception *);
    static const MustTruncate *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_MustTruncate;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_DYNAMICANY_DYNANYFACTORY__VAR_OUT_CH_)
#define _DYNAMICANY_DYNANYFACTORY__VAR_OUT_CH_

  class DynAnyFactory;
  typedef DynAnyFactory *DynAnyFactory_ptr;

  typedef
    TAO_Objref_Var_T<
        DynAnyFactory
      >
    DynAnyFactory_var;
  
  typedef
    TAO_Objref_Out_T<
        DynAnyFactory
      >
    DynAnyFactory_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_DynamicAny_Export DynAnyFactory
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DynAnyFactory_ptr _ptr_type;
    typedef DynAnyFactory_var _var_type;
    typedef DynAnyFactory_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynAnyFactory_ptr _duplicate (DynAnyFactory_ptr obj);

    static void _tao_release (DynAnyFactory_ptr obj);

    static DynAnyFactory_ptr _narrow (::CORBA::Object_ptr obj);
    static DynAnyFactory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynAnyFactory_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_DynamicAny_Export InconsistentTypeCode : public ::CORBA::UserException
    {
    public:
      
      InconsistentTypeCode (void);
      InconsistentTypeCode (const InconsistentTypeCode &);
      ~InconsistentTypeCode (void);

      InconsistentTypeCode &operator= (const InconsistentTypeCode &);

      static void _tao_any_destructor (void *);

      static InconsistentTypeCode *_downcast ( ::CORBA::Exception *);
      static const InconsistentTypeCode *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_InconsistentTypeCode;

    virtual ::DynamicAny::DynAny_ptr create_dyn_any (
      const ::CORBA::Any & value) = 0;

    virtual ::DynamicAny::DynAny_ptr create_dyn_any_from_type_code (
      ::CORBA::TypeCode_ptr type) = 0;

    virtual ::DynamicAny::DynAny_ptr create_dyn_any_without_truncation (
      const ::CORBA::Any & value) = 0;

    virtual ::DynamicAny::DynAnySeq * create_multiple_dyn_anys (
      const ::DynamicAny::AnySeq & values,
      ::CORBA::Boolean allow_truncate) = 0;

    virtual ::DynamicAny::AnySeq * create_multiple_anys (
      const ::DynamicAny::DynAnySeq & values) = 0;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynAnyFactory (void);

    

    virtual ~DynAnyFactory (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynAnyFactory (const DynAnyFactory &);

    void operator= (const DynAnyFactory &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynAnyFactory;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module DynamicAny

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DynamicAny::NameValuePair>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::NameValuePair,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DynamicAny::NameValuePairSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::NameValuePairSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DynamicAny::NameDynAnyPair>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::NameDynAnyPair,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DynamicAny::NameDynAnyPairSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::NameDynAnyPairSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DynamicAny::AnySeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::AnySeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DynamicAny::DynAnySeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::DynAnySeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_DYNAMICANY_DYNANY__TRAITS_)
#define _DYNAMICANY_DYNANY__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynAny>
  {
    static ::DynamicAny::DynAny_ptr duplicate (
        ::DynamicAny::DynAny_ptr p);
    static void release (
        ::DynamicAny::DynAny_ptr p);
    static ::DynamicAny::DynAny_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynAny_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNFIXED__TRAITS_)
#define _DYNAMICANY_DYNFIXED__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynFixed>
  {
    static ::DynamicAny::DynFixed_ptr duplicate (
        ::DynamicAny::DynFixed_ptr p);
    static void release (
        ::DynamicAny::DynFixed_ptr p);
    static ::DynamicAny::DynFixed_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynFixed_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNENUM__TRAITS_)
#define _DYNAMICANY_DYNENUM__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynEnum>
  {
    static ::DynamicAny::DynEnum_ptr duplicate (
        ::DynamicAny::DynEnum_ptr p);
    static void release (
        ::DynamicAny::DynEnum_ptr p);
    static ::DynamicAny::DynEnum_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynEnum_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNSTRUCT__TRAITS_)
#define _DYNAMICANY_DYNSTRUCT__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynStruct>
  {
    static ::DynamicAny::DynStruct_ptr duplicate (
        ::DynamicAny::DynStruct_ptr p);
    static void release (
        ::DynamicAny::DynStruct_ptr p);
    static ::DynamicAny::DynStruct_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynStruct_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNUNION__TRAITS_)
#define _DYNAMICANY_DYNUNION__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynUnion>
  {
    static ::DynamicAny::DynUnion_ptr duplicate (
        ::DynamicAny::DynUnion_ptr p);
    static void release (
        ::DynamicAny::DynUnion_ptr p);
    static ::DynamicAny::DynUnion_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynUnion_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNSEQUENCE__TRAITS_)
#define _DYNAMICANY_DYNSEQUENCE__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynSequence>
  {
    static ::DynamicAny::DynSequence_ptr duplicate (
        ::DynamicAny::DynSequence_ptr p);
    static void release (
        ::DynamicAny::DynSequence_ptr p);
    static ::DynamicAny::DynSequence_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynSequence_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNARRAY__TRAITS_)
#define _DYNAMICANY_DYNARRAY__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynArray>
  {
    static ::DynamicAny::DynArray_ptr duplicate (
        ::DynamicAny::DynArray_ptr p);
    static void release (
        ::DynamicAny::DynArray_ptr p);
    static ::DynamicAny::DynArray_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynArray_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNVALUECOMMON__TRAITS_)
#define _DYNAMICANY_DYNVALUECOMMON__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynValueCommon>
  {
    static ::DynamicAny::DynValueCommon_ptr duplicate (
        ::DynamicAny::DynValueCommon_ptr p);
    static void release (
        ::DynamicAny::DynValueCommon_ptr p);
    static ::DynamicAny::DynValueCommon_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynValueCommon_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNVALUE__TRAITS_)
#define _DYNAMICANY_DYNVALUE__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynValue>
  {
    static ::DynamicAny::DynValue_ptr duplicate (
        ::DynamicAny::DynValue_ptr p);
    static void release (
        ::DynamicAny::DynValue_ptr p);
    static ::DynamicAny::DynValue_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynValue_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNVALUEBOX__TRAITS_)
#define _DYNAMICANY_DYNVALUEBOX__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynValueBox>
  {
    static ::DynamicAny::DynValueBox_ptr duplicate (
        ::DynamicAny::DynValueBox_ptr p);
    static void release (
        ::DynamicAny::DynValueBox_ptr p);
    static ::DynamicAny::DynValueBox_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynValueBox_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNANYFACTORY__TRAITS_)
#define _DYNAMICANY_DYNANYFACTORY__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynAnyFactory>
  {
    static ::DynamicAny::DynAnyFactory_ptr duplicate (
        ::DynamicAny::DynAnyFactory_ptr p);
    static void release (
        ::DynamicAny::DynAnyFactory_ptr p);
    static ::DynamicAny::DynAnyFactory_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DynamicAny::DynAnyFactory_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynAny_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynAny_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynAny_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAny_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAny_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynAny_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  

  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::DynAny::InvalidValue &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::DynAny::InvalidValue*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DynamicAny::DynAny::InvalidValue *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::DynAny::InvalidValue *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::DynAny::InvalidValue &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAny::InvalidValue*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynAny::InvalidValue *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::DynAny::InvalidValue *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  

  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::DynAny::TypeMismatch &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::DynAny::TypeMismatch*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DynamicAny::DynAny::TypeMismatch *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::DynAny::TypeMismatch *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::DynAny::TypeMismatch &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAny::TypeMismatch*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynAny::TypeMismatch *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::DynAny::TypeMismatch *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynFixed_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynFixed_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynFixed_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynFixed_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynFixed_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynFixed_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynEnum_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynEnum_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynEnum_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynEnum_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynEnum_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynEnum_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::NameValuePair &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::NameValuePair*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DynamicAny::NameValuePair *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::NameValuePair *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::NameValuePair &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::NameValuePair*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::NameValuePair *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::NameValuePair *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const ::DynamicAny::NameValuePairSeq &); // copying version
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, ::DynamicAny::NameValuePairSeq*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DynamicAny::NameValuePairSeq *&); // deprecated
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::NameValuePairSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const DynamicAny::NameValuePairSeq &); // copying version
TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynamicAny::NameValuePairSeq*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::NameValuePairSeq *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::NameValuePairSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::NameDynAnyPair &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::NameDynAnyPair*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DynamicAny::NameDynAnyPair *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::NameDynAnyPair *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::NameDynAnyPair &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::NameDynAnyPair*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::NameDynAnyPair *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::NameDynAnyPair *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const ::DynamicAny::NameDynAnyPairSeq &); // copying version
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, ::DynamicAny::NameDynAnyPairSeq*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DynamicAny::NameDynAnyPairSeq *&); // deprecated
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::NameDynAnyPairSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const DynamicAny::NameDynAnyPairSeq &); // copying version
TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynamicAny::NameDynAnyPairSeq*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::NameDynAnyPairSeq *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::NameDynAnyPairSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynStruct_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynStruct_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynStruct_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynStruct_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynStruct_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynStruct_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynUnion_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynUnion_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynUnion_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynUnion_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynUnion_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynUnion_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const ::DynamicAny::AnySeq &); // copying version
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, ::DynamicAny::AnySeq*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DynamicAny::AnySeq *&); // deprecated
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::AnySeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const DynamicAny::AnySeq &); // copying version
TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynamicAny::AnySeq*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::AnySeq *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::AnySeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const ::DynamicAny::DynAnySeq &); // copying version
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, ::DynamicAny::DynAnySeq*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DynamicAny::DynAnySeq *&); // deprecated
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::DynAnySeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const DynamicAny::DynAnySeq &); // copying version
TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynamicAny::DynAnySeq*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynAnySeq *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::DynAnySeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynSequence_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynSequence_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynSequence_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynSequence_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynSequence_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynSequence_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynArray_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynArray_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynArray_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynArray_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynArray_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynArray_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValueCommon_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValueCommon_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynValueCommon_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValueCommon_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValueCommon_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynValueCommon_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValue_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValue_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynValue_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValue_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValue_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynValue_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValueBox_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValueBox_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynValueBox_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValueBox_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValueBox_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynValueBox_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  

  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::MustTruncate &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::MustTruncate*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DynamicAny::MustTruncate *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::MustTruncate *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::MustTruncate &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::MustTruncate*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::MustTruncate *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::MustTruncate *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynAnyFactory_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynAnyFactory_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynAnyFactory_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAnyFactory_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAnyFactory_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynAnyFactory_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  

  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::DynAnyFactory::InconsistentTypeCode &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::DynAnyFactory::InconsistentTypeCode*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DynamicAny::DynAnyFactory::InconsistentTypeCode *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::DynAnyFactory::InconsistentTypeCode *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::DynAnyFactory::InconsistentTypeCode &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAnyFactory::InconsistentTypeCode*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynAnyFactory::InconsistentTypeCode *&); // deprecated
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::DynAnyFactory::InconsistentTypeCode *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DynamicAny::NameValuePair &);
TAO_DynamicAny_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DynamicAny::NameValuePair &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_DynamicAny_NameValuePairSeq_H_
#define _TAO_CDR_OP_DynamicAny_NameValuePairSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_DynamicAny_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DynamicAny::NameValuePairSeq &_tao_sequence);
TAO_DynamicAny_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DynamicAny::NameValuePairSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_DynamicAny_NameValuePairSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_DynamicAny_AnySeq_H_
#define _TAO_CDR_OP_DynamicAny_AnySeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_DynamicAny_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DynamicAny::AnySeq &_tao_sequence);
TAO_DynamicAny_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DynamicAny::AnySeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_DynamicAny_AnySeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_DynamicAny_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DynamicAny::MustTruncate &);
TAO_DynamicAny_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DynamicAny::MustTruncate &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* ifndef */

