// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



ACE_INLINE
void
POA_CosTrading::Lookup::_get_lookup_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::TraderComponents::_get_lookup_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_register_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::TraderComponents::_get_register_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_link_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::TraderComponents::_get_link_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_proxy_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::TraderComponents::_get_proxy_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_admin_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::TraderComponents::_get_admin_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_supports_modifiable_properties_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_modifiable_properties_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_supports_dynamic_properties_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_dynamic_properties_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_supports_proxy_offers_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_proxy_offers_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_type_repos_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::SupportAttributes::_get_type_repos_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_def_search_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_def_search_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_max_search_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_search_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_def_match_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_def_match_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_max_match_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_match_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_def_return_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_def_return_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_max_return_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_return_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_max_list_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_list_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_def_hop_count_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_def_hop_count_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_max_hop_count_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_hop_count_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_def_follow_policy_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_def_follow_policy_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Lookup::_get_max_follow_policy_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Lookup *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_follow_policy_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Register::_get_lookup_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Register *> (servant);
  POA_CosTrading::TraderComponents::_get_lookup_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Register::_get_register_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Register *> (servant);
  POA_CosTrading::TraderComponents::_get_register_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Register::_get_link_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Register *> (servant);
  POA_CosTrading::TraderComponents::_get_link_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Register::_get_proxy_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Register *> (servant);
  POA_CosTrading::TraderComponents::_get_proxy_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Register::_get_admin_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Register *> (servant);
  POA_CosTrading::TraderComponents::_get_admin_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Register::_get_supports_modifiable_properties_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Register *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_modifiable_properties_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Register::_get_supports_dynamic_properties_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Register *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_dynamic_properties_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Register::_get_supports_proxy_offers_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Register *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_proxy_offers_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Register::_get_type_repos_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Register *> (servant);
  POA_CosTrading::SupportAttributes::_get_type_repos_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Link::_get_lookup_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Link *> (servant);
  POA_CosTrading::TraderComponents::_get_lookup_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Link::_get_register_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Link *> (servant);
  POA_CosTrading::TraderComponents::_get_register_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Link::_get_link_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Link *> (servant);
  POA_CosTrading::TraderComponents::_get_link_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Link::_get_proxy_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Link *> (servant);
  POA_CosTrading::TraderComponents::_get_proxy_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Link::_get_admin_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Link *> (servant);
  POA_CosTrading::TraderComponents::_get_admin_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Link::_get_supports_modifiable_properties_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Link *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_modifiable_properties_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Link::_get_supports_dynamic_properties_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Link *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_dynamic_properties_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Link::_get_supports_proxy_offers_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Link *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_proxy_offers_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Link::_get_type_repos_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Link *> (servant);
  POA_CosTrading::SupportAttributes::_get_type_repos_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Link::_get_max_link_follow_policy_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::LinkAttributes * const impl = static_cast<POA_CosTrading::Link *> (servant);
  POA_CosTrading::LinkAttributes::_get_max_link_follow_policy_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Proxy::_get_lookup_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Proxy *> (servant);
  POA_CosTrading::TraderComponents::_get_lookup_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Proxy::_get_register_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Proxy *> (servant);
  POA_CosTrading::TraderComponents::_get_register_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Proxy::_get_link_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Proxy *> (servant);
  POA_CosTrading::TraderComponents::_get_link_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Proxy::_get_proxy_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Proxy *> (servant);
  POA_CosTrading::TraderComponents::_get_proxy_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Proxy::_get_admin_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Proxy *> (servant);
  POA_CosTrading::TraderComponents::_get_admin_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Proxy::_get_supports_modifiable_properties_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Proxy *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_modifiable_properties_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Proxy::_get_supports_dynamic_properties_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Proxy *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_dynamic_properties_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Proxy::_get_supports_proxy_offers_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Proxy *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_proxy_offers_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Proxy::_get_type_repos_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Proxy *> (servant);
  POA_CosTrading::SupportAttributes::_get_type_repos_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_lookup_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::TraderComponents::_get_lookup_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_register_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::TraderComponents::_get_register_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_link_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::TraderComponents::_get_link_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_proxy_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::TraderComponents::_get_proxy_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_admin_if_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::TraderComponents * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::TraderComponents::_get_admin_if_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_supports_modifiable_properties_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_modifiable_properties_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_supports_dynamic_properties_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_dynamic_properties_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_supports_proxy_offers_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::SupportAttributes::_get_supports_proxy_offers_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_type_repos_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::SupportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::SupportAttributes::_get_type_repos_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_def_search_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_def_search_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_max_search_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_search_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_def_match_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_def_match_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_max_match_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_match_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_def_return_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_def_return_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_max_return_card_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_return_card_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_max_list_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_list_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_def_hop_count_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_def_hop_count_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_max_hop_count_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_hop_count_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_def_follow_policy_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_def_follow_policy_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_max_follow_policy_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::ImportAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::ImportAttributes::_get_max_follow_policy_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_CosTrading::Admin::_get_max_link_follow_policy_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_CosTrading::LinkAttributes * const impl = static_cast<POA_CosTrading::Admin *> (servant);
  POA_CosTrading::LinkAttributes::_get_max_link_follow_policy_skel (
      server_request,
      servant_upcall,
      impl);
}


TAO_END_VERSIONED_NAMESPACE_DECL


