// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_FTRTECEVENTCOMMC_BUT0J3_H_
#define _TAO_IDL_FTRTECEVENTCOMMC_BUT0J3_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/FtRtEvent/Utils/ftrtevent_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Messaging/Messaging.h"
#include "tao/Sequence_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "orbsvcs/RtecEventCommC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_FtRtEvent_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

typedef CORBA::OctetSeq EventPayload;
typedef CORBA::OctetSeq_var EventPayload_var;
typedef CORBA::OctetSeq_out EventPayload_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace FtRtecEventComm
{

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_FTRTECEVENTCOMM_OBJECTID_CH_)
#define _FTRTECEVENTCOMM_OBJECTID_CH_

  class ObjectId;

  typedef
    ::TAO_FixedSeq_Var_T<
        ObjectId
      >
    ObjectId_var;

  typedef
    ::TAO_Seq_Out_T<
        ObjectId
      >
    ObjectId_out;

  class TAO_FtRtEvent_Export ObjectId
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Octet
          >
  {
  public:
    ObjectId (void);
    ObjectId ( ::CORBA::ULong max);
    ObjectId (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Octet* buffer, 
      ::CORBA::Boolean release = false);
    ObjectId (const ObjectId &);
    virtual ~ObjectId (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ObjectId_var _var_type;
    typedef ObjectId_out _out_type;

    static void _tao_any_destructor (void *);

    

#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    ObjectId (
        ::CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_FtRtEvent_Export ::CORBA::TypeCode_ptr const _tc_ObjectId;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_FtRtEvent_Export InvalidObjectID : public ::CORBA::UserException
  {
  public:
    
    InvalidObjectID (void);
    InvalidObjectID (const InvalidObjectID &);
    ~InvalidObjectID (void);

    InvalidObjectID &operator= (const InvalidObjectID &);

    static void _tao_any_destructor (void *);

    static InvalidObjectID *_downcast ( ::CORBA::Exception *);
    static const InvalidObjectID *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_FtRtEvent_Export ::CORBA::TypeCode_ptr const _tc_InvalidObjectID;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_FTRTECEVENTCOMM_PUSHCONSUMER__VAR_OUT_CH_)
#define _FTRTECEVENTCOMM_PUSHCONSUMER__VAR_OUT_CH_

  class AMI_PushConsumerHandler;
  typedef AMI_PushConsumerHandler *AMI_PushConsumerHandler_ptr;

  class PushConsumer;
  typedef PushConsumer *PushConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        PushConsumer
      >
    PushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        PushConsumer
      >
    PushConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_FtRtEvent_Export PushConsumer
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<PushConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef PushConsumer_ptr _ptr_type;
    typedef PushConsumer_var _var_type;
    typedef PushConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PushConsumer_ptr _duplicate (PushConsumer_ptr obj);

    static void _tao_release (PushConsumer_ptr obj);

    static PushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static PushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PushConsumer_ptr _nil (void);

    virtual void push (
      const ::FtRtecEventComm::ObjectId & oid,
      const ::RtecEventComm::EventSet & data);

    virtual void sendc_push (
      ::FtRtecEventComm::AMI_PushConsumerHandler_ptr ami_handler,
      const ::FtRtecEventComm::ObjectId & oid,
      const ::RtecEventComm::EventSet & data);

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_PushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    PushConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void FtRtecEventComm_PushConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    PushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    PushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~PushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    PushConsumer (const PushConsumer &);

    void operator= (const PushConsumer &);
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_FtRtEvent_Export ::CORBA::TypeCode_ptr const _tc_PushConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_FTRTECEVENTCOMM_AMI_PUSHCONSUMERHANDLER__VAR_OUT_CH_)
#define _FTRTECEVENTCOMM_AMI_PUSHCONSUMERHANDLER__VAR_OUT_CH_

  class AMI_PushConsumerHandler;
  typedef AMI_PushConsumerHandler *AMI_PushConsumerHandler_ptr;

  typedef
    TAO_Objref_Var_T<
        AMI_PushConsumerHandler
      >
    AMI_PushConsumerHandler_var;
  
  typedef
    TAO_Objref_Out_T<
        AMI_PushConsumerHandler
      >
    AMI_PushConsumerHandler_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_FtRtEvent_Export AMI_PushConsumerHandler
    : public virtual ::Messaging::ReplyHandler
  
  {
  public:
    friend class TAO::Narrow_Utils<AMI_PushConsumerHandler>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AMI_PushConsumerHandler_ptr _ptr_type;
    typedef AMI_PushConsumerHandler_var _var_type;
    typedef AMI_PushConsumerHandler_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static AMI_PushConsumerHandler_ptr _duplicate (AMI_PushConsumerHandler_ptr obj);

    static void _tao_release (AMI_PushConsumerHandler_ptr obj);

    static AMI_PushConsumerHandler_ptr _narrow (::CORBA::Object_ptr obj);
    static AMI_PushConsumerHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static AMI_PushConsumerHandler_ptr _nil (void);

    virtual void push (
      void);

    static void 
    push_reply_stub (
      TAO_InputCDR &_tao_reply_cdr,
      ::Messaging::ReplyHandler_ptr _tao_reply_handler,
      ::CORBA::ULong reply_status);

    virtual void push_excep (
      ::Messaging::ExceptionHolder * excep_holder);

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_AMI_PushConsumerHandler_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    AMI_PushConsumerHandler (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void FtRtecEventComm_AMI_PushConsumerHandler_setup_collocation (void);

    // Concrete non-local interface only.
    AMI_PushConsumerHandler (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    AMI_PushConsumerHandler (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~AMI_PushConsumerHandler (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    AMI_PushConsumerHandler (const AMI_PushConsumerHandler &);

    void operator= (const AMI_PushConsumerHandler &);
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_FtRtEvent_Export ::CORBA::TypeCode_ptr const _tc_AMI_PushConsumerHandler;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module FtRtecEventComm

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:308

#if !defined (_MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Value_Traits<Messaging::ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::FtRtecEventComm::ObjectId>
    : public
        Var_Size_Arg_Traits_T<
            ::FtRtecEventComm::ObjectId,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_FTRTECEVENTCOMM_PUSHCONSUMER__ARG_TRAITS_)
#define _FTRTECEVENTCOMM_PUSHCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::FtRtecEventComm::PushConsumer>
    : public
        Object_Arg_Traits_T<
            ::FtRtecEventComm::PushConsumer_ptr,
            ::FtRtecEventComm::PushConsumer_var,
            ::FtRtecEventComm::PushConsumer_out,
            TAO::Objref_Traits<FtRtecEventComm::PushConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_FTRTECEVENTCOMM_AMI_PUSHCONSUMERHANDLER__ARG_TRAITS_)
#define _FTRTECEVENTCOMM_AMI_PUSHCONSUMERHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::FtRtecEventComm::AMI_PushConsumerHandler>
    : public
        Object_Arg_Traits_T<
            ::FtRtecEventComm::AMI_PushConsumerHandler_ptr,
            ::FtRtecEventComm::AMI_PushConsumerHandler_var,
            ::FtRtecEventComm::AMI_PushConsumerHandler_out,
            TAO::Objref_Traits<FtRtecEventComm::AMI_PushConsumerHandler>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern TAO_FtRtEvent_Export
TAO::Collocation_Proxy_Broker *
(*FtRtecEventComm__TAO_PushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_FtRtEvent_Export
TAO::Collocation_Proxy_Broker *
(*FtRtecEventComm__TAO_AMI_PushConsumerHandler_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_FTRTECEVENTCOMM_PUSHCONSUMER__TRAITS_)
#define _FTRTECEVENTCOMM_PUSHCONSUMER__TRAITS_

  template<>
  struct TAO_FtRtEvent_Export Objref_Traits< ::FtRtecEventComm::PushConsumer>
  {
    static ::FtRtecEventComm::PushConsumer_ptr duplicate (
        ::FtRtecEventComm::PushConsumer_ptr p);
    static void release (
        ::FtRtecEventComm::PushConsumer_ptr p);
    static ::FtRtecEventComm::PushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FtRtecEventComm::PushConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_FTRTECEVENTCOMM_AMI_PUSHCONSUMERHANDLER__TRAITS_)
#define _FTRTECEVENTCOMM_AMI_PUSHCONSUMERHANDLER__TRAITS_

  template<>
  struct TAO_FtRtEvent_Export Objref_Traits< ::FtRtecEventComm::AMI_PushConsumerHandler>
  {
    static ::FtRtecEventComm::AMI_PushConsumerHandler_ptr duplicate (
        ::FtRtecEventComm::AMI_PushConsumerHandler_ptr p);
    static void release (
        ::FtRtecEventComm::AMI_PushConsumerHandler_ptr p);
    static ::FtRtecEventComm::AMI_PushConsumerHandler_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FtRtecEventComm::AMI_PushConsumerHandler_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace FtRtecEventComm
{
  TAO_FtRtEvent_Export void operator<<= ( ::CORBA::Any &, const ::FtRtecEventComm::ObjectId &); // copying version
  TAO_FtRtEvent_Export void operator<<= ( ::CORBA::Any &, ::FtRtecEventComm::ObjectId*); // noncopying version
  TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::FtRtecEventComm::ObjectId *&); // deprecated
  TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::FtRtecEventComm::ObjectId *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_FtRtEvent_Export void operator<<= ( ::CORBA::Any &, const FtRtecEventComm::ObjectId &); // copying version
TAO_FtRtEvent_Export void operator<<= ( ::CORBA::Any &, FtRtecEventComm::ObjectId*); // noncopying version
TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FtRtecEventComm::ObjectId *&); // deprecated
TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const FtRtecEventComm::ObjectId *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace FtRtecEventComm
{
  

  TAO_FtRtEvent_Export void operator<<= (::CORBA::Any &, const ::FtRtecEventComm::InvalidObjectID &); // copying version
  TAO_FtRtEvent_Export void operator<<= (::CORBA::Any &, ::FtRtecEventComm::InvalidObjectID*); // noncopying version
  TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::FtRtecEventComm::InvalidObjectID *&); // deprecated
TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::FtRtecEventComm::InvalidObjectID *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_FtRtEvent_Export void operator<<= (::CORBA::Any &, const FtRtecEventComm::InvalidObjectID &); // copying version
TAO_FtRtEvent_Export void operator<<= (::CORBA::Any &, FtRtecEventComm::InvalidObjectID*); // noncopying version
TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FtRtecEventComm::InvalidObjectID *&); // deprecated
TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const FtRtecEventComm::InvalidObjectID *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace FtRtecEventComm
{
  TAO_FtRtEvent_Export void operator<<= ( ::CORBA::Any &, PushConsumer_ptr); // copying
  TAO_FtRtEvent_Export void operator<<= ( ::CORBA::Any &, PushConsumer_ptr *); // non-copying
  TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PushConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_FtRtEvent_Export void operator<<= (::CORBA::Any &, FtRtecEventComm::PushConsumer_ptr); // copying
TAO_FtRtEvent_Export void operator<<= (::CORBA::Any &, FtRtecEventComm::PushConsumer_ptr *); // non-copying
TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FtRtecEventComm::PushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace FtRtecEventComm
{
  TAO_FtRtEvent_Export void operator<<= ( ::CORBA::Any &, AMI_PushConsumerHandler_ptr); // copying
  TAO_FtRtEvent_Export void operator<<= ( ::CORBA::Any &, AMI_PushConsumerHandler_ptr *); // non-copying
  TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMI_PushConsumerHandler_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_FtRtEvent_Export void operator<<= (::CORBA::Any &, FtRtecEventComm::AMI_PushConsumerHandler_ptr); // copying
TAO_FtRtEvent_Export void operator<<= (::CORBA::Any &, FtRtecEventComm::AMI_PushConsumerHandler_ptr *); // non-copying
TAO_FtRtEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FtRtecEventComm::AMI_PushConsumerHandler_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_FtRtecEventComm_ObjectId_H_
#define _TAO_CDR_OP_FtRtecEventComm_ObjectId_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_FtRtEvent_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const FtRtecEventComm::ObjectId &_tao_sequence);
TAO_FtRtEvent_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    FtRtecEventComm::ObjectId &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_FtRtecEventComm_ObjectId_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_FtRtEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const FtRtecEventComm::InvalidObjectID &);
TAO_FtRtEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, FtRtecEventComm::InvalidObjectID &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_FtRtEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const FtRtecEventComm::PushConsumer_ptr );
TAO_FtRtEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, FtRtecEventComm::PushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_FtRtEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const FtRtecEventComm::AMI_PushConsumerHandler_ptr );
TAO_FtRtEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, FtRtecEventComm::AMI_PushConsumerHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "FtRtecEventCommC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

