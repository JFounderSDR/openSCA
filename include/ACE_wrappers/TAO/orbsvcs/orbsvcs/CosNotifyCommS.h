// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:460

#ifndef _TAO_IDL_COSNOTIFYCOMMS_YRADSH_H_
#define _TAO_IDL_COSNOTIFYCOMMS_YRADSH_H_


#include "CosNotifyCommC.h"
#include "CosNotificationS.h"
#include "CosEventCommS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Collocation_Proxy_Broker.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

#include /**/ "orbsvcs/Notify/notify_skel_export.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Notify_Skel_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_NOTIFYPUBLISH__SARG_TRAITS_)
#define _COSNOTIFYCOMM_NOTIFYPUBLISH__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CosNotifyComm::NotifyPublish>
    : public
        Object_SArg_Traits_T<
            ::CosNotifyComm::NotifyPublish_ptr,
            ::CosNotifyComm::NotifyPublish_var,
            ::CosNotifyComm::NotifyPublish_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_NOTIFYSUBSCRIBE__SARG_TRAITS_)
#define _COSNOTIFYCOMM_NOTIFYSUBSCRIBE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CosNotifyComm::NotifySubscribe>
    : public
        Object_SArg_Traits_T<
            ::CosNotifyComm::NotifySubscribe_ptr,
            ::CosNotifyComm::NotifySubscribe_var,
            ::CosNotifyComm::NotifySubscribe_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_PUSHCONSUMER__SARG_TRAITS_)
#define _COSNOTIFYCOMM_PUSHCONSUMER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CosNotifyComm::PushConsumer>
    : public
        Object_SArg_Traits_T<
            ::CosNotifyComm::PushConsumer_ptr,
            ::CosNotifyComm::PushConsumer_var,
            ::CosNotifyComm::PushConsumer_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_PUSHSUPPLIER__SARG_TRAITS_)
#define _COSNOTIFYCOMM_PUSHSUPPLIER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CosNotifyComm::PushSupplier>
    : public
        Object_SArg_Traits_T<
            ::CosNotifyComm::PushSupplier_ptr,
            ::CosNotifyComm::PushSupplier_var,
            ::CosNotifyComm::PushSupplier_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_STRUCTUREDPUSHCONSUMER__SARG_TRAITS_)
#define _COSNOTIFYCOMM_STRUCTUREDPUSHCONSUMER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CosNotifyComm::StructuredPushConsumer>
    : public
        Object_SArg_Traits_T<
            ::CosNotifyComm::StructuredPushConsumer_ptr,
            ::CosNotifyComm::StructuredPushConsumer_var,
            ::CosNotifyComm::StructuredPushConsumer_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_STRUCTUREDPUSHSUPPLIER__SARG_TRAITS_)
#define _COSNOTIFYCOMM_STRUCTUREDPUSHSUPPLIER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CosNotifyComm::StructuredPushSupplier>
    : public
        Object_SArg_Traits_T<
            ::CosNotifyComm::StructuredPushSupplier_ptr,
            ::CosNotifyComm::StructuredPushSupplier_var,
            ::CosNotifyComm::StructuredPushSupplier_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_SEQUENCEPUSHCONSUMER__SARG_TRAITS_)
#define _COSNOTIFYCOMM_SEQUENCEPUSHCONSUMER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CosNotifyComm::SequencePushConsumer>
    : public
        Object_SArg_Traits_T<
            ::CosNotifyComm::SequencePushConsumer_ptr,
            ::CosNotifyComm::SequencePushConsumer_var,
            ::CosNotifyComm::SequencePushConsumer_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_SEQUENCEPUSHSUPPLIER__SARG_TRAITS_)
#define _COSNOTIFYCOMM_SEQUENCEPUSHSUPPLIER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CosNotifyComm::SequencePushSupplier>
    : public
        Object_SArg_Traits_T<
            ::CosNotifyComm::SequencePushSupplier_ptr,
            ::CosNotifyComm::SequencePushSupplier_var,
            ::CosNotifyComm::SequencePushSupplier_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_sh.cpp:41

namespace POA_CosNotifyComm
{
  

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class NotifyPublish;
  typedef NotifyPublish *NotifyPublish_ptr;

  class TAO_Notify_Skel_Export NotifyPublish
    : public virtual PortableServer::ServantBase
  {
  protected:
    NotifyPublish (void);
  
  public:
    /// Useful for template programming.
    typedef ::CosNotifyComm::NotifyPublish _stub_type;
    typedef ::CosNotifyComm::NotifyPublish_ptr _stub_ptr_type;
    typedef ::CosNotifyComm::NotifyPublish_var _stub_var_type;

    NotifyPublish (const NotifyPublish& rhs);
    virtual ~NotifyPublish (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::CosNotifyComm::NotifyPublish *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void offer_change (
      const ::CosNotification::EventTypeSeq & added,
      const ::CosNotification::EventTypeSeq & removed) = 0;

    static void offer_change_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class NotifySubscribe;
  typedef NotifySubscribe *NotifySubscribe_ptr;

  class TAO_Notify_Skel_Export NotifySubscribe
    : public virtual PortableServer::ServantBase
  {
  protected:
    NotifySubscribe (void);
  
  public:
    /// Useful for template programming.
    typedef ::CosNotifyComm::NotifySubscribe _stub_type;
    typedef ::CosNotifyComm::NotifySubscribe_ptr _stub_ptr_type;
    typedef ::CosNotifyComm::NotifySubscribe_var _stub_var_type;

    NotifySubscribe (const NotifySubscribe& rhs);
    virtual ~NotifySubscribe (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::CosNotifyComm::NotifySubscribe *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void subscription_change (
      const ::CosNotification::EventTypeSeq & added,
      const ::CosNotification::EventTypeSeq & removed) = 0;

    static void subscription_change_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class PushConsumer;
  typedef PushConsumer *PushConsumer_ptr;

  class TAO_Notify_Skel_Export PushConsumer
    : public virtual POA_CosNotifyComm::NotifyPublish,
      public virtual POA_CosEventComm::PushConsumer
  {
  protected:
    PushConsumer (void);
  
  public:
    /// Useful for template programming.
    typedef ::CosNotifyComm::PushConsumer _stub_type;
    typedef ::CosNotifyComm::PushConsumer_ptr _stub_ptr_type;
    typedef ::CosNotifyComm::PushConsumer_var _stub_var_type;

    PushConsumer (const PushConsumer& rhs);
    virtual ~PushConsumer (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::CosNotifyComm::PushConsumer *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    offer_change_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    push_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    disconnect_push_consumer_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class PushSupplier;
  typedef PushSupplier *PushSupplier_ptr;

  class TAO_Notify_Skel_Export PushSupplier
    : public virtual POA_CosNotifyComm::NotifySubscribe,
      public virtual POA_CosEventComm::PushSupplier
  {
  protected:
    PushSupplier (void);
  
  public:
    /// Useful for template programming.
    typedef ::CosNotifyComm::PushSupplier _stub_type;
    typedef ::CosNotifyComm::PushSupplier_ptr _stub_ptr_type;
    typedef ::CosNotifyComm::PushSupplier_var _stub_var_type;

    PushSupplier (const PushSupplier& rhs);
    virtual ~PushSupplier (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::CosNotifyComm::PushSupplier *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    subscription_change_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    disconnect_push_supplier_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class StructuredPushConsumer;
  typedef StructuredPushConsumer *StructuredPushConsumer_ptr;

  class TAO_Notify_Skel_Export StructuredPushConsumer
    : public virtual POA_CosNotifyComm::NotifyPublish
  {
  protected:
    StructuredPushConsumer (void);
  
  public:
    /// Useful for template programming.
    typedef ::CosNotifyComm::StructuredPushConsumer _stub_type;
    typedef ::CosNotifyComm::StructuredPushConsumer_ptr _stub_ptr_type;
    typedef ::CosNotifyComm::StructuredPushConsumer_var _stub_var_type;

    StructuredPushConsumer (const StructuredPushConsumer& rhs);
    virtual ~StructuredPushConsumer (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::CosNotifyComm::StructuredPushConsumer *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void push_structured_event (
      const ::CosNotification::StructuredEvent & notification) = 0;

    static void push_structured_event_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void disconnect_structured_push_consumer (
      void) = 0;

    static void disconnect_structured_push_consumer_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    offer_change_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class StructuredPushSupplier;
  typedef StructuredPushSupplier *StructuredPushSupplier_ptr;

  class TAO_Notify_Skel_Export StructuredPushSupplier
    : public virtual POA_CosNotifyComm::NotifySubscribe
  {
  protected:
    StructuredPushSupplier (void);
  
  public:
    /// Useful for template programming.
    typedef ::CosNotifyComm::StructuredPushSupplier _stub_type;
    typedef ::CosNotifyComm::StructuredPushSupplier_ptr _stub_ptr_type;
    typedef ::CosNotifyComm::StructuredPushSupplier_var _stub_var_type;

    StructuredPushSupplier (const StructuredPushSupplier& rhs);
    virtual ~StructuredPushSupplier (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::CosNotifyComm::StructuredPushSupplier *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void disconnect_structured_push_supplier (
      void) = 0;

    static void disconnect_structured_push_supplier_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    subscription_change_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class SequencePushConsumer;
  typedef SequencePushConsumer *SequencePushConsumer_ptr;

  class TAO_Notify_Skel_Export SequencePushConsumer
    : public virtual POA_CosNotifyComm::NotifyPublish
  {
  protected:
    SequencePushConsumer (void);
  
  public:
    /// Useful for template programming.
    typedef ::CosNotifyComm::SequencePushConsumer _stub_type;
    typedef ::CosNotifyComm::SequencePushConsumer_ptr _stub_ptr_type;
    typedef ::CosNotifyComm::SequencePushConsumer_var _stub_var_type;

    SequencePushConsumer (const SequencePushConsumer& rhs);
    virtual ~SequencePushConsumer (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::CosNotifyComm::SequencePushConsumer *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void push_structured_events (
      const ::CosNotification::EventBatch & notifications) = 0;

    static void push_structured_events_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void disconnect_sequence_push_consumer (
      void) = 0;

    static void disconnect_sequence_push_consumer_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    offer_change_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class SequencePushSupplier;
  typedef SequencePushSupplier *SequencePushSupplier_ptr;

  class TAO_Notify_Skel_Export SequencePushSupplier
    : public virtual POA_CosNotifyComm::NotifySubscribe
  {
  protected:
    SequencePushSupplier (void);
  
  public:
    /// Useful for template programming.
    typedef ::CosNotifyComm::SequencePushSupplier _stub_type;
    typedef ::CosNotifyComm::SequencePushSupplier_ptr _stub_ptr_type;
    typedef ::CosNotifyComm::SequencePushSupplier_var _stub_var_type;

    SequencePushSupplier (const SequencePushSupplier& rhs);
    virtual ~SequencePushSupplier (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::CosNotifyComm::SequencePushSupplier *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void disconnect_sequence_push_supplier (
      void) = 0;

    static void disconnect_sequence_push_supplier_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    subscription_change_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);
  };

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_sh.cpp:72

} // module CosNotifyComm

TAO_END_VERSIONED_NAMESPACE_DECL


#if defined (__ACE_INLINE__)
#include "CosNotifyCommS.inl"
#endif /* defined INLINE */

#endif /* ifndef */

