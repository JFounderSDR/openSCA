// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_COSTYPEDEVENTCHANNELADMINC_EYEA5W_H_
#define _TAO_IDL_COSTYPEDEVENTCHANNELADMINC_EYEA5W_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/CosEvent/event_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "CosEventChannelAdminC.h"
#include "CosTypedEventCommC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Event_Export

// TAO_IDL - Generated from 
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace CosTypedEventChannelAdmin
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Event_Export InterfaceNotSupported : public ::CORBA::UserException
  {
  public:
    
    InterfaceNotSupported (void);
    InterfaceNotSupported (const InterfaceNotSupported &);
    ~InterfaceNotSupported (void);

    InterfaceNotSupported &operator= (const InterfaceNotSupported &);

    static void _tao_any_destructor (void *);

    static InterfaceNotSupported *_downcast ( ::CORBA::Exception *);
    static const InterfaceNotSupported *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_InterfaceNotSupported;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Event_Export NoSuchImplementation : public ::CORBA::UserException
  {
  public:
    
    NoSuchImplementation (void);
    NoSuchImplementation (const NoSuchImplementation &);
    ~NoSuchImplementation (void);

    NoSuchImplementation &operator= (const NoSuchImplementation &);

    static void _tao_any_destructor (void *);

    static NoSuchImplementation *_downcast ( ::CORBA::Exception *);
    static const NoSuchImplementation *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_NoSuchImplementation;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef char * Key;
  typedef ::CORBA::String_var Key_var;
  typedef ::CORBA::String_out Key_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_Key;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPUSHCONSUMER__VAR_OUT_CH_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPUSHCONSUMER__VAR_OUT_CH_

  class TypedProxyPushConsumer;
  typedef TypedProxyPushConsumer *TypedProxyPushConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        TypedProxyPushConsumer
      >
    TypedProxyPushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        TypedProxyPushConsumer
      >
    TypedProxyPushConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export TypedProxyPushConsumer
    : public virtual ::CosEventChannelAdmin::ProxyPushConsumer,
      public virtual ::CosTypedEventComm::TypedPushConsumer
  
  {
  public:
    friend class TAO::Narrow_Utils<TypedProxyPushConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef TypedProxyPushConsumer_ptr _ptr_type;
    typedef TypedProxyPushConsumer_var _var_type;
    typedef TypedProxyPushConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static TypedProxyPushConsumer_ptr _duplicate (TypedProxyPushConsumer_ptr obj);

    static void _tao_release (TypedProxyPushConsumer_ptr obj);

    static TypedProxyPushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static TypedProxyPushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TypedProxyPushConsumer_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_TypedProxyPushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    TypedProxyPushConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosTypedEventChannelAdmin_TypedProxyPushConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    TypedProxyPushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    TypedProxyPushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~TypedProxyPushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TypedProxyPushConsumer (const TypedProxyPushConsumer &);

    void operator= (const TypedProxyPushConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_TypedProxyPushConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPULLSUPPLIER__VAR_OUT_CH_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPULLSUPPLIER__VAR_OUT_CH_

  class TypedProxyPullSupplier;
  typedef TypedProxyPullSupplier *TypedProxyPullSupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        TypedProxyPullSupplier
      >
    TypedProxyPullSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        TypedProxyPullSupplier
      >
    TypedProxyPullSupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export TypedProxyPullSupplier
    : public virtual ::CosEventChannelAdmin::ProxyPullSupplier,
      public virtual ::CosTypedEventComm::TypedPullSupplier
  
  {
  public:
    friend class TAO::Narrow_Utils<TypedProxyPullSupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef TypedProxyPullSupplier_ptr _ptr_type;
    typedef TypedProxyPullSupplier_var _var_type;
    typedef TypedProxyPullSupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static TypedProxyPullSupplier_ptr _duplicate (TypedProxyPullSupplier_ptr obj);

    static void _tao_release (TypedProxyPullSupplier_ptr obj);

    static TypedProxyPullSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static TypedProxyPullSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TypedProxyPullSupplier_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_TypedProxyPullSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    TypedProxyPullSupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosTypedEventChannelAdmin_TypedProxyPullSupplier_setup_collocation (void);

    // Concrete non-local interface only.
    TypedProxyPullSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    TypedProxyPullSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~TypedProxyPullSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TypedProxyPullSupplier (const TypedProxyPullSupplier &);

    void operator= (const TypedProxyPullSupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_TypedProxyPullSupplier;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDSUPPLIERADMIN__VAR_OUT_CH_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDSUPPLIERADMIN__VAR_OUT_CH_

  class TypedSupplierAdmin;
  typedef TypedSupplierAdmin *TypedSupplierAdmin_ptr;

  typedef
    TAO_Objref_Var_T<
        TypedSupplierAdmin
      >
    TypedSupplierAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        TypedSupplierAdmin
      >
    TypedSupplierAdmin_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export TypedSupplierAdmin
    : public virtual ::CosEventChannelAdmin::SupplierAdmin
  
  {
  public:
    friend class TAO::Narrow_Utils<TypedSupplierAdmin>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef TypedSupplierAdmin_ptr _ptr_type;
    typedef TypedSupplierAdmin_var _var_type;
    typedef TypedSupplierAdmin_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static TypedSupplierAdmin_ptr _duplicate (TypedSupplierAdmin_ptr obj);

    static void _tao_release (TypedSupplierAdmin_ptr obj);

    static TypedSupplierAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static TypedSupplierAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TypedSupplierAdmin_ptr _nil (void);

    virtual ::CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr obtain_typed_push_consumer (
      const char * supported_interface);

    virtual ::CosEventChannelAdmin::ProxyPullConsumer_ptr obtain_typed_pull_consumer (
      const char * uses_interface);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_TypedSupplierAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    TypedSupplierAdmin (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosTypedEventChannelAdmin_TypedSupplierAdmin_setup_collocation (void);

    // Concrete non-local interface only.
    TypedSupplierAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    TypedSupplierAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~TypedSupplierAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TypedSupplierAdmin (const TypedSupplierAdmin &);

    void operator= (const TypedSupplierAdmin &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_TypedSupplierAdmin;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDCONSUMERADMIN__VAR_OUT_CH_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDCONSUMERADMIN__VAR_OUT_CH_

  class TypedConsumerAdmin;
  typedef TypedConsumerAdmin *TypedConsumerAdmin_ptr;

  typedef
    TAO_Objref_Var_T<
        TypedConsumerAdmin
      >
    TypedConsumerAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        TypedConsumerAdmin
      >
    TypedConsumerAdmin_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export TypedConsumerAdmin
    : public virtual ::CosEventChannelAdmin::ConsumerAdmin
  
  {
  public:
    friend class TAO::Narrow_Utils<TypedConsumerAdmin>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef TypedConsumerAdmin_ptr _ptr_type;
    typedef TypedConsumerAdmin_var _var_type;
    typedef TypedConsumerAdmin_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static TypedConsumerAdmin_ptr _duplicate (TypedConsumerAdmin_ptr obj);

    static void _tao_release (TypedConsumerAdmin_ptr obj);

    static TypedConsumerAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static TypedConsumerAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TypedConsumerAdmin_ptr _nil (void);

    virtual ::CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr obtain_typed_pull_supplier (
      const char * supported_interface);

    virtual ::CosEventChannelAdmin::ProxyPushSupplier_ptr obtain_typed_push_supplier (
      const char * uses_interface);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_TypedConsumerAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    TypedConsumerAdmin (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosTypedEventChannelAdmin_TypedConsumerAdmin_setup_collocation (void);

    // Concrete non-local interface only.
    TypedConsumerAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    TypedConsumerAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~TypedConsumerAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TypedConsumerAdmin (const TypedConsumerAdmin &);

    void operator= (const TypedConsumerAdmin &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_TypedConsumerAdmin;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDEVENTCHANNEL__VAR_OUT_CH_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDEVENTCHANNEL__VAR_OUT_CH_

  class TypedEventChannel;
  typedef TypedEventChannel *TypedEventChannel_ptr;

  typedef
    TAO_Objref_Var_T<
        TypedEventChannel
      >
    TypedEventChannel_var;
  
  typedef
    TAO_Objref_Out_T<
        TypedEventChannel
      >
    TypedEventChannel_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export TypedEventChannel
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<TypedEventChannel>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef TypedEventChannel_ptr _ptr_type;
    typedef TypedEventChannel_var _var_type;
    typedef TypedEventChannel_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static TypedEventChannel_ptr _duplicate (TypedEventChannel_ptr obj);

    static void _tao_release (TypedEventChannel_ptr obj);

    static TypedEventChannel_ptr _narrow (::CORBA::Object_ptr obj);
    static TypedEventChannel_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TypedEventChannel_ptr _nil (void);

    virtual ::CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr for_consumers (
      void);

    virtual ::CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr for_suppliers (
      void);

    virtual void destroy (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_TypedEventChannel_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    TypedEventChannel (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosTypedEventChannelAdmin_TypedEventChannel_setup_collocation (void);

    // Concrete non-local interface only.
    TypedEventChannel (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    TypedEventChannel (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~TypedEventChannel (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TypedEventChannel (const TypedEventChannel &);

    void operator= (const TypedEventChannel &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_TypedEventChannel;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module CosTypedEventChannelAdmin

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPUSHCONSUMER__ARG_TRAITS_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPUSHCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosTypedEventChannelAdmin::TypedProxyPushConsumer>
    : public
        Object_Arg_Traits_T<
            ::CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr,
            ::CosTypedEventChannelAdmin::TypedProxyPushConsumer_var,
            ::CosTypedEventChannelAdmin::TypedProxyPushConsumer_out,
            TAO::Objref_Traits<CosTypedEventChannelAdmin::TypedProxyPushConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPULLSUPPLIER__ARG_TRAITS_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPULLSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosTypedEventChannelAdmin::TypedProxyPullSupplier>
    : public
        Object_Arg_Traits_T<
            ::CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr,
            ::CosTypedEventChannelAdmin::TypedProxyPullSupplier_var,
            ::CosTypedEventChannelAdmin::TypedProxyPullSupplier_out,
            TAO::Objref_Traits<CosTypedEventChannelAdmin::TypedProxyPullSupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDSUPPLIERADMIN__ARG_TRAITS_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDSUPPLIERADMIN__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosTypedEventChannelAdmin::TypedSupplierAdmin>
    : public
        Object_Arg_Traits_T<
            ::CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr,
            ::CosTypedEventChannelAdmin::TypedSupplierAdmin_var,
            ::CosTypedEventChannelAdmin::TypedSupplierAdmin_out,
            TAO::Objref_Traits<CosTypedEventChannelAdmin::TypedSupplierAdmin>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDCONSUMERADMIN__ARG_TRAITS_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDCONSUMERADMIN__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosTypedEventChannelAdmin::TypedConsumerAdmin>
    : public
        Object_Arg_Traits_T<
            ::CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr,
            ::CosTypedEventChannelAdmin::TypedConsumerAdmin_var,
            ::CosTypedEventChannelAdmin::TypedConsumerAdmin_out,
            TAO::Objref_Traits<CosTypedEventChannelAdmin::TypedConsumerAdmin>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDEVENTCHANNEL__ARG_TRAITS_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDEVENTCHANNEL__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosTypedEventChannelAdmin::TypedEventChannel>
    : public
        Object_Arg_Traits_T<
            ::CosTypedEventChannelAdmin::TypedEventChannel_ptr,
            ::CosTypedEventChannelAdmin::TypedEventChannel_var,
            ::CosTypedEventChannelAdmin::TypedEventChannel_out,
            TAO::Objref_Traits<CosTypedEventChannelAdmin::TypedEventChannel>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosTypedEventChannelAdmin__TAO_TypedProxyPushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosTypedEventChannelAdmin__TAO_TypedProxyPullSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosTypedEventChannelAdmin__TAO_TypedSupplierAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosTypedEventChannelAdmin__TAO_TypedConsumerAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosTypedEventChannelAdmin__TAO_TypedEventChannel_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPUSHCONSUMER__TRAITS_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPUSHCONSUMER__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosTypedEventChannelAdmin::TypedProxyPushConsumer>
  {
    static ::CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr duplicate (
        ::CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr p);
    static void release (
        ::CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr p);
    static ::CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPULLSUPPLIER__TRAITS_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDPROXYPULLSUPPLIER__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosTypedEventChannelAdmin::TypedProxyPullSupplier>
  {
    static ::CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr duplicate (
        ::CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr p);
    static void release (
        ::CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr p);
    static ::CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDSUPPLIERADMIN__TRAITS_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDSUPPLIERADMIN__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosTypedEventChannelAdmin::TypedSupplierAdmin>
  {
    static ::CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr duplicate (
        ::CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr p);
    static void release (
        ::CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr p);
    static ::CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDCONSUMERADMIN__TRAITS_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDCONSUMERADMIN__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosTypedEventChannelAdmin::TypedConsumerAdmin>
  {
    static ::CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr duplicate (
        ::CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr p);
    static void release (
        ::CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr p);
    static ::CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSTYPEDEVENTCHANNELADMIN_TYPEDEVENTCHANNEL__TRAITS_)
#define _COSTYPEDEVENTCHANNELADMIN_TYPEDEVENTCHANNEL__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosTypedEventChannelAdmin::TypedEventChannel>
  {
    static ::CosTypedEventChannelAdmin::TypedEventChannel_ptr duplicate (
        ::CosTypedEventChannelAdmin::TypedEventChannel_ptr p);
    static void release (
        ::CosTypedEventChannelAdmin::TypedEventChannel_ptr p);
    static ::CosTypedEventChannelAdmin::TypedEventChannel_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosTypedEventChannelAdmin::TypedEventChannel_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventChannelAdmin
{
  

  TAO_Event_Export void operator<<= (::CORBA::Any &, const ::CosTypedEventChannelAdmin::InterfaceNotSupported &); // copying version
  TAO_Event_Export void operator<<= (::CORBA::Any &, ::CosTypedEventChannelAdmin::InterfaceNotSupported*); // noncopying version
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosTypedEventChannelAdmin::InterfaceNotSupported *&); // deprecated
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosTypedEventChannelAdmin::InterfaceNotSupported *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Event_Export void operator<<= (::CORBA::Any &, const CosTypedEventChannelAdmin::InterfaceNotSupported &); // copying version
TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::InterfaceNotSupported*); // noncopying version
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTypedEventChannelAdmin::InterfaceNotSupported *&); // deprecated
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTypedEventChannelAdmin::InterfaceNotSupported *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventChannelAdmin
{
  

  TAO_Event_Export void operator<<= (::CORBA::Any &, const ::CosTypedEventChannelAdmin::NoSuchImplementation &); // copying version
  TAO_Event_Export void operator<<= (::CORBA::Any &, ::CosTypedEventChannelAdmin::NoSuchImplementation*); // noncopying version
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosTypedEventChannelAdmin::NoSuchImplementation *&); // deprecated
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosTypedEventChannelAdmin::NoSuchImplementation *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Event_Export void operator<<= (::CORBA::Any &, const CosTypedEventChannelAdmin::NoSuchImplementation &); // copying version
TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::NoSuchImplementation*); // noncopying version
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTypedEventChannelAdmin::NoSuchImplementation *&); // deprecated
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTypedEventChannelAdmin::NoSuchImplementation *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedProxyPushConsumer_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedProxyPushConsumer_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TypedProxyPushConsumer_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedProxyPullSupplier_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedProxyPullSupplier_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TypedProxyPullSupplier_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedSupplierAdmin_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedSupplierAdmin_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TypedSupplierAdmin_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedConsumerAdmin_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedConsumerAdmin_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TypedConsumerAdmin_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedEventChannel_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedEventChannel_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TypedEventChannel_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::TypedEventChannel_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventChannelAdmin::TypedEventChannel_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTypedEventChannelAdmin::TypedEventChannel_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTypedEventChannelAdmin::InterfaceNotSupported &);
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTypedEventChannelAdmin::InterfaceNotSupported &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTypedEventChannelAdmin::NoSuchImplementation &);
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTypedEventChannelAdmin::NoSuchImplementation &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTypedEventChannelAdmin::TypedProxyPushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTypedEventChannelAdmin::TypedProxyPullSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTypedEventChannelAdmin::TypedSupplierAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTypedEventChannelAdmin::TypedConsumerAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTypedEventChannelAdmin::TypedEventChannel_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTypedEventChannelAdmin::TypedEventChannel_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581
#if defined (__ACE_INLINE__)
#include "CosTypedEventChannelAdminC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

