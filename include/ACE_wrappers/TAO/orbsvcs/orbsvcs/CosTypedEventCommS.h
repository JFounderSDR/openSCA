// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:460

#ifndef _TAO_IDL_COSTYPEDEVENTCOMMS_NMSB0Y_H_
#define _TAO_IDL_COSTYPEDEVENTCOMMS_NMSB0Y_H_


#include "CosTypedEventCommC.h"
#include "CosEventCommS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Collocation_Proxy_Broker.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

#include /**/ "orbsvcs/CosEvent/event_skel_export.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Event_Skel_Export

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSTYPEDEVENTCOMM_TYPEDPUSHCONSUMER__SARG_TRAITS_)
#define _COSTYPEDEVENTCOMM_TYPEDPUSHCONSUMER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CosTypedEventComm::TypedPushConsumer>
    : public
        Object_SArg_Traits_T<
            ::CosTypedEventComm::TypedPushConsumer_ptr,
            ::CosTypedEventComm::TypedPushConsumer_var,
            ::CosTypedEventComm::TypedPushConsumer_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSTYPEDEVENTCOMM_TYPEDPULLSUPPLIER__SARG_TRAITS_)
#define _COSTYPEDEVENTCOMM_TYPEDPULLSUPPLIER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CosTypedEventComm::TypedPullSupplier>
    : public
        Object_SArg_Traits_T<
            ::CosTypedEventComm::TypedPullSupplier_ptr,
            ::CosTypedEventComm::TypedPullSupplier_var,
            ::CosTypedEventComm::TypedPullSupplier_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_sh.cpp:41

namespace POA_CosTypedEventComm
{
  

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class TypedPushConsumer;
  typedef TypedPushConsumer *TypedPushConsumer_ptr;

  class TAO_Event_Skel_Export TypedPushConsumer
    : public virtual POA_CosEventComm::PushConsumer
  {
  protected:
    TypedPushConsumer (void);
  
  public:
    /// Useful for template programming.
    typedef ::CosTypedEventComm::TypedPushConsumer _stub_type;
    typedef ::CosTypedEventComm::TypedPushConsumer_ptr _stub_ptr_type;
    typedef ::CosTypedEventComm::TypedPushConsumer_var _stub_var_type;

    TypedPushConsumer (const TypedPushConsumer& rhs);
    virtual ~TypedPushConsumer (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::CosTypedEventComm::TypedPushConsumer *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual ::CORBA::Object_ptr get_typed_consumer (
      void) = 0;

    static void get_typed_consumer_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    push_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    disconnect_push_consumer_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class TypedPullSupplier;
  typedef TypedPullSupplier *TypedPullSupplier_ptr;

  class TAO_Event_Skel_Export TypedPullSupplier
    : public virtual POA_CosEventComm::PullSupplier
  {
  protected:
    TypedPullSupplier (void);
  
  public:
    /// Useful for template programming.
    typedef ::CosTypedEventComm::TypedPullSupplier _stub_type;
    typedef ::CosTypedEventComm::TypedPullSupplier_ptr _stub_ptr_type;
    typedef ::CosTypedEventComm::TypedPullSupplier_var _stub_var_type;

    TypedPullSupplier (const TypedPullSupplier& rhs);
    virtual ~TypedPullSupplier (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::CosTypedEventComm::TypedPullSupplier *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual ::CORBA::Object_ptr get_typed_supplier (
      void) = 0;

    static void get_typed_supplier_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    pull_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    try_pull_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2223

    static void
    disconnect_pull_supplier_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);
  };

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_sh.cpp:72

} // module CosTypedEventComm

#include "CosTypedEventCommS_T.h"

#if defined (__ACE_INLINE__)
#include "CosTypedEventCommS.inl"
#endif /* defined INLINE */

#endif /* ifndef */

