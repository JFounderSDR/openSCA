// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_RTECEVENTCHANNELADMINC_U0TOEJ_H_
#define _TAO_IDL_RTECEVENTCHANNELADMINC_U0TOEJ_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/Event/event_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "RtecEventCommC.h"
#include "RtecBaseC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_RTEvent_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

typedef CORBA::OctetSeq EventPayload;
typedef CORBA::OctetSeq_var EventPayload_var;
typedef CORBA::OctetSeq_out EventPayload_out;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace RtecEventChannelAdmin
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_RTEvent_Export AlreadyConnected : public ::CORBA::UserException
  {
  public:
    
    AlreadyConnected (void);
    AlreadyConnected (const AlreadyConnected &);
    ~AlreadyConnected (void);

    AlreadyConnected &operator= (const AlreadyConnected &);

    static void _tao_any_destructor (void *);

    static AlreadyConnected *_downcast ( ::CORBA::Exception *);
    static const AlreadyConnected *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_AlreadyConnected;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct Dependency;

  typedef
    ::TAO_Var_Var_T<
        Dependency
      >
    Dependency_var;
  
  typedef
    ::TAO_Out_T<
        Dependency
      >
    Dependency_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_RTEvent_Export Dependency
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Dependency_var _var_type;
    typedef Dependency_out _out_type;

    static void _tao_any_destructor (void *);
    
    RtecEventComm::Event event;
    RtecBase::handle_t rt_info;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_Dependency;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_RTECEVENTCHANNELADMIN_DEPENDENCYSET_CH_)
#define _RTECEVENTCHANNELADMIN_DEPENDENCYSET_CH_

  class DependencySet;

  typedef
    ::TAO_VarSeq_Var_T<
        DependencySet
      >
    DependencySet_var;

  typedef
    ::TAO_Seq_Out_T<
        DependencySet
      >
    DependencySet_out;

  class TAO_RTEvent_Export DependencySet
    : public
        ::TAO::unbounded_value_sequence<
            Dependency
          >
  {
  public:
    DependencySet (void);
    DependencySet ( ::CORBA::ULong max);
    DependencySet (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Dependency* buffer, 
      ::CORBA::Boolean release = false);
    DependencySet (const DependencySet &);
    virtual ~DependencySet (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef DependencySet_var _var_type;
    typedef DependencySet_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_DependencySet;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct ConsumerQOS;

  typedef
    ::TAO_Var_Var_T<
        ConsumerQOS
      >
    ConsumerQOS_var;
  
  typedef
    ::TAO_Out_T<
        ConsumerQOS
      >
    ConsumerQOS_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_RTEvent_Export ConsumerQOS
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ConsumerQOS_var _var_type;
    typedef ConsumerQOS_out _out_type;

    static void _tao_any_destructor (void *);
    
    RtecEventChannelAdmin::DependencySet dependencies;
    ::CORBA::Boolean is_gateway;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_ConsumerQOS;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct Publication;

  typedef
    ::TAO_Var_Var_T<
        Publication
      >
    Publication_var;
  
  typedef
    ::TAO_Out_T<
        Publication
      >
    Publication_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_RTEvent_Export Publication
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Publication_var _var_type;
    typedef Publication_out _out_type;

    static void _tao_any_destructor (void *);
    
    RtecEventComm::Event event;
    RtecBase::Dependency_Info dependency_info;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_Publication;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_RTECEVENTCHANNELADMIN_PUBLICATIONSET_CH_)
#define _RTECEVENTCHANNELADMIN_PUBLICATIONSET_CH_

  class PublicationSet;

  typedef
    ::TAO_VarSeq_Var_T<
        PublicationSet
      >
    PublicationSet_var;

  typedef
    ::TAO_Seq_Out_T<
        PublicationSet
      >
    PublicationSet_out;

  class TAO_RTEvent_Export PublicationSet
    : public
        ::TAO::unbounded_value_sequence<
            Publication
          >
  {
  public:
    PublicationSet (void);
    PublicationSet ( ::CORBA::ULong max);
    PublicationSet (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Publication* buffer, 
      ::CORBA::Boolean release = false);
    PublicationSet (const PublicationSet &);
    virtual ~PublicationSet (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef PublicationSet_var _var_type;
    typedef PublicationSet_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_PublicationSet;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct SupplierQOS;

  typedef
    ::TAO_Var_Var_T<
        SupplierQOS
      >
    SupplierQOS_var;
  
  typedef
    ::TAO_Out_T<
        SupplierQOS
      >
    SupplierQOS_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_RTEvent_Export SupplierQOS
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SupplierQOS_var _var_type;
    typedef SupplierQOS_out _out_type;

    static void _tao_any_destructor (void *);
    
    RtecEventChannelAdmin::PublicationSet publications;
    ::CORBA::Boolean is_gateway;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_SupplierQOS;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_RTEvent_Export TypeError : public ::CORBA::UserException
  {
  public:
    
    TypeError (void);
    TypeError (const TypeError &);
    ~TypeError (void);

    TypeError &operator= (const TypeError &);

    static void _tao_any_destructor (void *);

    static TypeError *_downcast ( ::CORBA::Exception *);
    static const TypeError *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_TypeError;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_RTECEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__VAR_OUT_CH_)
#define _RTECEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__VAR_OUT_CH_

  class ProxyPushSupplier;
  typedef ProxyPushSupplier *ProxyPushSupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        ProxyPushSupplier
      >
    ProxyPushSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        ProxyPushSupplier
      >
    ProxyPushSupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_RTEvent_Export ProxyPushSupplier
    : public virtual ::RtecEventComm::PushSupplier
  
  {
  public:
    friend class TAO::Narrow_Utils<ProxyPushSupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyPushSupplier_ptr _ptr_type;
    typedef ProxyPushSupplier_var _var_type;
    typedef ProxyPushSupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ProxyPushSupplier_ptr _duplicate (ProxyPushSupplier_ptr obj);

    static void _tao_release (ProxyPushSupplier_ptr obj);

    static ProxyPushSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static ProxyPushSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ProxyPushSupplier_ptr _nil (void);

    virtual void connect_push_consumer (
      ::RtecEventComm::PushConsumer_ptr push_consumer,
      const ::RtecEventChannelAdmin::ConsumerQOS & qos);

    virtual void suspend_connection (
      void);

    virtual void resume_connection (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ProxyPushSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ProxyPushSupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void RtecEventChannelAdmin_ProxyPushSupplier_setup_collocation (void);

    // Concrete non-local interface only.
    ProxyPushSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ProxyPushSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ProxyPushSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ProxyPushSupplier (const ProxyPushSupplier &);

    void operator= (const ProxyPushSupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_ProxyPushSupplier;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_RTECEVENTCHANNELADMIN_PROXYPUSHCONSUMER__VAR_OUT_CH_)
#define _RTECEVENTCHANNELADMIN_PROXYPUSHCONSUMER__VAR_OUT_CH_

  class ProxyPushConsumer;
  typedef ProxyPushConsumer *ProxyPushConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        ProxyPushConsumer
      >
    ProxyPushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        ProxyPushConsumer
      >
    ProxyPushConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_RTEvent_Export ProxyPushConsumer
    : public virtual ::RtecEventComm::PushConsumer
  
  {
  public:
    friend class TAO::Narrow_Utils<ProxyPushConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyPushConsumer_ptr _ptr_type;
    typedef ProxyPushConsumer_var _var_type;
    typedef ProxyPushConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ProxyPushConsumer_ptr _duplicate (ProxyPushConsumer_ptr obj);

    static void _tao_release (ProxyPushConsumer_ptr obj);

    static ProxyPushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static ProxyPushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ProxyPushConsumer_ptr _nil (void);

    virtual void connect_push_supplier (
      ::RtecEventComm::PushSupplier_ptr push_supplier,
      const ::RtecEventChannelAdmin::SupplierQOS & qos);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ProxyPushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ProxyPushConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void RtecEventChannelAdmin_ProxyPushConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    ProxyPushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ProxyPushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ProxyPushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ProxyPushConsumer (const ProxyPushConsumer &);

    void operator= (const ProxyPushConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_ProxyPushConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_RTECEVENTCHANNELADMIN_CONSUMERADMIN__VAR_OUT_CH_)
#define _RTECEVENTCHANNELADMIN_CONSUMERADMIN__VAR_OUT_CH_

  class ConsumerAdmin;
  typedef ConsumerAdmin *ConsumerAdmin_ptr;

  typedef
    TAO_Objref_Var_T<
        ConsumerAdmin
      >
    ConsumerAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        ConsumerAdmin
      >
    ConsumerAdmin_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_RTEvent_Export ConsumerAdmin
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ConsumerAdmin>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ConsumerAdmin_ptr _ptr_type;
    typedef ConsumerAdmin_var _var_type;
    typedef ConsumerAdmin_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ConsumerAdmin_ptr _duplicate (ConsumerAdmin_ptr obj);

    static void _tao_release (ConsumerAdmin_ptr obj);

    static ConsumerAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static ConsumerAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ConsumerAdmin_ptr _nil (void);

    virtual ::RtecEventChannelAdmin::ProxyPushSupplier_ptr obtain_push_supplier (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ConsumerAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ConsumerAdmin (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void RtecEventChannelAdmin_ConsumerAdmin_setup_collocation (void);

    // Concrete non-local interface only.
    ConsumerAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ConsumerAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ConsumerAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ConsumerAdmin (const ConsumerAdmin &);

    void operator= (const ConsumerAdmin &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_ConsumerAdmin;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_RTECEVENTCHANNELADMIN_SUPPLIERADMIN__VAR_OUT_CH_)
#define _RTECEVENTCHANNELADMIN_SUPPLIERADMIN__VAR_OUT_CH_

  class SupplierAdmin;
  typedef SupplierAdmin *SupplierAdmin_ptr;

  typedef
    TAO_Objref_Var_T<
        SupplierAdmin
      >
    SupplierAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        SupplierAdmin
      >
    SupplierAdmin_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_RTEvent_Export SupplierAdmin
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<SupplierAdmin>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SupplierAdmin_ptr _ptr_type;
    typedef SupplierAdmin_var _var_type;
    typedef SupplierAdmin_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SupplierAdmin_ptr _duplicate (SupplierAdmin_ptr obj);

    static void _tao_release (SupplierAdmin_ptr obj);

    static SupplierAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static SupplierAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SupplierAdmin_ptr _nil (void);

    virtual ::RtecEventChannelAdmin::ProxyPushConsumer_ptr obtain_push_consumer (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_SupplierAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    SupplierAdmin (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void RtecEventChannelAdmin_SupplierAdmin_setup_collocation (void);

    // Concrete non-local interface only.
    SupplierAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    SupplierAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~SupplierAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    SupplierAdmin (const SupplierAdmin &);

    void operator= (const SupplierAdmin &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_SupplierAdmin;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_RTECEVENTCHANNELADMIN_OBSERVER__VAR_OUT_CH_)
#define _RTECEVENTCHANNELADMIN_OBSERVER__VAR_OUT_CH_

  class Observer;
  typedef Observer *Observer_ptr;

  typedef
    TAO_Objref_Var_T<
        Observer
      >
    Observer_var;
  
  typedef
    TAO_Objref_Out_T<
        Observer
      >
    Observer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_RTEvent_Export Observer
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<Observer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Observer_ptr _ptr_type;
    typedef Observer_var _var_type;
    typedef Observer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Observer_ptr _duplicate (Observer_ptr obj);

    static void _tao_release (Observer_ptr obj);

    static Observer_ptr _narrow (::CORBA::Object_ptr obj);
    static Observer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Observer_ptr _nil (void);

    virtual void update_consumer (
      const ::RtecEventChannelAdmin::ConsumerQOS & sub);

    virtual void update_supplier (
      const ::RtecEventChannelAdmin::SupplierQOS & pub);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_Observer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    Observer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void RtecEventChannelAdmin_Observer_setup_collocation (void);

    // Concrete non-local interface only.
    Observer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Observer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Observer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Observer (const Observer &);

    void operator= (const Observer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_Observer;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::ULong Observer_Handle;
  typedef ::CORBA::ULong_out Observer_Handle_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_Observer_Handle;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_RTECEVENTCHANNELADMIN_EVENTCHANNEL__VAR_OUT_CH_)
#define _RTECEVENTCHANNELADMIN_EVENTCHANNEL__VAR_OUT_CH_

  class EventChannel;
  typedef EventChannel *EventChannel_ptr;

  typedef
    TAO_Objref_Var_T<
        EventChannel
      >
    EventChannel_var;
  
  typedef
    TAO_Objref_Out_T<
        EventChannel
      >
    EventChannel_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_RTEvent_Export EventChannel
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<EventChannel>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef EventChannel_ptr _ptr_type;
    typedef EventChannel_var _var_type;
    typedef EventChannel_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static EventChannel_ptr _duplicate (EventChannel_ptr obj);

    static void _tao_release (EventChannel_ptr obj);

    static EventChannel_ptr _narrow (::CORBA::Object_ptr obj);
    static EventChannel_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static EventChannel_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_RTEvent_Export SYNCHRONIZATION_ERROR : public ::CORBA::UserException
    {
    public:
      
      SYNCHRONIZATION_ERROR (void);
      SYNCHRONIZATION_ERROR (const SYNCHRONIZATION_ERROR &);
      ~SYNCHRONIZATION_ERROR (void);

      SYNCHRONIZATION_ERROR &operator= (const SYNCHRONIZATION_ERROR &);

      static void _tao_any_destructor (void *);

      static SYNCHRONIZATION_ERROR *_downcast ( ::CORBA::Exception *);
      static const SYNCHRONIZATION_ERROR *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_SYNCHRONIZATION_ERROR;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_RTEvent_Export CANT_APPEND_OBSERVER : public ::CORBA::UserException
    {
    public:
      
      CANT_APPEND_OBSERVER (void);
      CANT_APPEND_OBSERVER (const CANT_APPEND_OBSERVER &);
      ~CANT_APPEND_OBSERVER (void);

      CANT_APPEND_OBSERVER &operator= (const CANT_APPEND_OBSERVER &);

      static void _tao_any_destructor (void *);

      static CANT_APPEND_OBSERVER *_downcast ( ::CORBA::Exception *);
      static const CANT_APPEND_OBSERVER *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_CANT_APPEND_OBSERVER;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_RTEvent_Export CANT_REMOVE_OBSERVER : public ::CORBA::UserException
    {
    public:
      
      CANT_REMOVE_OBSERVER (void);
      CANT_REMOVE_OBSERVER (const CANT_REMOVE_OBSERVER &);
      ~CANT_REMOVE_OBSERVER (void);

      CANT_REMOVE_OBSERVER &operator= (const CANT_REMOVE_OBSERVER &);

      static void _tao_any_destructor (void *);

      static CANT_REMOVE_OBSERVER *_downcast ( ::CORBA::Exception *);
      static const CANT_REMOVE_OBSERVER *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_CANT_REMOVE_OBSERVER;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_RTEvent_Export QOS_ERROR : public ::CORBA::UserException
    {
    public:
      
      QOS_ERROR (void);
      QOS_ERROR (const QOS_ERROR &);
      ~QOS_ERROR (void);

      QOS_ERROR &operator= (const QOS_ERROR &);

      static void _tao_any_destructor (void *);

      static QOS_ERROR *_downcast ( ::CORBA::Exception *);
      static const QOS_ERROR *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_QOS_ERROR;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_RTEvent_Export SUBSCRIPTION_ERROR : public ::CORBA::UserException
    {
    public:
      
      SUBSCRIPTION_ERROR (void);
      SUBSCRIPTION_ERROR (const SUBSCRIPTION_ERROR &);
      ~SUBSCRIPTION_ERROR (void);

      SUBSCRIPTION_ERROR &operator= (const SUBSCRIPTION_ERROR &);

      static void _tao_any_destructor (void *);

      static SUBSCRIPTION_ERROR *_downcast ( ::CORBA::Exception *);
      static const SUBSCRIPTION_ERROR *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_SUBSCRIPTION_ERROR;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_RTEvent_Export CORRELATION_ERROR : public ::CORBA::UserException
    {
    public:
      
      CORRELATION_ERROR (void);
      CORRELATION_ERROR (const CORRELATION_ERROR &);
      ~CORRELATION_ERROR (void);

      CORRELATION_ERROR &operator= (const CORRELATION_ERROR &);

      static void _tao_any_destructor (void *);

      static CORRELATION_ERROR *_downcast ( ::CORBA::Exception *);
      static const CORRELATION_ERROR *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_CORRELATION_ERROR;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_RTEvent_Export DISPATCH_ERROR : public ::CORBA::UserException
    {
    public:
      
      DISPATCH_ERROR (void);
      DISPATCH_ERROR (const DISPATCH_ERROR &);
      ~DISPATCH_ERROR (void);

      DISPATCH_ERROR &operator= (const DISPATCH_ERROR &);

      static void _tao_any_destructor (void *);

      static DISPATCH_ERROR *_downcast ( ::CORBA::Exception *);
      static const DISPATCH_ERROR *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_DISPATCH_ERROR;

    virtual ::RtecEventChannelAdmin::ConsumerAdmin_ptr for_consumers (
      void);

    virtual ::RtecEventChannelAdmin::SupplierAdmin_ptr for_suppliers (
      void);

    virtual void destroy (
      void);

    virtual ::RtecEventChannelAdmin::Observer_Handle append_observer (
      ::RtecEventChannelAdmin::Observer_ptr gw);

    virtual void remove_observer (
      ::RtecEventChannelAdmin::Observer_Handle gw);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_EventChannel_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    EventChannel (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void RtecEventChannelAdmin_EventChannel_setup_collocation (void);

    // Concrete non-local interface only.
    EventChannel (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    EventChannel (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~EventChannel (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    EventChannel (const EventChannel &);

    void operator= (const EventChannel &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_EventChannel;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module RtecEventChannelAdmin

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::RtecEventChannelAdmin::Dependency>
    : public
        Var_Size_Arg_Traits_T<
            ::RtecEventChannelAdmin::Dependency,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::RtecEventChannelAdmin::DependencySet>
    : public
        Var_Size_Arg_Traits_T<
            ::RtecEventChannelAdmin::DependencySet,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::RtecEventChannelAdmin::ConsumerQOS>
    : public
        Var_Size_Arg_Traits_T<
            ::RtecEventChannelAdmin::ConsumerQOS,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::RtecEventChannelAdmin::Publication>
    : public
        Var_Size_Arg_Traits_T<
            ::RtecEventChannelAdmin::Publication,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::RtecEventChannelAdmin::PublicationSet>
    : public
        Var_Size_Arg_Traits_T<
            ::RtecEventChannelAdmin::PublicationSet,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::RtecEventChannelAdmin::SupplierQOS>
    : public
        Var_Size_Arg_Traits_T<
            ::RtecEventChannelAdmin::SupplierQOS,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_RTECEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__ARG_TRAITS_)
#define _RTECEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::RtecEventChannelAdmin::ProxyPushSupplier>
    : public
        Object_Arg_Traits_T<
            ::RtecEventChannelAdmin::ProxyPushSupplier_ptr,
            ::RtecEventChannelAdmin::ProxyPushSupplier_var,
            ::RtecEventChannelAdmin::ProxyPushSupplier_out,
            TAO::Objref_Traits<RtecEventChannelAdmin::ProxyPushSupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_RTECEVENTCHANNELADMIN_PROXYPUSHCONSUMER__ARG_TRAITS_)
#define _RTECEVENTCHANNELADMIN_PROXYPUSHCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::RtecEventChannelAdmin::ProxyPushConsumer>
    : public
        Object_Arg_Traits_T<
            ::RtecEventChannelAdmin::ProxyPushConsumer_ptr,
            ::RtecEventChannelAdmin::ProxyPushConsumer_var,
            ::RtecEventChannelAdmin::ProxyPushConsumer_out,
            TAO::Objref_Traits<RtecEventChannelAdmin::ProxyPushConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_RTECEVENTCHANNELADMIN_CONSUMERADMIN__ARG_TRAITS_)
#define _RTECEVENTCHANNELADMIN_CONSUMERADMIN__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::RtecEventChannelAdmin::ConsumerAdmin>
    : public
        Object_Arg_Traits_T<
            ::RtecEventChannelAdmin::ConsumerAdmin_ptr,
            ::RtecEventChannelAdmin::ConsumerAdmin_var,
            ::RtecEventChannelAdmin::ConsumerAdmin_out,
            TAO::Objref_Traits<RtecEventChannelAdmin::ConsumerAdmin>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_RTECEVENTCHANNELADMIN_SUPPLIERADMIN__ARG_TRAITS_)
#define _RTECEVENTCHANNELADMIN_SUPPLIERADMIN__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::RtecEventChannelAdmin::SupplierAdmin>
    : public
        Object_Arg_Traits_T<
            ::RtecEventChannelAdmin::SupplierAdmin_ptr,
            ::RtecEventChannelAdmin::SupplierAdmin_var,
            ::RtecEventChannelAdmin::SupplierAdmin_out,
            TAO::Objref_Traits<RtecEventChannelAdmin::SupplierAdmin>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_RTECEVENTCHANNELADMIN_OBSERVER__ARG_TRAITS_)
#define _RTECEVENTCHANNELADMIN_OBSERVER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::RtecEventChannelAdmin::Observer>
    : public
        Object_Arg_Traits_T<
            ::RtecEventChannelAdmin::Observer_ptr,
            ::RtecEventChannelAdmin::Observer_var,
            ::RtecEventChannelAdmin::Observer_out,
            TAO::Objref_Traits<RtecEventChannelAdmin::Observer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_RTECEVENTCHANNELADMIN_EVENTCHANNEL__ARG_TRAITS_)
#define _RTECEVENTCHANNELADMIN_EVENTCHANNEL__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::RtecEventChannelAdmin::EventChannel>
    : public
        Object_Arg_Traits_T<
            ::RtecEventChannelAdmin::EventChannel_ptr,
            ::RtecEventChannelAdmin::EventChannel_var,
            ::RtecEventChannelAdmin::EventChannel_out,
            TAO::Objref_Traits<RtecEventChannelAdmin::EventChannel>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern TAO_RTEvent_Export
TAO::Collocation_Proxy_Broker *
(*RtecEventChannelAdmin__TAO_ProxyPushSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_RTEvent_Export
TAO::Collocation_Proxy_Broker *
(*RtecEventChannelAdmin__TAO_ProxyPushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_RTEvent_Export
TAO::Collocation_Proxy_Broker *
(*RtecEventChannelAdmin__TAO_ConsumerAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_RTEvent_Export
TAO::Collocation_Proxy_Broker *
(*RtecEventChannelAdmin__TAO_SupplierAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_RTEvent_Export
TAO::Collocation_Proxy_Broker *
(*RtecEventChannelAdmin__TAO_Observer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_RTEvent_Export
TAO::Collocation_Proxy_Broker *
(*RtecEventChannelAdmin__TAO_EventChannel_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_RTECEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__TRAITS_)
#define _RTECEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__TRAITS_

  template<>
  struct TAO_RTEvent_Export Objref_Traits< ::RtecEventChannelAdmin::ProxyPushSupplier>
  {
    static ::RtecEventChannelAdmin::ProxyPushSupplier_ptr duplicate (
        ::RtecEventChannelAdmin::ProxyPushSupplier_ptr p);
    static void release (
        ::RtecEventChannelAdmin::ProxyPushSupplier_ptr p);
    static ::RtecEventChannelAdmin::ProxyPushSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::RtecEventChannelAdmin::ProxyPushSupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTECEVENTCHANNELADMIN_PROXYPUSHCONSUMER__TRAITS_)
#define _RTECEVENTCHANNELADMIN_PROXYPUSHCONSUMER__TRAITS_

  template<>
  struct TAO_RTEvent_Export Objref_Traits< ::RtecEventChannelAdmin::ProxyPushConsumer>
  {
    static ::RtecEventChannelAdmin::ProxyPushConsumer_ptr duplicate (
        ::RtecEventChannelAdmin::ProxyPushConsumer_ptr p);
    static void release (
        ::RtecEventChannelAdmin::ProxyPushConsumer_ptr p);
    static ::RtecEventChannelAdmin::ProxyPushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::RtecEventChannelAdmin::ProxyPushConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTECEVENTCHANNELADMIN_CONSUMERADMIN__TRAITS_)
#define _RTECEVENTCHANNELADMIN_CONSUMERADMIN__TRAITS_

  template<>
  struct TAO_RTEvent_Export Objref_Traits< ::RtecEventChannelAdmin::ConsumerAdmin>
  {
    static ::RtecEventChannelAdmin::ConsumerAdmin_ptr duplicate (
        ::RtecEventChannelAdmin::ConsumerAdmin_ptr p);
    static void release (
        ::RtecEventChannelAdmin::ConsumerAdmin_ptr p);
    static ::RtecEventChannelAdmin::ConsumerAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::RtecEventChannelAdmin::ConsumerAdmin_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTECEVENTCHANNELADMIN_SUPPLIERADMIN__TRAITS_)
#define _RTECEVENTCHANNELADMIN_SUPPLIERADMIN__TRAITS_

  template<>
  struct TAO_RTEvent_Export Objref_Traits< ::RtecEventChannelAdmin::SupplierAdmin>
  {
    static ::RtecEventChannelAdmin::SupplierAdmin_ptr duplicate (
        ::RtecEventChannelAdmin::SupplierAdmin_ptr p);
    static void release (
        ::RtecEventChannelAdmin::SupplierAdmin_ptr p);
    static ::RtecEventChannelAdmin::SupplierAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::RtecEventChannelAdmin::SupplierAdmin_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTECEVENTCHANNELADMIN_OBSERVER__TRAITS_)
#define _RTECEVENTCHANNELADMIN_OBSERVER__TRAITS_

  template<>
  struct TAO_RTEvent_Export Objref_Traits< ::RtecEventChannelAdmin::Observer>
  {
    static ::RtecEventChannelAdmin::Observer_ptr duplicate (
        ::RtecEventChannelAdmin::Observer_ptr p);
    static void release (
        ::RtecEventChannelAdmin::Observer_ptr p);
    static ::RtecEventChannelAdmin::Observer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::RtecEventChannelAdmin::Observer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTECEVENTCHANNELADMIN_EVENTCHANNEL__TRAITS_)
#define _RTECEVENTCHANNELADMIN_EVENTCHANNEL__TRAITS_

  template<>
  struct TAO_RTEvent_Export Objref_Traits< ::RtecEventChannelAdmin::EventChannel>
  {
    static ::RtecEventChannelAdmin::EventChannel_ptr duplicate (
        ::RtecEventChannelAdmin::EventChannel_ptr p);
    static void release (
        ::RtecEventChannelAdmin::EventChannel_ptr p);
    static ::RtecEventChannelAdmin::EventChannel_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::RtecEventChannelAdmin::EventChannel_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  

  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::AlreadyConnected &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::AlreadyConnected*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::AlreadyConnected *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::AlreadyConnected *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::AlreadyConnected &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::AlreadyConnected*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::AlreadyConnected *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::AlreadyConnected *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::Dependency &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::Dependency*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::Dependency *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::Dependency *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::Dependency &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::Dependency*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::Dependency *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::Dependency *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, const ::RtecEventChannelAdmin::DependencySet &); // copying version
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, ::RtecEventChannelAdmin::DependencySet*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::DependencySet *&); // deprecated
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::DependencySet *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, const RtecEventChannelAdmin::DependencySet &); // copying version
TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, RtecEventChannelAdmin::DependencySet*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::DependencySet *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::DependencySet *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::ConsumerQOS &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::ConsumerQOS*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::ConsumerQOS *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::ConsumerQOS *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::ConsumerQOS &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::ConsumerQOS*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::ConsumerQOS *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::ConsumerQOS *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::Publication &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::Publication*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::Publication *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::Publication *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::Publication &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::Publication*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::Publication *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::Publication *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, const ::RtecEventChannelAdmin::PublicationSet &); // copying version
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, ::RtecEventChannelAdmin::PublicationSet*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::PublicationSet *&); // deprecated
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::PublicationSet *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, const RtecEventChannelAdmin::PublicationSet &); // copying version
TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, RtecEventChannelAdmin::PublicationSet*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::PublicationSet *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::PublicationSet *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::SupplierQOS &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::SupplierQOS*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::SupplierQOS *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::SupplierQOS *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::SupplierQOS &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::SupplierQOS*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::SupplierQOS *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::SupplierQOS *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  

  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::TypeError &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::TypeError*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::TypeError *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::TypeError *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::TypeError &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::TypeError*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::TypeError *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::TypeError *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, ProxyPushSupplier_ptr); // copying
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, ProxyPushSupplier_ptr *); // non-copying
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxyPushSupplier_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::ProxyPushSupplier_ptr); // copying
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::ProxyPushSupplier_ptr *); // non-copying
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::ProxyPushSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, ProxyPushConsumer_ptr); // copying
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, ProxyPushConsumer_ptr *); // non-copying
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxyPushConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::ProxyPushConsumer_ptr); // copying
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::ProxyPushConsumer_ptr *); // non-copying
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::ProxyPushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, ConsumerAdmin_ptr); // copying
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, ConsumerAdmin_ptr *); // non-copying
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ConsumerAdmin_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::ConsumerAdmin_ptr); // copying
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::ConsumerAdmin_ptr *); // non-copying
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::ConsumerAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, SupplierAdmin_ptr); // copying
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, SupplierAdmin_ptr *); // non-copying
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SupplierAdmin_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::SupplierAdmin_ptr); // copying
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::SupplierAdmin_ptr *); // non-copying
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::SupplierAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, Observer_ptr); // copying
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, Observer_ptr *); // non-copying
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Observer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::Observer_ptr); // copying
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::Observer_ptr *); // non-copying
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::Observer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, EventChannel_ptr); // copying
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, EventChannel_ptr *); // non-copying
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EventChannel_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::EventChannel_ptr); // copying
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::EventChannel_ptr *); // non-copying
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::EventChannel_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  

  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::SYNCHRONIZATION_ERROR &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::SYNCHRONIZATION_ERROR*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::SYNCHRONIZATION_ERROR *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::SYNCHRONIZATION_ERROR *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::SYNCHRONIZATION_ERROR &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::EventChannel::SYNCHRONIZATION_ERROR*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::EventChannel::SYNCHRONIZATION_ERROR *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::SYNCHRONIZATION_ERROR *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  

  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::CANT_APPEND_OBSERVER &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::CANT_APPEND_OBSERVER*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::CANT_APPEND_OBSERVER *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::CANT_APPEND_OBSERVER *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::CANT_APPEND_OBSERVER &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::EventChannel::CANT_APPEND_OBSERVER*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::EventChannel::CANT_APPEND_OBSERVER *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::CANT_APPEND_OBSERVER *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  

  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::CANT_REMOVE_OBSERVER &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::CANT_REMOVE_OBSERVER*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::CANT_REMOVE_OBSERVER *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::CANT_REMOVE_OBSERVER *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::CANT_REMOVE_OBSERVER &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::EventChannel::CANT_REMOVE_OBSERVER*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::EventChannel::CANT_REMOVE_OBSERVER *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::CANT_REMOVE_OBSERVER *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  

  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::QOS_ERROR &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::QOS_ERROR*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::QOS_ERROR *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::QOS_ERROR *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::QOS_ERROR &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::EventChannel::QOS_ERROR*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::EventChannel::QOS_ERROR *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::QOS_ERROR *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  

  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::SUBSCRIPTION_ERROR &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::SUBSCRIPTION_ERROR*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::SUBSCRIPTION_ERROR *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::SUBSCRIPTION_ERROR *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::SUBSCRIPTION_ERROR &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::EventChannel::SUBSCRIPTION_ERROR*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::EventChannel::SUBSCRIPTION_ERROR *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::SUBSCRIPTION_ERROR *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  

  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::CORRELATION_ERROR &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::CORRELATION_ERROR*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::CORRELATION_ERROR *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::CORRELATION_ERROR *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::CORRELATION_ERROR &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::EventChannel::CORRELATION_ERROR*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::EventChannel::CORRELATION_ERROR *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::CORRELATION_ERROR *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecEventChannelAdmin
{
  

  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::DISPATCH_ERROR &); // copying version
  TAO_RTEvent_Export void operator<<= (::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::DISPATCH_ERROR*); // noncopying version
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RtecEventChannelAdmin::EventChannel::DISPATCH_ERROR *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RtecEventChannelAdmin::EventChannel::DISPATCH_ERROR *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::DISPATCH_ERROR &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecEventChannelAdmin::EventChannel::DISPATCH_ERROR*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecEventChannelAdmin::EventChannel::DISPATCH_ERROR *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecEventChannelAdmin::EventChannel::DISPATCH_ERROR *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::AlreadyConnected &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::AlreadyConnected &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::Dependency &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::Dependency &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_RtecEventChannelAdmin_DependencySet_H_
#define _TAO_CDR_OP_RtecEventChannelAdmin_DependencySet_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_RTEvent_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const RtecEventChannelAdmin::DependencySet &_tao_sequence);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    RtecEventChannelAdmin::DependencySet &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_RtecEventChannelAdmin_DependencySet_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::ConsumerQOS &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::ConsumerQOS &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::Publication &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::Publication &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_RtecEventChannelAdmin_PublicationSet_H_
#define _TAO_CDR_OP_RtecEventChannelAdmin_PublicationSet_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_RTEvent_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const RtecEventChannelAdmin::PublicationSet &_tao_sequence);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    RtecEventChannelAdmin::PublicationSet &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_RtecEventChannelAdmin_PublicationSet_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::SupplierQOS &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::SupplierQOS &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::TypeError &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::TypeError &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::ProxyPushSupplier_ptr );
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::ProxyPushSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::ProxyPushConsumer_ptr );
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::ProxyPushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::ConsumerAdmin_ptr );
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::ConsumerAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::SupplierAdmin_ptr );
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::SupplierAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::Observer_ptr );
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::Observer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::EventChannel_ptr );
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::EventChannel_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::EventChannel::SYNCHRONIZATION_ERROR &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::EventChannel::SYNCHRONIZATION_ERROR &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::EventChannel::CANT_APPEND_OBSERVER &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::EventChannel::CANT_APPEND_OBSERVER &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::EventChannel::CANT_REMOVE_OBSERVER &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::EventChannel::CANT_REMOVE_OBSERVER &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::EventChannel::QOS_ERROR &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::EventChannel::QOS_ERROR &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::EventChannel::SUBSCRIPTION_ERROR &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::EventChannel::SUBSCRIPTION_ERROR &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::EventChannel::CORRELATION_ERROR &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::EventChannel::CORRELATION_ERROR &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecEventChannelAdmin::EventChannel::DISPATCH_ERROR &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecEventChannelAdmin::EventChannel::DISPATCH_ERROR &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "RtecEventChannelAdminC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

