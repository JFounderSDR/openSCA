// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_COSEVENTCHANNELADMINC_H1TRUK_H_
#define _TAO_IDL_COSEVENTCHANNELADMINC_H1TRUK_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/CosEvent/event_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "CosEventCommC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Event_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace CosEventChannelAdmin
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Event_Export AlreadyConnected : public ::CORBA::UserException
  {
  public:
    
    AlreadyConnected (void);
    AlreadyConnected (const AlreadyConnected &);
    ~AlreadyConnected (void);

    AlreadyConnected &operator= (const AlreadyConnected &);

    static void _tao_any_destructor (void *);

    static AlreadyConnected *_downcast ( ::CORBA::Exception *);
    static const AlreadyConnected *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_AlreadyConnected;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Event_Export TypeError : public ::CORBA::UserException
  {
  public:
    
    TypeError (void);
    TypeError (const TypeError &);
    ~TypeError (void);

    TypeError &operator= (const TypeError &);

    static void _tao_any_destructor (void *);

    static TypeError *_downcast ( ::CORBA::Exception *);
    static const TypeError *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_TypeError;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSEVENTCHANNELADMIN_PROXYPUSHCONSUMER__VAR_OUT_CH_)
#define _COSEVENTCHANNELADMIN_PROXYPUSHCONSUMER__VAR_OUT_CH_

  class ProxyPushConsumer;
  typedef ProxyPushConsumer *ProxyPushConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        ProxyPushConsumer
      >
    ProxyPushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        ProxyPushConsumer
      >
    ProxyPushConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export ProxyPushConsumer
    : public virtual ::CosEventComm::PushConsumer
  
  {
  public:
    friend class TAO::Narrow_Utils<ProxyPushConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyPushConsumer_ptr _ptr_type;
    typedef ProxyPushConsumer_var _var_type;
    typedef ProxyPushConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ProxyPushConsumer_ptr _duplicate (ProxyPushConsumer_ptr obj);

    static void _tao_release (ProxyPushConsumer_ptr obj);

    static ProxyPushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static ProxyPushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ProxyPushConsumer_ptr _nil (void);

    virtual void connect_push_supplier (
      ::CosEventComm::PushSupplier_ptr push_supplier);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ProxyPushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ProxyPushConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosEventChannelAdmin_ProxyPushConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    ProxyPushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ProxyPushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ProxyPushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ProxyPushConsumer (const ProxyPushConsumer &);

    void operator= (const ProxyPushConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_ProxyPushConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__VAR_OUT_CH_)
#define _COSEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__VAR_OUT_CH_

  class ProxyPushSupplier;
  typedef ProxyPushSupplier *ProxyPushSupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        ProxyPushSupplier
      >
    ProxyPushSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        ProxyPushSupplier
      >
    ProxyPushSupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export ProxyPushSupplier
    : public virtual ::CosEventComm::PushSupplier
  
  {
  public:
    friend class TAO::Narrow_Utils<ProxyPushSupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyPushSupplier_ptr _ptr_type;
    typedef ProxyPushSupplier_var _var_type;
    typedef ProxyPushSupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ProxyPushSupplier_ptr _duplicate (ProxyPushSupplier_ptr obj);

    static void _tao_release (ProxyPushSupplier_ptr obj);

    static ProxyPushSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static ProxyPushSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ProxyPushSupplier_ptr _nil (void);

    virtual void connect_push_consumer (
      ::CosEventComm::PushConsumer_ptr push_consumer);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ProxyPushSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ProxyPushSupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosEventChannelAdmin_ProxyPushSupplier_setup_collocation (void);

    // Concrete non-local interface only.
    ProxyPushSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ProxyPushSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ProxyPushSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ProxyPushSupplier (const ProxyPushSupplier &);

    void operator= (const ProxyPushSupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_ProxyPushSupplier;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSEVENTCHANNELADMIN_PROXYPULLSUPPLIER__VAR_OUT_CH_)
#define _COSEVENTCHANNELADMIN_PROXYPULLSUPPLIER__VAR_OUT_CH_

  class ProxyPullSupplier;
  typedef ProxyPullSupplier *ProxyPullSupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        ProxyPullSupplier
      >
    ProxyPullSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        ProxyPullSupplier
      >
    ProxyPullSupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export ProxyPullSupplier
    : public virtual ::CosEventComm::PullSupplier
  
  {
  public:
    friend class TAO::Narrow_Utils<ProxyPullSupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyPullSupplier_ptr _ptr_type;
    typedef ProxyPullSupplier_var _var_type;
    typedef ProxyPullSupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ProxyPullSupplier_ptr _duplicate (ProxyPullSupplier_ptr obj);

    static void _tao_release (ProxyPullSupplier_ptr obj);

    static ProxyPullSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static ProxyPullSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ProxyPullSupplier_ptr _nil (void);

    virtual void connect_pull_consumer (
      ::CosEventComm::PullConsumer_ptr pull_consumer);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ProxyPullSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ProxyPullSupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosEventChannelAdmin_ProxyPullSupplier_setup_collocation (void);

    // Concrete non-local interface only.
    ProxyPullSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ProxyPullSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ProxyPullSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ProxyPullSupplier (const ProxyPullSupplier &);

    void operator= (const ProxyPullSupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_ProxyPullSupplier;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSEVENTCHANNELADMIN_PROXYPULLCONSUMER__VAR_OUT_CH_)
#define _COSEVENTCHANNELADMIN_PROXYPULLCONSUMER__VAR_OUT_CH_

  class ProxyPullConsumer;
  typedef ProxyPullConsumer *ProxyPullConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        ProxyPullConsumer
      >
    ProxyPullConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        ProxyPullConsumer
      >
    ProxyPullConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export ProxyPullConsumer
    : public virtual ::CosEventComm::PullConsumer
  
  {
  public:
    friend class TAO::Narrow_Utils<ProxyPullConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyPullConsumer_ptr _ptr_type;
    typedef ProxyPullConsumer_var _var_type;
    typedef ProxyPullConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ProxyPullConsumer_ptr _duplicate (ProxyPullConsumer_ptr obj);

    static void _tao_release (ProxyPullConsumer_ptr obj);

    static ProxyPullConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static ProxyPullConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ProxyPullConsumer_ptr _nil (void);

    virtual void connect_pull_supplier (
      ::CosEventComm::PullSupplier_ptr pull_supplier);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ProxyPullConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ProxyPullConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosEventChannelAdmin_ProxyPullConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    ProxyPullConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ProxyPullConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ProxyPullConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ProxyPullConsumer (const ProxyPullConsumer &);

    void operator= (const ProxyPullConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_ProxyPullConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSEVENTCHANNELADMIN_CONSUMERADMIN__VAR_OUT_CH_)
#define _COSEVENTCHANNELADMIN_CONSUMERADMIN__VAR_OUT_CH_

  class ConsumerAdmin;
  typedef ConsumerAdmin *ConsumerAdmin_ptr;

  typedef
    TAO_Objref_Var_T<
        ConsumerAdmin
      >
    ConsumerAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        ConsumerAdmin
      >
    ConsumerAdmin_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export ConsumerAdmin
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ConsumerAdmin>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ConsumerAdmin_ptr _ptr_type;
    typedef ConsumerAdmin_var _var_type;
    typedef ConsumerAdmin_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ConsumerAdmin_ptr _duplicate (ConsumerAdmin_ptr obj);

    static void _tao_release (ConsumerAdmin_ptr obj);

    static ConsumerAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static ConsumerAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ConsumerAdmin_ptr _nil (void);

    virtual ::CosEventChannelAdmin::ProxyPushSupplier_ptr obtain_push_supplier (
      void);

    virtual ::CosEventChannelAdmin::ProxyPullSupplier_ptr obtain_pull_supplier (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ConsumerAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ConsumerAdmin (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosEventChannelAdmin_ConsumerAdmin_setup_collocation (void);

    // Concrete non-local interface only.
    ConsumerAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ConsumerAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ConsumerAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ConsumerAdmin (const ConsumerAdmin &);

    void operator= (const ConsumerAdmin &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_ConsumerAdmin;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSEVENTCHANNELADMIN_SUPPLIERADMIN__VAR_OUT_CH_)
#define _COSEVENTCHANNELADMIN_SUPPLIERADMIN__VAR_OUT_CH_

  class SupplierAdmin;
  typedef SupplierAdmin *SupplierAdmin_ptr;

  typedef
    TAO_Objref_Var_T<
        SupplierAdmin
      >
    SupplierAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        SupplierAdmin
      >
    SupplierAdmin_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export SupplierAdmin
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<SupplierAdmin>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SupplierAdmin_ptr _ptr_type;
    typedef SupplierAdmin_var _var_type;
    typedef SupplierAdmin_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SupplierAdmin_ptr _duplicate (SupplierAdmin_ptr obj);

    static void _tao_release (SupplierAdmin_ptr obj);

    static SupplierAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static SupplierAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SupplierAdmin_ptr _nil (void);

    virtual ::CosEventChannelAdmin::ProxyPushConsumer_ptr obtain_push_consumer (
      void);

    virtual ::CosEventChannelAdmin::ProxyPullConsumer_ptr obtain_pull_consumer (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_SupplierAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    SupplierAdmin (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosEventChannelAdmin_SupplierAdmin_setup_collocation (void);

    // Concrete non-local interface only.
    SupplierAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    SupplierAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~SupplierAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    SupplierAdmin (const SupplierAdmin &);

    void operator= (const SupplierAdmin &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_SupplierAdmin;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSEVENTCHANNELADMIN_EVENTCHANNEL__VAR_OUT_CH_)
#define _COSEVENTCHANNELADMIN_EVENTCHANNEL__VAR_OUT_CH_

  class EventChannel;
  typedef EventChannel *EventChannel_ptr;

  typedef
    TAO_Objref_Var_T<
        EventChannel
      >
    EventChannel_var;
  
  typedef
    TAO_Objref_Out_T<
        EventChannel
      >
    EventChannel_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Event_Export EventChannel
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<EventChannel>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef EventChannel_ptr _ptr_type;
    typedef EventChannel_var _var_type;
    typedef EventChannel_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static EventChannel_ptr _duplicate (EventChannel_ptr obj);

    static void _tao_release (EventChannel_ptr obj);

    static EventChannel_ptr _narrow (::CORBA::Object_ptr obj);
    static EventChannel_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static EventChannel_ptr _nil (void);

    virtual ::CosEventChannelAdmin::ConsumerAdmin_ptr for_consumers (
      void);

    virtual ::CosEventChannelAdmin::SupplierAdmin_ptr for_suppliers (
      void);

    virtual void destroy (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_EventChannel_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    EventChannel (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosEventChannelAdmin_EventChannel_setup_collocation (void);

    // Concrete non-local interface only.
    EventChannel (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    EventChannel (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~EventChannel (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    EventChannel (const EventChannel &);

    void operator= (const EventChannel &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_EventChannel;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module CosEventChannelAdmin

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSEVENTCHANNELADMIN_PROXYPUSHCONSUMER__ARG_TRAITS_)
#define _COSEVENTCHANNELADMIN_PROXYPUSHCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosEventChannelAdmin::ProxyPushConsumer>
    : public
        Object_Arg_Traits_T<
            ::CosEventChannelAdmin::ProxyPushConsumer_ptr,
            ::CosEventChannelAdmin::ProxyPushConsumer_var,
            ::CosEventChannelAdmin::ProxyPushConsumer_out,
            TAO::Objref_Traits<CosEventChannelAdmin::ProxyPushConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__ARG_TRAITS_)
#define _COSEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosEventChannelAdmin::ProxyPushSupplier>
    : public
        Object_Arg_Traits_T<
            ::CosEventChannelAdmin::ProxyPushSupplier_ptr,
            ::CosEventChannelAdmin::ProxyPushSupplier_var,
            ::CosEventChannelAdmin::ProxyPushSupplier_out,
            TAO::Objref_Traits<CosEventChannelAdmin::ProxyPushSupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSEVENTCHANNELADMIN_PROXYPULLSUPPLIER__ARG_TRAITS_)
#define _COSEVENTCHANNELADMIN_PROXYPULLSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosEventChannelAdmin::ProxyPullSupplier>
    : public
        Object_Arg_Traits_T<
            ::CosEventChannelAdmin::ProxyPullSupplier_ptr,
            ::CosEventChannelAdmin::ProxyPullSupplier_var,
            ::CosEventChannelAdmin::ProxyPullSupplier_out,
            TAO::Objref_Traits<CosEventChannelAdmin::ProxyPullSupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSEVENTCHANNELADMIN_PROXYPULLCONSUMER__ARG_TRAITS_)
#define _COSEVENTCHANNELADMIN_PROXYPULLCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosEventChannelAdmin::ProxyPullConsumer>
    : public
        Object_Arg_Traits_T<
            ::CosEventChannelAdmin::ProxyPullConsumer_ptr,
            ::CosEventChannelAdmin::ProxyPullConsumer_var,
            ::CosEventChannelAdmin::ProxyPullConsumer_out,
            TAO::Objref_Traits<CosEventChannelAdmin::ProxyPullConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSEVENTCHANNELADMIN_CONSUMERADMIN__ARG_TRAITS_)
#define _COSEVENTCHANNELADMIN_CONSUMERADMIN__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosEventChannelAdmin::ConsumerAdmin>
    : public
        Object_Arg_Traits_T<
            ::CosEventChannelAdmin::ConsumerAdmin_ptr,
            ::CosEventChannelAdmin::ConsumerAdmin_var,
            ::CosEventChannelAdmin::ConsumerAdmin_out,
            TAO::Objref_Traits<CosEventChannelAdmin::ConsumerAdmin>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSEVENTCHANNELADMIN_SUPPLIERADMIN__ARG_TRAITS_)
#define _COSEVENTCHANNELADMIN_SUPPLIERADMIN__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosEventChannelAdmin::SupplierAdmin>
    : public
        Object_Arg_Traits_T<
            ::CosEventChannelAdmin::SupplierAdmin_ptr,
            ::CosEventChannelAdmin::SupplierAdmin_var,
            ::CosEventChannelAdmin::SupplierAdmin_out,
            TAO::Objref_Traits<CosEventChannelAdmin::SupplierAdmin>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSEVENTCHANNELADMIN_EVENTCHANNEL__ARG_TRAITS_)
#define _COSEVENTCHANNELADMIN_EVENTCHANNEL__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosEventChannelAdmin::EventChannel>
    : public
        Object_Arg_Traits_T<
            ::CosEventChannelAdmin::EventChannel_ptr,
            ::CosEventChannelAdmin::EventChannel_var,
            ::CosEventChannelAdmin::EventChannel_out,
            TAO::Objref_Traits<CosEventChannelAdmin::EventChannel>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosEventChannelAdmin__TAO_ProxyPushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosEventChannelAdmin__TAO_ProxyPushSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosEventChannelAdmin__TAO_ProxyPullSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosEventChannelAdmin__TAO_ProxyPullConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosEventChannelAdmin__TAO_ConsumerAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosEventChannelAdmin__TAO_SupplierAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosEventChannelAdmin__TAO_EventChannel_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_COSEVENTCHANNELADMIN_PROXYPUSHCONSUMER__TRAITS_)
#define _COSEVENTCHANNELADMIN_PROXYPUSHCONSUMER__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosEventChannelAdmin::ProxyPushConsumer>
  {
    static ::CosEventChannelAdmin::ProxyPushConsumer_ptr duplicate (
        ::CosEventChannelAdmin::ProxyPushConsumer_ptr p);
    static void release (
        ::CosEventChannelAdmin::ProxyPushConsumer_ptr p);
    static ::CosEventChannelAdmin::ProxyPushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosEventChannelAdmin::ProxyPushConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__TRAITS_)
#define _COSEVENTCHANNELADMIN_PROXYPUSHSUPPLIER__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosEventChannelAdmin::ProxyPushSupplier>
  {
    static ::CosEventChannelAdmin::ProxyPushSupplier_ptr duplicate (
        ::CosEventChannelAdmin::ProxyPushSupplier_ptr p);
    static void release (
        ::CosEventChannelAdmin::ProxyPushSupplier_ptr p);
    static ::CosEventChannelAdmin::ProxyPushSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosEventChannelAdmin::ProxyPushSupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSEVENTCHANNELADMIN_PROXYPULLSUPPLIER__TRAITS_)
#define _COSEVENTCHANNELADMIN_PROXYPULLSUPPLIER__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosEventChannelAdmin::ProxyPullSupplier>
  {
    static ::CosEventChannelAdmin::ProxyPullSupplier_ptr duplicate (
        ::CosEventChannelAdmin::ProxyPullSupplier_ptr p);
    static void release (
        ::CosEventChannelAdmin::ProxyPullSupplier_ptr p);
    static ::CosEventChannelAdmin::ProxyPullSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosEventChannelAdmin::ProxyPullSupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSEVENTCHANNELADMIN_PROXYPULLCONSUMER__TRAITS_)
#define _COSEVENTCHANNELADMIN_PROXYPULLCONSUMER__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosEventChannelAdmin::ProxyPullConsumer>
  {
    static ::CosEventChannelAdmin::ProxyPullConsumer_ptr duplicate (
        ::CosEventChannelAdmin::ProxyPullConsumer_ptr p);
    static void release (
        ::CosEventChannelAdmin::ProxyPullConsumer_ptr p);
    static ::CosEventChannelAdmin::ProxyPullConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosEventChannelAdmin::ProxyPullConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSEVENTCHANNELADMIN_CONSUMERADMIN__TRAITS_)
#define _COSEVENTCHANNELADMIN_CONSUMERADMIN__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosEventChannelAdmin::ConsumerAdmin>
  {
    static ::CosEventChannelAdmin::ConsumerAdmin_ptr duplicate (
        ::CosEventChannelAdmin::ConsumerAdmin_ptr p);
    static void release (
        ::CosEventChannelAdmin::ConsumerAdmin_ptr p);
    static ::CosEventChannelAdmin::ConsumerAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosEventChannelAdmin::ConsumerAdmin_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSEVENTCHANNELADMIN_SUPPLIERADMIN__TRAITS_)
#define _COSEVENTCHANNELADMIN_SUPPLIERADMIN__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosEventChannelAdmin::SupplierAdmin>
  {
    static ::CosEventChannelAdmin::SupplierAdmin_ptr duplicate (
        ::CosEventChannelAdmin::SupplierAdmin_ptr p);
    static void release (
        ::CosEventChannelAdmin::SupplierAdmin_ptr p);
    static ::CosEventChannelAdmin::SupplierAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosEventChannelAdmin::SupplierAdmin_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSEVENTCHANNELADMIN_EVENTCHANNEL__TRAITS_)
#define _COSEVENTCHANNELADMIN_EVENTCHANNEL__TRAITS_

  template<>
  struct TAO_Event_Export Objref_Traits< ::CosEventChannelAdmin::EventChannel>
  {
    static ::CosEventChannelAdmin::EventChannel_ptr duplicate (
        ::CosEventChannelAdmin::EventChannel_ptr p);
    static void release (
        ::CosEventChannelAdmin::EventChannel_ptr p);
    static ::CosEventChannelAdmin::EventChannel_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosEventChannelAdmin::EventChannel_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosEventChannelAdmin
{
  

  TAO_Event_Export void operator<<= (::CORBA::Any &, const ::CosEventChannelAdmin::AlreadyConnected &); // copying version
  TAO_Event_Export void operator<<= (::CORBA::Any &, ::CosEventChannelAdmin::AlreadyConnected*); // noncopying version
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosEventChannelAdmin::AlreadyConnected *&); // deprecated
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosEventChannelAdmin::AlreadyConnected *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Event_Export void operator<<= (::CORBA::Any &, const CosEventChannelAdmin::AlreadyConnected &); // copying version
TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::AlreadyConnected*); // noncopying version
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosEventChannelAdmin::AlreadyConnected *&); // deprecated
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosEventChannelAdmin::AlreadyConnected *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosEventChannelAdmin
{
  

  TAO_Event_Export void operator<<= (::CORBA::Any &, const ::CosEventChannelAdmin::TypeError &); // copying version
  TAO_Event_Export void operator<<= (::CORBA::Any &, ::CosEventChannelAdmin::TypeError*); // noncopying version
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosEventChannelAdmin::TypeError *&); // deprecated
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosEventChannelAdmin::TypeError *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Event_Export void operator<<= (::CORBA::Any &, const CosEventChannelAdmin::TypeError &); // copying version
TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::TypeError*); // noncopying version
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosEventChannelAdmin::TypeError *&); // deprecated
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosEventChannelAdmin::TypeError *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, ProxyPushConsumer_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, ProxyPushConsumer_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxyPushConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::ProxyPushConsumer_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::ProxyPushConsumer_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosEventChannelAdmin::ProxyPushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, ProxyPushSupplier_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, ProxyPushSupplier_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxyPushSupplier_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::ProxyPushSupplier_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::ProxyPushSupplier_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosEventChannelAdmin::ProxyPushSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, ProxyPullSupplier_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, ProxyPullSupplier_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxyPullSupplier_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::ProxyPullSupplier_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::ProxyPullSupplier_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosEventChannelAdmin::ProxyPullSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, ProxyPullConsumer_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, ProxyPullConsumer_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxyPullConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::ProxyPullConsumer_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::ProxyPullConsumer_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosEventChannelAdmin::ProxyPullConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, ConsumerAdmin_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, ConsumerAdmin_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ConsumerAdmin_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::ConsumerAdmin_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::ConsumerAdmin_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosEventChannelAdmin::ConsumerAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, SupplierAdmin_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, SupplierAdmin_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SupplierAdmin_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::SupplierAdmin_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::SupplierAdmin_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosEventChannelAdmin::SupplierAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosEventChannelAdmin
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, EventChannel_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, EventChannel_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EventChannel_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::EventChannel_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosEventChannelAdmin::EventChannel_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosEventChannelAdmin::EventChannel_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosEventChannelAdmin::AlreadyConnected &);
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosEventChannelAdmin::AlreadyConnected &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosEventChannelAdmin::TypeError &);
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosEventChannelAdmin::TypeError &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosEventChannelAdmin::ProxyPushConsumer_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosEventChannelAdmin::ProxyPushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosEventChannelAdmin::ProxyPushSupplier_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosEventChannelAdmin::ProxyPushSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosEventChannelAdmin::ProxyPullSupplier_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosEventChannelAdmin::ProxyPullSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosEventChannelAdmin::ProxyPullConsumer_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosEventChannelAdmin::ProxyPullConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosEventChannelAdmin::ConsumerAdmin_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosEventChannelAdmin::ConsumerAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosEventChannelAdmin::SupplierAdmin_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosEventChannelAdmin::SupplierAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosEventChannelAdmin::EventChannel_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosEventChannelAdmin::EventChannel_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "CosEventChannelAdminC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

