// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_COSNOTIFYCOMMC_ADJFNH_H_
#define _TAO_IDL_COSNOTIFYCOMMC_ADJFNH_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/Notify/notify_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "CosNotificationC.h"
#include "CosEventCommC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Notify_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace CosNotifyComm
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export InvalidEventType : public ::CORBA::UserException
  {
  public:
    
    CosNotification::EventType type;
    InvalidEventType (void);
    InvalidEventType (const InvalidEventType &);
    ~InvalidEventType (void);

    InvalidEventType &operator= (const InvalidEventType &);

    static void _tao_any_destructor (void *);

    static InvalidEventType *_downcast ( ::CORBA::Exception *);
    static const InvalidEventType *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    InvalidEventType (
        const CosNotification::EventType & _tao_type);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_InvalidEventType;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCOMM_NOTIFYPUBLISH__VAR_OUT_CH_)
#define _COSNOTIFYCOMM_NOTIFYPUBLISH__VAR_OUT_CH_

  class NotifyPublish;
  typedef NotifyPublish *NotifyPublish_ptr;

  typedef
    TAO_Objref_Var_T<
        NotifyPublish
      >
    NotifyPublish_var;
  
  typedef
    TAO_Objref_Out_T<
        NotifyPublish
      >
    NotifyPublish_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export NotifyPublish
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<NotifyPublish>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef NotifyPublish_ptr _ptr_type;
    typedef NotifyPublish_var _var_type;
    typedef NotifyPublish_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static NotifyPublish_ptr _duplicate (NotifyPublish_ptr obj);

    static void _tao_release (NotifyPublish_ptr obj);

    static NotifyPublish_ptr _narrow (::CORBA::Object_ptr obj);
    static NotifyPublish_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static NotifyPublish_ptr _nil (void);

    virtual void offer_change (
      const ::CosNotification::EventTypeSeq & added,
      const ::CosNotification::EventTypeSeq & removed);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_NotifyPublish_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    NotifyPublish (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyComm_NotifyPublish_setup_collocation (void);

    // Concrete non-local interface only.
    NotifyPublish (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    NotifyPublish (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~NotifyPublish (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    NotifyPublish (const NotifyPublish &);

    void operator= (const NotifyPublish &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_NotifyPublish;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCOMM_NOTIFYSUBSCRIBE__VAR_OUT_CH_)
#define _COSNOTIFYCOMM_NOTIFYSUBSCRIBE__VAR_OUT_CH_

  class NotifySubscribe;
  typedef NotifySubscribe *NotifySubscribe_ptr;

  typedef
    TAO_Objref_Var_T<
        NotifySubscribe
      >
    NotifySubscribe_var;
  
  typedef
    TAO_Objref_Out_T<
        NotifySubscribe
      >
    NotifySubscribe_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export NotifySubscribe
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<NotifySubscribe>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef NotifySubscribe_ptr _ptr_type;
    typedef NotifySubscribe_var _var_type;
    typedef NotifySubscribe_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static NotifySubscribe_ptr _duplicate (NotifySubscribe_ptr obj);

    static void _tao_release (NotifySubscribe_ptr obj);

    static NotifySubscribe_ptr _narrow (::CORBA::Object_ptr obj);
    static NotifySubscribe_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static NotifySubscribe_ptr _nil (void);

    virtual void subscription_change (
      const ::CosNotification::EventTypeSeq & added,
      const ::CosNotification::EventTypeSeq & removed);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_NotifySubscribe_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    NotifySubscribe (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyComm_NotifySubscribe_setup_collocation (void);

    // Concrete non-local interface only.
    NotifySubscribe (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    NotifySubscribe (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~NotifySubscribe (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    NotifySubscribe (const NotifySubscribe &);

    void operator= (const NotifySubscribe &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_NotifySubscribe;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCOMM_PUSHCONSUMER__VAR_OUT_CH_)
#define _COSNOTIFYCOMM_PUSHCONSUMER__VAR_OUT_CH_

  class PushConsumer;
  typedef PushConsumer *PushConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        PushConsumer
      >
    PushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        PushConsumer
      >
    PushConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export PushConsumer
    : public virtual ::CosNotifyComm::NotifyPublish,
      public virtual ::CosEventComm::PushConsumer
  
  {
  public:
    friend class TAO::Narrow_Utils<PushConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef PushConsumer_ptr _ptr_type;
    typedef PushConsumer_var _var_type;
    typedef PushConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PushConsumer_ptr _duplicate (PushConsumer_ptr obj);

    static void _tao_release (PushConsumer_ptr obj);

    static PushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static PushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PushConsumer_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_PushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    PushConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyComm_PushConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    PushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    PushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~PushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    PushConsumer (const PushConsumer &);

    void operator= (const PushConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_PushConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCOMM_PUSHSUPPLIER__VAR_OUT_CH_)
#define _COSNOTIFYCOMM_PUSHSUPPLIER__VAR_OUT_CH_

  class PushSupplier;
  typedef PushSupplier *PushSupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        PushSupplier
      >
    PushSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        PushSupplier
      >
    PushSupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export PushSupplier
    : public virtual ::CosNotifyComm::NotifySubscribe,
      public virtual ::CosEventComm::PushSupplier
  
  {
  public:
    friend class TAO::Narrow_Utils<PushSupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef PushSupplier_ptr _ptr_type;
    typedef PushSupplier_var _var_type;
    typedef PushSupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PushSupplier_ptr _duplicate (PushSupplier_ptr obj);

    static void _tao_release (PushSupplier_ptr obj);

    static PushSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static PushSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PushSupplier_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_PushSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    PushSupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyComm_PushSupplier_setup_collocation (void);

    // Concrete non-local interface only.
    PushSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    PushSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~PushSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    PushSupplier (const PushSupplier &);

    void operator= (const PushSupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_PushSupplier;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCOMM_STRUCTUREDPUSHCONSUMER__VAR_OUT_CH_)
#define _COSNOTIFYCOMM_STRUCTUREDPUSHCONSUMER__VAR_OUT_CH_

  class StructuredPushConsumer;
  typedef StructuredPushConsumer *StructuredPushConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        StructuredPushConsumer
      >
    StructuredPushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        StructuredPushConsumer
      >
    StructuredPushConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export StructuredPushConsumer
    : public virtual ::CosNotifyComm::NotifyPublish
  
  {
  public:
    friend class TAO::Narrow_Utils<StructuredPushConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef StructuredPushConsumer_ptr _ptr_type;
    typedef StructuredPushConsumer_var _var_type;
    typedef StructuredPushConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static StructuredPushConsumer_ptr _duplicate (StructuredPushConsumer_ptr obj);

    static void _tao_release (StructuredPushConsumer_ptr obj);

    static StructuredPushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static StructuredPushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static StructuredPushConsumer_ptr _nil (void);

    virtual void push_structured_event (
      const ::CosNotification::StructuredEvent & notification);

    virtual void disconnect_structured_push_consumer (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_StructuredPushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    StructuredPushConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyComm_StructuredPushConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    StructuredPushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    StructuredPushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~StructuredPushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    StructuredPushConsumer (const StructuredPushConsumer &);

    void operator= (const StructuredPushConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_StructuredPushConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCOMM_STRUCTUREDPUSHSUPPLIER__VAR_OUT_CH_)
#define _COSNOTIFYCOMM_STRUCTUREDPUSHSUPPLIER__VAR_OUT_CH_

  class StructuredPushSupplier;
  typedef StructuredPushSupplier *StructuredPushSupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        StructuredPushSupplier
      >
    StructuredPushSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        StructuredPushSupplier
      >
    StructuredPushSupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export StructuredPushSupplier
    : public virtual ::CosNotifyComm::NotifySubscribe
  
  {
  public:
    friend class TAO::Narrow_Utils<StructuredPushSupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef StructuredPushSupplier_ptr _ptr_type;
    typedef StructuredPushSupplier_var _var_type;
    typedef StructuredPushSupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static StructuredPushSupplier_ptr _duplicate (StructuredPushSupplier_ptr obj);

    static void _tao_release (StructuredPushSupplier_ptr obj);

    static StructuredPushSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static StructuredPushSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static StructuredPushSupplier_ptr _nil (void);

    virtual void disconnect_structured_push_supplier (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_StructuredPushSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    StructuredPushSupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyComm_StructuredPushSupplier_setup_collocation (void);

    // Concrete non-local interface only.
    StructuredPushSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    StructuredPushSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~StructuredPushSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    StructuredPushSupplier (const StructuredPushSupplier &);

    void operator= (const StructuredPushSupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_StructuredPushSupplier;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCOMM_SEQUENCEPUSHCONSUMER__VAR_OUT_CH_)
#define _COSNOTIFYCOMM_SEQUENCEPUSHCONSUMER__VAR_OUT_CH_

  class SequencePushConsumer;
  typedef SequencePushConsumer *SequencePushConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        SequencePushConsumer
      >
    SequencePushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        SequencePushConsumer
      >
    SequencePushConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export SequencePushConsumer
    : public virtual ::CosNotifyComm::NotifyPublish
  
  {
  public:
    friend class TAO::Narrow_Utils<SequencePushConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SequencePushConsumer_ptr _ptr_type;
    typedef SequencePushConsumer_var _var_type;
    typedef SequencePushConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SequencePushConsumer_ptr _duplicate (SequencePushConsumer_ptr obj);

    static void _tao_release (SequencePushConsumer_ptr obj);

    static SequencePushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static SequencePushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SequencePushConsumer_ptr _nil (void);

    virtual void push_structured_events (
      const ::CosNotification::EventBatch & notifications);

    virtual void disconnect_sequence_push_consumer (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_SequencePushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    SequencePushConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyComm_SequencePushConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    SequencePushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    SequencePushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~SequencePushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    SequencePushConsumer (const SequencePushConsumer &);

    void operator= (const SequencePushConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_SequencePushConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCOMM_SEQUENCEPUSHSUPPLIER__VAR_OUT_CH_)
#define _COSNOTIFYCOMM_SEQUENCEPUSHSUPPLIER__VAR_OUT_CH_

  class SequencePushSupplier;
  typedef SequencePushSupplier *SequencePushSupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        SequencePushSupplier
      >
    SequencePushSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        SequencePushSupplier
      >
    SequencePushSupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export SequencePushSupplier
    : public virtual ::CosNotifyComm::NotifySubscribe
  
  {
  public:
    friend class TAO::Narrow_Utils<SequencePushSupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SequencePushSupplier_ptr _ptr_type;
    typedef SequencePushSupplier_var _var_type;
    typedef SequencePushSupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SequencePushSupplier_ptr _duplicate (SequencePushSupplier_ptr obj);

    static void _tao_release (SequencePushSupplier_ptr obj);

    static SequencePushSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static SequencePushSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SequencePushSupplier_ptr _nil (void);

    virtual void disconnect_sequence_push_supplier (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_SequencePushSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    SequencePushSupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyComm_SequencePushSupplier_setup_collocation (void);

    // Concrete non-local interface only.
    SequencePushSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    SequencePushSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~SequencePushSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    SequencePushSupplier (const SequencePushSupplier &);

    void operator= (const SequencePushSupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_SequencePushSupplier;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module CosNotifyComm

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_NOTIFYPUBLISH__ARG_TRAITS_)
#define _COSNOTIFYCOMM_NOTIFYPUBLISH__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyComm::NotifyPublish>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyComm::NotifyPublish_ptr,
            ::CosNotifyComm::NotifyPublish_var,
            ::CosNotifyComm::NotifyPublish_out,
            TAO::Objref_Traits<CosNotifyComm::NotifyPublish>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_NOTIFYSUBSCRIBE__ARG_TRAITS_)
#define _COSNOTIFYCOMM_NOTIFYSUBSCRIBE__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyComm::NotifySubscribe>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyComm::NotifySubscribe_ptr,
            ::CosNotifyComm::NotifySubscribe_var,
            ::CosNotifyComm::NotifySubscribe_out,
            TAO::Objref_Traits<CosNotifyComm::NotifySubscribe>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_PUSHCONSUMER__ARG_TRAITS_)
#define _COSNOTIFYCOMM_PUSHCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyComm::PushConsumer>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyComm::PushConsumer_ptr,
            ::CosNotifyComm::PushConsumer_var,
            ::CosNotifyComm::PushConsumer_out,
            TAO::Objref_Traits<CosNotifyComm::PushConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_PUSHSUPPLIER__ARG_TRAITS_)
#define _COSNOTIFYCOMM_PUSHSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyComm::PushSupplier>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyComm::PushSupplier_ptr,
            ::CosNotifyComm::PushSupplier_var,
            ::CosNotifyComm::PushSupplier_out,
            TAO::Objref_Traits<CosNotifyComm::PushSupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_STRUCTUREDPUSHCONSUMER__ARG_TRAITS_)
#define _COSNOTIFYCOMM_STRUCTUREDPUSHCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyComm::StructuredPushConsumer>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyComm::StructuredPushConsumer_ptr,
            ::CosNotifyComm::StructuredPushConsumer_var,
            ::CosNotifyComm::StructuredPushConsumer_out,
            TAO::Objref_Traits<CosNotifyComm::StructuredPushConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_STRUCTUREDPUSHSUPPLIER__ARG_TRAITS_)
#define _COSNOTIFYCOMM_STRUCTUREDPUSHSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyComm::StructuredPushSupplier>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyComm::StructuredPushSupplier_ptr,
            ::CosNotifyComm::StructuredPushSupplier_var,
            ::CosNotifyComm::StructuredPushSupplier_out,
            TAO::Objref_Traits<CosNotifyComm::StructuredPushSupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_SEQUENCEPUSHCONSUMER__ARG_TRAITS_)
#define _COSNOTIFYCOMM_SEQUENCEPUSHCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyComm::SequencePushConsumer>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyComm::SequencePushConsumer_ptr,
            ::CosNotifyComm::SequencePushConsumer_var,
            ::CosNotifyComm::SequencePushConsumer_out,
            TAO::Objref_Traits<CosNotifyComm::SequencePushConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCOMM_SEQUENCEPUSHSUPPLIER__ARG_TRAITS_)
#define _COSNOTIFYCOMM_SEQUENCEPUSHSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyComm::SequencePushSupplier>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyComm::SequencePushSupplier_ptr,
            ::CosNotifyComm::SequencePushSupplier_var,
            ::CosNotifyComm::SequencePushSupplier_out,
            TAO::Objref_Traits<CosNotifyComm::SequencePushSupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyComm__TAO_NotifyPublish_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyComm__TAO_NotifySubscribe_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyComm__TAO_PushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyComm__TAO_PushSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyComm__TAO_StructuredPushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyComm__TAO_StructuredPushSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyComm__TAO_SequencePushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyComm__TAO_SequencePushSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_COSNOTIFYCOMM_NOTIFYPUBLISH__TRAITS_)
#define _COSNOTIFYCOMM_NOTIFYPUBLISH__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyComm::NotifyPublish>
  {
    static ::CosNotifyComm::NotifyPublish_ptr duplicate (
        ::CosNotifyComm::NotifyPublish_ptr p);
    static void release (
        ::CosNotifyComm::NotifyPublish_ptr p);
    static ::CosNotifyComm::NotifyPublish_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyComm::NotifyPublish_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCOMM_NOTIFYSUBSCRIBE__TRAITS_)
#define _COSNOTIFYCOMM_NOTIFYSUBSCRIBE__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyComm::NotifySubscribe>
  {
    static ::CosNotifyComm::NotifySubscribe_ptr duplicate (
        ::CosNotifyComm::NotifySubscribe_ptr p);
    static void release (
        ::CosNotifyComm::NotifySubscribe_ptr p);
    static ::CosNotifyComm::NotifySubscribe_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyComm::NotifySubscribe_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCOMM_PUSHCONSUMER__TRAITS_)
#define _COSNOTIFYCOMM_PUSHCONSUMER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyComm::PushConsumer>
  {
    static ::CosNotifyComm::PushConsumer_ptr duplicate (
        ::CosNotifyComm::PushConsumer_ptr p);
    static void release (
        ::CosNotifyComm::PushConsumer_ptr p);
    static ::CosNotifyComm::PushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyComm::PushConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCOMM_PUSHSUPPLIER__TRAITS_)
#define _COSNOTIFYCOMM_PUSHSUPPLIER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyComm::PushSupplier>
  {
    static ::CosNotifyComm::PushSupplier_ptr duplicate (
        ::CosNotifyComm::PushSupplier_ptr p);
    static void release (
        ::CosNotifyComm::PushSupplier_ptr p);
    static ::CosNotifyComm::PushSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyComm::PushSupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCOMM_STRUCTUREDPUSHCONSUMER__TRAITS_)
#define _COSNOTIFYCOMM_STRUCTUREDPUSHCONSUMER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyComm::StructuredPushConsumer>
  {
    static ::CosNotifyComm::StructuredPushConsumer_ptr duplicate (
        ::CosNotifyComm::StructuredPushConsumer_ptr p);
    static void release (
        ::CosNotifyComm::StructuredPushConsumer_ptr p);
    static ::CosNotifyComm::StructuredPushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyComm::StructuredPushConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCOMM_STRUCTUREDPUSHSUPPLIER__TRAITS_)
#define _COSNOTIFYCOMM_STRUCTUREDPUSHSUPPLIER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyComm::StructuredPushSupplier>
  {
    static ::CosNotifyComm::StructuredPushSupplier_ptr duplicate (
        ::CosNotifyComm::StructuredPushSupplier_ptr p);
    static void release (
        ::CosNotifyComm::StructuredPushSupplier_ptr p);
    static ::CosNotifyComm::StructuredPushSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyComm::StructuredPushSupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCOMM_SEQUENCEPUSHCONSUMER__TRAITS_)
#define _COSNOTIFYCOMM_SEQUENCEPUSHCONSUMER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyComm::SequencePushConsumer>
  {
    static ::CosNotifyComm::SequencePushConsumer_ptr duplicate (
        ::CosNotifyComm::SequencePushConsumer_ptr p);
    static void release (
        ::CosNotifyComm::SequencePushConsumer_ptr p);
    static ::CosNotifyComm::SequencePushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyComm::SequencePushConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCOMM_SEQUENCEPUSHSUPPLIER__TRAITS_)
#define _COSNOTIFYCOMM_SEQUENCEPUSHSUPPLIER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyComm::SequencePushSupplier>
  {
    static ::CosNotifyComm::SequencePushSupplier_ptr duplicate (
        ::CosNotifyComm::SequencePushSupplier_ptr p);
    static void release (
        ::CosNotifyComm::SequencePushSupplier_ptr p);
    static ::CosNotifyComm::SequencePushSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyComm::SequencePushSupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyComm
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyComm::InvalidEventType &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyComm::InvalidEventType*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyComm::InvalidEventType *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyComm::InvalidEventType *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyComm::InvalidEventType &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::InvalidEventType*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyComm::InvalidEventType *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyComm::InvalidEventType *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyComm
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, NotifyPublish_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, NotifyPublish_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyPublish_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::NotifyPublish_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::NotifyPublish_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyComm::NotifyPublish_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyComm
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, NotifySubscribe_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, NotifySubscribe_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifySubscribe_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::NotifySubscribe_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::NotifySubscribe_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyComm::NotifySubscribe_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyComm
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, PushConsumer_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, PushConsumer_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PushConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::PushConsumer_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::PushConsumer_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyComm::PushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyComm
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, PushSupplier_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, PushSupplier_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PushSupplier_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::PushSupplier_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::PushSupplier_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyComm::PushSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyComm
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, StructuredPushConsumer_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, StructuredPushConsumer_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StructuredPushConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::StructuredPushConsumer_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::StructuredPushConsumer_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyComm::StructuredPushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyComm
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, StructuredPushSupplier_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, StructuredPushSupplier_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StructuredPushSupplier_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::StructuredPushSupplier_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::StructuredPushSupplier_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyComm::StructuredPushSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyComm
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SequencePushConsumer_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SequencePushConsumer_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SequencePushConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::SequencePushConsumer_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::SequencePushConsumer_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyComm::SequencePushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyComm
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SequencePushSupplier_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SequencePushSupplier_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SequencePushSupplier_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::SequencePushSupplier_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyComm::SequencePushSupplier_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyComm::SequencePushSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyComm::InvalidEventType &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyComm::InvalidEventType &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyComm::NotifyPublish_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyComm::NotifyPublish_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyComm::NotifySubscribe_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyComm::NotifySubscribe_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyComm::PushConsumer_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyComm::PushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyComm::PushSupplier_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyComm::PushSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyComm::StructuredPushConsumer_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyComm::StructuredPushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyComm::StructuredPushSupplier_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyComm::StructuredPushSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyComm::SequencePushConsumer_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyComm::SequencePushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyComm::SequencePushSupplier_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyComm::SequencePushSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "CosNotifyCommC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

