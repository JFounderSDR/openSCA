// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_LIFECYCLESERVICEC_BZTTOB_H_
#define _TAO_IDL_LIFECYCLESERVICEC_BZTTOB_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/LifeCycle/lifecycle_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "CosLifeCycleC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_LifeCycle_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace LifeCycleService
{

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_LIFECYCLESERVICE_LIFE_CYCLE_SERVICE__VAR_OUT_CH_)
#define _LIFECYCLESERVICE_LIFE_CYCLE_SERVICE__VAR_OUT_CH_

  class Life_Cycle_Service;
  typedef Life_Cycle_Service *Life_Cycle_Service_ptr;

  typedef
    TAO_Objref_Var_T<
        Life_Cycle_Service
      >
    Life_Cycle_Service_var;
  
  typedef
    TAO_Objref_Out_T<
        Life_Cycle_Service
      >
    Life_Cycle_Service_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_LifeCycle_Export Life_Cycle_Service
    : public virtual ::CosLifeCycle::GenericFactory
  
  {
  public:
    friend class TAO::Narrow_Utils<Life_Cycle_Service>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Life_Cycle_Service_ptr _ptr_type;
    typedef Life_Cycle_Service_var _var_type;
    typedef Life_Cycle_Service_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Life_Cycle_Service_ptr _duplicate (Life_Cycle_Service_ptr obj);

    static void _tao_release (Life_Cycle_Service_ptr obj);

    static Life_Cycle_Service_ptr _narrow (::CORBA::Object_ptr obj);
    static Life_Cycle_Service_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Life_Cycle_Service_ptr _nil (void);

    virtual void register_factory (
      const char * name,
      const char * location,
      const char * description,
      ::CORBA::Object_ptr object);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_Life_Cycle_Service_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    Life_Cycle_Service (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void LifeCycleService_Life_Cycle_Service_setup_collocation (void);

    // Concrete non-local interface only.
    Life_Cycle_Service (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Life_Cycle_Service (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Life_Cycle_Service (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Life_Cycle_Service (const Life_Cycle_Service &);

    void operator= (const Life_Cycle_Service &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_Life_Cycle_Service;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_LIFECYCLESERVICE_CRITERIA_EVALUATOR__VAR_OUT_CH_)
#define _LIFECYCLESERVICE_CRITERIA_EVALUATOR__VAR_OUT_CH_

  class Criteria_Evaluator;
  typedef Criteria_Evaluator *Criteria_Evaluator_ptr;

  typedef
    TAO_Objref_Var_T<
        Criteria_Evaluator
      >
    Criteria_Evaluator_var;
  
  typedef
    TAO_Objref_Out_T<
        Criteria_Evaluator
      >
    Criteria_Evaluator_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_LifeCycle_Export Criteria_Evaluator
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<Criteria_Evaluator>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Criteria_Evaluator_ptr _ptr_type;
    typedef Criteria_Evaluator_var _var_type;
    typedef Criteria_Evaluator_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Criteria_Evaluator_ptr _duplicate (Criteria_Evaluator_ptr obj);

    static void _tao_release (Criteria_Evaluator_ptr obj);

    static Criteria_Evaluator_ptr _narrow (::CORBA::Object_ptr obj);
    static Criteria_Evaluator_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Criteria_Evaluator_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

    typedef CosLifeCycle::Criteria SeqNamedValuePair;
    typedef CosLifeCycle::Criteria_var SeqNamedValuePair_var;
    typedef CosLifeCycle::Criteria_out SeqNamedValuePair_out;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_SeqNamedValuePair;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

    typedef CosLifeCycle::Criteria Criteria;
    typedef CosLifeCycle::Criteria_var Criteria_var;
    typedef CosLifeCycle::Criteria_out Criteria_out;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_Criteria;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

    class TAO_LifeCycle_Export NotAvailable : public ::CORBA::UserException
    {
    public:
      
      ::TAO::String_Manager reason;
      NotAvailable (void);
      NotAvailable (const NotAvailable &);
      ~NotAvailable (void);

      NotAvailable &operator= (const NotAvailable &);

      static void _tao_any_destructor (void *);

      static NotAvailable *_downcast ( ::CORBA::Exception *);
      static const NotAvailable *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc (void);

      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      

      // TAO_IDL - Generated from
      // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

      NotAvailable (
          const char * _tao_reason);

      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

    static ::CORBA::TypeCode_ptr const _tc_NotAvailable;

    virtual ::LifeCycleService::Criteria_Evaluator::SeqNamedValuePair * getInitialization (
      void);

    virtual char * getFilter (
      void);

    virtual ::LifeCycleService::Criteria_Evaluator::SeqNamedValuePair * getLogicalLocation (
      void);

    virtual char * getPreferences (
      void);

    virtual void setCriteria (
      const ::LifeCycleService::Criteria_Evaluator::Criteria & criteria_);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_Criteria_Evaluator_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    Criteria_Evaluator (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void LifeCycleService_Criteria_Evaluator_setup_collocation (void);

    // Concrete non-local interface only.
    Criteria_Evaluator (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Criteria_Evaluator (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Criteria_Evaluator (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Criteria_Evaluator (const Criteria_Evaluator &);

    void operator= (const Criteria_Evaluator &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_Criteria_Evaluator;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module LifeCycleService

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_LIFECYCLESERVICE_LIFE_CYCLE_SERVICE__ARG_TRAITS_)
#define _LIFECYCLESERVICE_LIFE_CYCLE_SERVICE__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::LifeCycleService::Life_Cycle_Service>
    : public
        Object_Arg_Traits_T<
            ::LifeCycleService::Life_Cycle_Service_ptr,
            ::LifeCycleService::Life_Cycle_Service_var,
            ::LifeCycleService::Life_Cycle_Service_out,
            TAO::Objref_Traits<LifeCycleService::Life_Cycle_Service>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_LIFECYCLESERVICE_CRITERIA_EVALUATOR__ARG_TRAITS_)
#define _LIFECYCLESERVICE_CRITERIA_EVALUATOR__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::LifeCycleService::Criteria_Evaluator>
    : public
        Object_Arg_Traits_T<
            ::LifeCycleService::Criteria_Evaluator_ptr,
            ::LifeCycleService::Criteria_Evaluator_var,
            ::LifeCycleService::Criteria_Evaluator_out,
            TAO::Objref_Traits<LifeCycleService::Criteria_Evaluator>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern TAO_LifeCycle_Export
TAO::Collocation_Proxy_Broker *
(*LifeCycleService__TAO_Life_Cycle_Service_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_LifeCycle_Export
TAO::Collocation_Proxy_Broker *
(*LifeCycleService__TAO_Criteria_Evaluator_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_LIFECYCLESERVICE_LIFE_CYCLE_SERVICE__TRAITS_)
#define _LIFECYCLESERVICE_LIFE_CYCLE_SERVICE__TRAITS_

  template<>
  struct TAO_LifeCycle_Export Objref_Traits< ::LifeCycleService::Life_Cycle_Service>
  {
    static ::LifeCycleService::Life_Cycle_Service_ptr duplicate (
        ::LifeCycleService::Life_Cycle_Service_ptr p);
    static void release (
        ::LifeCycleService::Life_Cycle_Service_ptr p);
    static ::LifeCycleService::Life_Cycle_Service_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::LifeCycleService::Life_Cycle_Service_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_LIFECYCLESERVICE_CRITERIA_EVALUATOR__TRAITS_)
#define _LIFECYCLESERVICE_CRITERIA_EVALUATOR__TRAITS_

  template<>
  struct TAO_LifeCycle_Export Objref_Traits< ::LifeCycleService::Criteria_Evaluator>
  {
    static ::LifeCycleService::Criteria_Evaluator_ptr duplicate (
        ::LifeCycleService::Criteria_Evaluator_ptr p);
    static void release (
        ::LifeCycleService::Criteria_Evaluator_ptr p);
    static ::LifeCycleService::Criteria_Evaluator_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::LifeCycleService::Criteria_Evaluator_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace LifeCycleService
{
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, Life_Cycle_Service_ptr); // copying
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, Life_Cycle_Service_ptr *); // non-copying
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Life_Cycle_Service_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, LifeCycleService::Life_Cycle_Service_ptr); // copying
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, LifeCycleService::Life_Cycle_Service_ptr *); // non-copying
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LifeCycleService::Life_Cycle_Service_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace LifeCycleService
{
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, Criteria_Evaluator_ptr); // copying
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, Criteria_Evaluator_ptr *); // non-copying
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Criteria_Evaluator_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, LifeCycleService::Criteria_Evaluator_ptr); // copying
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, LifeCycleService::Criteria_Evaluator_ptr *); // non-copying
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LifeCycleService::Criteria_Evaluator_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace LifeCycleService
{
  

  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const ::LifeCycleService::Criteria_Evaluator::NotAvailable &); // copying version
  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, ::LifeCycleService::Criteria_Evaluator::NotAvailable*); // noncopying version
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::LifeCycleService::Criteria_Evaluator::NotAvailable *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::LifeCycleService::Criteria_Evaluator::NotAvailable *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const LifeCycleService::Criteria_Evaluator::NotAvailable &); // copying version
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, LifeCycleService::Criteria_Evaluator::NotAvailable*); // noncopying version
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LifeCycleService::Criteria_Evaluator::NotAvailable *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const LifeCycleService::Criteria_Evaluator::NotAvailable *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const LifeCycleService::Life_Cycle_Service_ptr );
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, LifeCycleService::Life_Cycle_Service_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const LifeCycleService::Criteria_Evaluator_ptr );
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, LifeCycleService::Criteria_Evaluator_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const LifeCycleService::Criteria_Evaluator::NotAvailable &);
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, LifeCycleService::Criteria_Evaluator::NotAvailable &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "LifeCycleServiceC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

