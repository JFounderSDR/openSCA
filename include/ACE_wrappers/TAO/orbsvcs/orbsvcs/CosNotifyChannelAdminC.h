// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_COSNOTIFYCHANNELADMINC_UFVU2D_H_
#define _TAO_IDL_COSNOTIFYCHANNELADMINC_UFVU2D_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/Notify/notify_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "CosNotificationC.h"
#include "CosNotifyFilterC.h"
#include "CosNotifyCommC.h"
#include "CosEventChannelAdminC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Notify_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace CosNotifyChannelAdmin
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export ConnectionAlreadyActive : public ::CORBA::UserException
  {
  public:
    
    ConnectionAlreadyActive (void);
    ConnectionAlreadyActive (const ConnectionAlreadyActive &);
    ~ConnectionAlreadyActive (void);

    ConnectionAlreadyActive &operator= (const ConnectionAlreadyActive &);

    static void _tao_any_destructor (void *);

    static ConnectionAlreadyActive *_downcast ( ::CORBA::Exception *);
    static const ConnectionAlreadyActive *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConnectionAlreadyActive;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export ConnectionAlreadyInactive : public ::CORBA::UserException
  {
  public:
    
    ConnectionAlreadyInactive (void);
    ConnectionAlreadyInactive (const ConnectionAlreadyInactive &);
    ~ConnectionAlreadyInactive (void);

    ConnectionAlreadyInactive &operator= (const ConnectionAlreadyInactive &);

    static void _tao_any_destructor (void *);

    static ConnectionAlreadyInactive *_downcast ( ::CORBA::Exception *);
    static const ConnectionAlreadyInactive *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConnectionAlreadyInactive;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export NotConnected : public ::CORBA::UserException
  {
  public:
    
    NotConnected (void);
    NotConnected (const NotConnected &);
    ~NotConnected (void);

    NotConnected &operator= (const NotConnected &);

    static void _tao_any_destructor (void *);

    static NotConnected *_downcast ( ::CORBA::Exception *);
    static const NotConnected *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_NotConnected;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_CONSUMERADMIN__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_CONSUMERADMIN__VAR_OUT_CH_

  class ConsumerAdmin;
  typedef ConsumerAdmin *ConsumerAdmin_ptr;

  typedef
    TAO_Objref_Var_T<
        ConsumerAdmin
      >
    ConsumerAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        ConsumerAdmin
      >
    ConsumerAdmin_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_SUPPLIERADMIN__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_SUPPLIERADMIN__VAR_OUT_CH_

  class SupplierAdmin;
  typedef SupplierAdmin *SupplierAdmin_ptr;

  typedef
    TAO_Objref_Var_T<
        SupplierAdmin
      >
    SupplierAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        SupplierAdmin
      >
    SupplierAdmin_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_EVENTCHANNEL__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_EVENTCHANNEL__VAR_OUT_CH_

  class EventChannel;
  typedef EventChannel *EventChannel_ptr;

  typedef
    TAO_Objref_Var_T<
        EventChannel
      >
    EventChannel_var;
  
  typedef
    TAO_Objref_Out_T<
        EventChannel
      >
    EventChannel_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_EVENTCHANNELFACTORY__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_EVENTCHANNELFACTORY__VAR_OUT_CH_

  class EventChannelFactory;
  typedef EventChannelFactory *EventChannelFactory_ptr;

  typedef
    TAO_Objref_Var_T<
        EventChannelFactory
      >
    EventChannelFactory_var;
  
  typedef
    TAO_Objref_Out_T<
        EventChannelFactory
      >
    EventChannelFactory_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum ProxyType
  {
    PUSH_ANY,
    PULL_ANY,
    PUSH_STRUCTURED,
    PULL_STRUCTURED,
    PUSH_SEQUENCE,
    PULL_SEQUENCE,
    PUSH_TYPED,
    PULL_TYPED
  };

  typedef ProxyType &ProxyType_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ProxyType;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum ObtainInfoMode
  {
    ALL_NOW_UPDATES_OFF,
    ALL_NOW_UPDATES_ON,
    NONE_NOW_UPDATES_OFF,
    NONE_NOW_UPDATES_ON
  };

  typedef ObtainInfoMode &ObtainInfoMode_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ObtainInfoMode;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYCONSUMER__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_PROXYCONSUMER__VAR_OUT_CH_

  class ProxyConsumer;
  typedef ProxyConsumer *ProxyConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        ProxyConsumer
      >
    ProxyConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        ProxyConsumer
      >
    ProxyConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export ProxyConsumer
    : public virtual ::CosNotification::QoSAdmin,
      public virtual ::CosNotifyFilter::FilterAdmin
  
  {
  public:
    friend class TAO::Narrow_Utils<ProxyConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyConsumer_ptr _ptr_type;
    typedef ProxyConsumer_var _var_type;
    typedef ProxyConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ProxyConsumer_ptr _duplicate (ProxyConsumer_ptr obj);

    static void _tao_release (ProxyConsumer_ptr obj);

    static ProxyConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static ProxyConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ProxyConsumer_ptr _nil (void);

    virtual ::CosNotifyChannelAdmin::ProxyType MyType (
      void);

    virtual ::CosNotifyChannelAdmin::SupplierAdmin_ptr MyAdmin (
      void);

    virtual ::CosNotification::EventTypeSeq * obtain_subscription_types (
      ::CosNotifyChannelAdmin::ObtainInfoMode mode);

    virtual void validate_event_qos (
      const ::CosNotification::QoSProperties & required_qos,
      ::CosNotification::NamedPropertyRangeSeq_out available_qos);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ProxyConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ProxyConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_ProxyConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    ProxyConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ProxyConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ProxyConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ProxyConsumer (const ProxyConsumer &);

    void operator= (const ProxyConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ProxyConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYSUPPLIER__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_PROXYSUPPLIER__VAR_OUT_CH_

  class ProxySupplier;
  typedef ProxySupplier *ProxySupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        ProxySupplier
      >
    ProxySupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        ProxySupplier
      >
    ProxySupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export ProxySupplier
    : public virtual ::CosNotification::QoSAdmin,
      public virtual ::CosNotifyFilter::FilterAdmin
  
  {
  public:
    friend class TAO::Narrow_Utils<ProxySupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxySupplier_ptr _ptr_type;
    typedef ProxySupplier_var _var_type;
    typedef ProxySupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ProxySupplier_ptr _duplicate (ProxySupplier_ptr obj);

    static void _tao_release (ProxySupplier_ptr obj);

    static ProxySupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static ProxySupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ProxySupplier_ptr _nil (void);

    virtual ::CosNotifyChannelAdmin::ProxyType MyType (
      void);

    virtual ::CosNotifyChannelAdmin::ConsumerAdmin_ptr MyAdmin (
      void);

    virtual ::CosNotifyFilter::MappingFilter_ptr priority_filter (
      void);

    virtual void priority_filter (
      ::CosNotifyFilter::MappingFilter_ptr priority_filter);

    virtual ::CosNotifyFilter::MappingFilter_ptr lifetime_filter (
      void);

    virtual void lifetime_filter (
      ::CosNotifyFilter::MappingFilter_ptr lifetime_filter);

    virtual ::CosNotification::EventTypeSeq * obtain_offered_types (
      ::CosNotifyChannelAdmin::ObtainInfoMode mode);

    virtual void validate_event_qos (
      const ::CosNotification::QoSProperties & required_qos,
      ::CosNotification::NamedPropertyRangeSeq_out available_qos);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ProxySupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ProxySupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_ProxySupplier_setup_collocation (void);

    // Concrete non-local interface only.
    ProxySupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ProxySupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ProxySupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ProxySupplier (const ProxySupplier &);

    void operator= (const ProxySupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ProxySupplier;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYPUSHCONSUMER__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_PROXYPUSHCONSUMER__VAR_OUT_CH_

  class ProxyPushConsumer;
  typedef ProxyPushConsumer *ProxyPushConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        ProxyPushConsumer
      >
    ProxyPushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        ProxyPushConsumer
      >
    ProxyPushConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export ProxyPushConsumer
    : public virtual ::CosNotifyChannelAdmin::ProxyConsumer,
      public virtual ::CosNotifyComm::PushConsumer
  
  {
  public:
    friend class TAO::Narrow_Utils<ProxyPushConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyPushConsumer_ptr _ptr_type;
    typedef ProxyPushConsumer_var _var_type;
    typedef ProxyPushConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ProxyPushConsumer_ptr _duplicate (ProxyPushConsumer_ptr obj);

    static void _tao_release (ProxyPushConsumer_ptr obj);

    static ProxyPushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static ProxyPushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ProxyPushConsumer_ptr _nil (void);

    virtual void connect_any_push_supplier (
      ::CosEventComm::PushSupplier_ptr push_supplier);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ProxyPushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ProxyPushConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_ProxyPushConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    ProxyPushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ProxyPushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ProxyPushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ProxyPushConsumer (const ProxyPushConsumer &);

    void operator= (const ProxyPushConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ProxyPushConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHCONSUMER__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHCONSUMER__VAR_OUT_CH_

  class StructuredProxyPushConsumer;
  typedef StructuredProxyPushConsumer *StructuredProxyPushConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        StructuredProxyPushConsumer
      >
    StructuredProxyPushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        StructuredProxyPushConsumer
      >
    StructuredProxyPushConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export StructuredProxyPushConsumer
    : public virtual ::CosNotifyChannelAdmin::ProxyConsumer,
      public virtual ::CosNotifyComm::StructuredPushConsumer
  
  {
  public:
    friend class TAO::Narrow_Utils<StructuredProxyPushConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef StructuredProxyPushConsumer_ptr _ptr_type;
    typedef StructuredProxyPushConsumer_var _var_type;
    typedef StructuredProxyPushConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static StructuredProxyPushConsumer_ptr _duplicate (StructuredProxyPushConsumer_ptr obj);

    static void _tao_release (StructuredProxyPushConsumer_ptr obj);

    static StructuredProxyPushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static StructuredProxyPushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static StructuredProxyPushConsumer_ptr _nil (void);

    virtual void connect_structured_push_supplier (
      ::CosNotifyComm::StructuredPushSupplier_ptr push_supplier);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_StructuredProxyPushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    StructuredProxyPushConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_StructuredProxyPushConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    StructuredProxyPushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    StructuredProxyPushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~StructuredProxyPushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    StructuredProxyPushConsumer (const StructuredProxyPushConsumer &);

    void operator= (const StructuredProxyPushConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_StructuredProxyPushConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHCONSUMER__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHCONSUMER__VAR_OUT_CH_

  class SequenceProxyPushConsumer;
  typedef SequenceProxyPushConsumer *SequenceProxyPushConsumer_ptr;

  typedef
    TAO_Objref_Var_T<
        SequenceProxyPushConsumer
      >
    SequenceProxyPushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        SequenceProxyPushConsumer
      >
    SequenceProxyPushConsumer_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export SequenceProxyPushConsumer
    : public virtual ::CosNotifyChannelAdmin::ProxyConsumer,
      public virtual ::CosNotifyComm::SequencePushConsumer
  
  {
  public:
    friend class TAO::Narrow_Utils<SequenceProxyPushConsumer>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SequenceProxyPushConsumer_ptr _ptr_type;
    typedef SequenceProxyPushConsumer_var _var_type;
    typedef SequenceProxyPushConsumer_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SequenceProxyPushConsumer_ptr _duplicate (SequenceProxyPushConsumer_ptr obj);

    static void _tao_release (SequenceProxyPushConsumer_ptr obj);

    static SequenceProxyPushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static SequenceProxyPushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SequenceProxyPushConsumer_ptr _nil (void);

    virtual void connect_sequence_push_supplier (
      ::CosNotifyComm::SequencePushSupplier_ptr push_supplier);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_SequenceProxyPushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    SequenceProxyPushConsumer (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_SequenceProxyPushConsumer_setup_collocation (void);

    // Concrete non-local interface only.
    SequenceProxyPushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    SequenceProxyPushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~SequenceProxyPushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    SequenceProxyPushConsumer (const SequenceProxyPushConsumer &);

    void operator= (const SequenceProxyPushConsumer &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_SequenceProxyPushConsumer;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYPUSHSUPPLIER__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_PROXYPUSHSUPPLIER__VAR_OUT_CH_

  class ProxyPushSupplier;
  typedef ProxyPushSupplier *ProxyPushSupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        ProxyPushSupplier
      >
    ProxyPushSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        ProxyPushSupplier
      >
    ProxyPushSupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export ProxyPushSupplier
    : public virtual ::CosNotifyChannelAdmin::ProxySupplier,
      public virtual ::CosNotifyComm::PushSupplier
  
  {
  public:
    friend class TAO::Narrow_Utils<ProxyPushSupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyPushSupplier_ptr _ptr_type;
    typedef ProxyPushSupplier_var _var_type;
    typedef ProxyPushSupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ProxyPushSupplier_ptr _duplicate (ProxyPushSupplier_ptr obj);

    static void _tao_release (ProxyPushSupplier_ptr obj);

    static ProxyPushSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static ProxyPushSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ProxyPushSupplier_ptr _nil (void);

    virtual void connect_any_push_consumer (
      ::CosEventComm::PushConsumer_ptr push_consumer);

    virtual void suspend_connection (
      void);

    virtual void resume_connection (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ProxyPushSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ProxyPushSupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_ProxyPushSupplier_setup_collocation (void);

    // Concrete non-local interface only.
    ProxyPushSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ProxyPushSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ProxyPushSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ProxyPushSupplier (const ProxyPushSupplier &);

    void operator= (const ProxyPushSupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ProxyPushSupplier;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHSUPPLIER__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHSUPPLIER__VAR_OUT_CH_

  class StructuredProxyPushSupplier;
  typedef StructuredProxyPushSupplier *StructuredProxyPushSupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        StructuredProxyPushSupplier
      >
    StructuredProxyPushSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        StructuredProxyPushSupplier
      >
    StructuredProxyPushSupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export StructuredProxyPushSupplier
    : public virtual ::CosNotifyChannelAdmin::ProxySupplier,
      public virtual ::CosNotifyComm::StructuredPushSupplier
  
  {
  public:
    friend class TAO::Narrow_Utils<StructuredProxyPushSupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef StructuredProxyPushSupplier_ptr _ptr_type;
    typedef StructuredProxyPushSupplier_var _var_type;
    typedef StructuredProxyPushSupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static StructuredProxyPushSupplier_ptr _duplicate (StructuredProxyPushSupplier_ptr obj);

    static void _tao_release (StructuredProxyPushSupplier_ptr obj);

    static StructuredProxyPushSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static StructuredProxyPushSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static StructuredProxyPushSupplier_ptr _nil (void);

    virtual void connect_structured_push_consumer (
      ::CosNotifyComm::StructuredPushConsumer_ptr push_consumer);

    virtual void suspend_connection (
      void);

    virtual void resume_connection (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_StructuredProxyPushSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    StructuredProxyPushSupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_StructuredProxyPushSupplier_setup_collocation (void);

    // Concrete non-local interface only.
    StructuredProxyPushSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    StructuredProxyPushSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~StructuredProxyPushSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    StructuredProxyPushSupplier (const StructuredProxyPushSupplier &);

    void operator= (const StructuredProxyPushSupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_StructuredProxyPushSupplier;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHSUPPLIER__VAR_OUT_CH_)
#define _COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHSUPPLIER__VAR_OUT_CH_

  class SequenceProxyPushSupplier;
  typedef SequenceProxyPushSupplier *SequenceProxyPushSupplier_ptr;

  typedef
    TAO_Objref_Var_T<
        SequenceProxyPushSupplier
      >
    SequenceProxyPushSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        SequenceProxyPushSupplier
      >
    SequenceProxyPushSupplier_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export SequenceProxyPushSupplier
    : public virtual ::CosNotifyChannelAdmin::ProxySupplier,
      public virtual ::CosNotifyComm::SequencePushSupplier
  
  {
  public:
    friend class TAO::Narrow_Utils<SequenceProxyPushSupplier>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SequenceProxyPushSupplier_ptr _ptr_type;
    typedef SequenceProxyPushSupplier_var _var_type;
    typedef SequenceProxyPushSupplier_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SequenceProxyPushSupplier_ptr _duplicate (SequenceProxyPushSupplier_ptr obj);

    static void _tao_release (SequenceProxyPushSupplier_ptr obj);

    static SequenceProxyPushSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static SequenceProxyPushSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SequenceProxyPushSupplier_ptr _nil (void);

    virtual void connect_sequence_push_consumer (
      ::CosNotifyComm::SequencePushConsumer_ptr push_consumer);

    virtual void suspend_connection (
      void);

    virtual void resume_connection (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_SequenceProxyPushSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    SequenceProxyPushSupplier (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_SequenceProxyPushSupplier_setup_collocation (void);

    // Concrete non-local interface only.
    SequenceProxyPushSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    SequenceProxyPushSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~SequenceProxyPushSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    SequenceProxyPushSupplier (const SequenceProxyPushSupplier &);

    void operator= (const SequenceProxyPushSupplier &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_SequenceProxyPushSupplier;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Long ProxyID;
  typedef ::CORBA::Long_out ProxyID_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ProxyID;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYIDSEQ_CH_)
#define _COSNOTIFYCHANNELADMIN_PROXYIDSEQ_CH_

  class ProxyIDSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        ProxyIDSeq
      >
    ProxyIDSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ProxyIDSeq
      >
    ProxyIDSeq_out;

  class TAO_Notify_Export ProxyIDSeq
    : public
        ::TAO::unbounded_value_sequence<
            ProxyID
          >
  {
  public:
    ProxyIDSeq (void);
    ProxyIDSeq ( ::CORBA::ULong max);
    ProxyIDSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Long* buffer, 
      ::CORBA::Boolean release = false);
    ProxyIDSeq (const ProxyIDSeq &);
    virtual ~ProxyIDSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyIDSeq_var _var_type;
    typedef ProxyIDSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ProxyIDSeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum ClientType
  {
    ANY_EVENT,
    STRUCTURED_EVENT,
    SEQUENCE_EVENT
  };

  typedef ClientType &ClientType_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ClientType;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum InterFilterGroupOperator
  {
    AND_OP,
    OR_OP
  };

  typedef InterFilterGroupOperator &InterFilterGroupOperator_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_InterFilterGroupOperator;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Long AdminID;
  typedef ::CORBA::Long_out AdminID_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_AdminID;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSNOTIFYCHANNELADMIN_ADMINIDSEQ_CH_)
#define _COSNOTIFYCHANNELADMIN_ADMINIDSEQ_CH_

  class AdminIDSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        AdminIDSeq
      >
    AdminIDSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        AdminIDSeq
      >
    AdminIDSeq_out;

  class TAO_Notify_Export AdminIDSeq
    : public
        ::TAO::unbounded_value_sequence<
            AdminID
          >
  {
  public:
    AdminIDSeq (void);
    AdminIDSeq ( ::CORBA::ULong max);
    AdminIDSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Long* buffer, 
      ::CORBA::Boolean release = false);
    AdminIDSeq (const AdminIDSeq &);
    virtual ~AdminIDSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AdminIDSeq_var _var_type;
    typedef AdminIDSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_AdminIDSeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export AdminNotFound : public ::CORBA::UserException
  {
  public:
    
    AdminNotFound (void);
    AdminNotFound (const AdminNotFound &);
    ~AdminNotFound (void);

    AdminNotFound &operator= (const AdminNotFound &);

    static void _tao_any_destructor (void *);

    static AdminNotFound *_downcast ( ::CORBA::Exception *);
    static const AdminNotFound *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_AdminNotFound;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export ProxyNotFound : public ::CORBA::UserException
  {
  public:
    
    ProxyNotFound (void);
    ProxyNotFound (const ProxyNotFound &);
    ~ProxyNotFound (void);

    ProxyNotFound &operator= (const ProxyNotFound &);

    static void _tao_any_destructor (void *);

    static ProxyNotFound *_downcast ( ::CORBA::Exception *);
    static const ProxyNotFound *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ProxyNotFound;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct AdminLimit;

  typedef
    ::TAO_Var_Var_T<
        AdminLimit
      >
    AdminLimit_var;
  
  typedef
    ::TAO_Out_T<
        AdminLimit
      >
    AdminLimit_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Notify_Export AdminLimit
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AdminLimit_var _var_type;
    typedef AdminLimit_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    CosNotification::PropertyValue value;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_AdminLimit;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export AdminLimitExceeded : public ::CORBA::UserException
  {
  public:
    
    CosNotifyChannelAdmin::AdminLimit admin_property_err;
    AdminLimitExceeded (void);
    AdminLimitExceeded (const AdminLimitExceeded &);
    ~AdminLimitExceeded (void);

    AdminLimitExceeded &operator= (const AdminLimitExceeded &);

    static void _tao_any_destructor (void *);

    static AdminLimitExceeded *_downcast ( ::CORBA::Exception *);
    static const AdminLimitExceeded *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    AdminLimitExceeded (
        const CosNotifyChannelAdmin::AdminLimit & _tao_admin_property_err);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_AdminLimitExceeded;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export ConsumerAdmin
    : public virtual ::CosNotification::QoSAdmin,
      public virtual ::CosNotifyComm::NotifySubscribe,
      public virtual ::CosNotifyFilter::FilterAdmin,
      public virtual ::CosEventChannelAdmin::ConsumerAdmin
  
  {
  public:
    friend class TAO::Narrow_Utils<ConsumerAdmin>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ConsumerAdmin_ptr _ptr_type;
    typedef ConsumerAdmin_var _var_type;
    typedef ConsumerAdmin_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ConsumerAdmin_ptr _duplicate (ConsumerAdmin_ptr obj);

    static void _tao_release (ConsumerAdmin_ptr obj);

    static ConsumerAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static ConsumerAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ConsumerAdmin_ptr _nil (void);

    virtual ::CosNotifyChannelAdmin::AdminID MyID (
      void);

    virtual ::CosNotifyChannelAdmin::EventChannel_ptr MyChannel (
      void);

    virtual ::CosNotifyChannelAdmin::InterFilterGroupOperator MyOperator (
      void);

    virtual ::CosNotifyFilter::MappingFilter_ptr priority_filter (
      void);

    virtual void priority_filter (
      ::CosNotifyFilter::MappingFilter_ptr priority_filter);

    virtual ::CosNotifyFilter::MappingFilter_ptr lifetime_filter (
      void);

    virtual void lifetime_filter (
      ::CosNotifyFilter::MappingFilter_ptr lifetime_filter);

    virtual ::CosNotifyChannelAdmin::ProxyIDSeq * pull_suppliers (
      void);

    virtual ::CosNotifyChannelAdmin::ProxyIDSeq * push_suppliers (
      void);

    virtual ::CosNotifyChannelAdmin::ProxySupplier_ptr get_proxy_supplier (
      ::CosNotifyChannelAdmin::ProxyID proxy_id);

    virtual ::CosNotifyChannelAdmin::ProxySupplier_ptr obtain_notification_pull_supplier (
      ::CosNotifyChannelAdmin::ClientType ctype,
      ::CosNotifyChannelAdmin::ProxyID_out proxy_id);

    virtual ::CosNotifyChannelAdmin::ProxySupplier_ptr obtain_notification_push_supplier (
      ::CosNotifyChannelAdmin::ClientType ctype,
      ::CosNotifyChannelAdmin::ProxyID_out proxy_id);

    virtual void destroy (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ConsumerAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ConsumerAdmin (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_ConsumerAdmin_setup_collocation (void);

    // Concrete non-local interface only.
    ConsumerAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ConsumerAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ConsumerAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ConsumerAdmin (const ConsumerAdmin &);

    void operator= (const ConsumerAdmin &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConsumerAdmin;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export SupplierAdmin
    : public virtual ::CosNotification::QoSAdmin,
      public virtual ::CosNotifyComm::NotifyPublish,
      public virtual ::CosNotifyFilter::FilterAdmin,
      public virtual ::CosEventChannelAdmin::SupplierAdmin
  
  {
  public:
    friend class TAO::Narrow_Utils<SupplierAdmin>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SupplierAdmin_ptr _ptr_type;
    typedef SupplierAdmin_var _var_type;
    typedef SupplierAdmin_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SupplierAdmin_ptr _duplicate (SupplierAdmin_ptr obj);

    static void _tao_release (SupplierAdmin_ptr obj);

    static SupplierAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static SupplierAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SupplierAdmin_ptr _nil (void);

    virtual ::CosNotifyChannelAdmin::AdminID MyID (
      void);

    virtual ::CosNotifyChannelAdmin::EventChannel_ptr MyChannel (
      void);

    virtual ::CosNotifyChannelAdmin::InterFilterGroupOperator MyOperator (
      void);

    virtual ::CosNotifyChannelAdmin::ProxyIDSeq * pull_consumers (
      void);

    virtual ::CosNotifyChannelAdmin::ProxyIDSeq * push_consumers (
      void);

    virtual ::CosNotifyChannelAdmin::ProxyConsumer_ptr get_proxy_consumer (
      ::CosNotifyChannelAdmin::ProxyID proxy_id);

    virtual ::CosNotifyChannelAdmin::ProxyConsumer_ptr obtain_notification_pull_consumer (
      ::CosNotifyChannelAdmin::ClientType ctype,
      ::CosNotifyChannelAdmin::ProxyID_out proxy_id);

    virtual ::CosNotifyChannelAdmin::ProxyConsumer_ptr obtain_notification_push_consumer (
      ::CosNotifyChannelAdmin::ClientType ctype,
      ::CosNotifyChannelAdmin::ProxyID_out proxy_id);

    virtual void destroy (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_SupplierAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    SupplierAdmin (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_SupplierAdmin_setup_collocation (void);

    // Concrete non-local interface only.
    SupplierAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    SupplierAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~SupplierAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    SupplierAdmin (const SupplierAdmin &);

    void operator= (const SupplierAdmin &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_SupplierAdmin;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export EventChannel
    : public virtual ::CosNotification::QoSAdmin,
      public virtual ::CosNotification::AdminPropertiesAdmin,
      public virtual ::CosEventChannelAdmin::EventChannel
  
  {
  public:
    friend class TAO::Narrow_Utils<EventChannel>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef EventChannel_ptr _ptr_type;
    typedef EventChannel_var _var_type;
    typedef EventChannel_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static EventChannel_ptr _duplicate (EventChannel_ptr obj);

    static void _tao_release (EventChannel_ptr obj);

    static EventChannel_ptr _narrow (::CORBA::Object_ptr obj);
    static EventChannel_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static EventChannel_ptr _nil (void);

    virtual ::CosNotifyChannelAdmin::EventChannelFactory_ptr MyFactory (
      void);

    virtual ::CosNotifyChannelAdmin::ConsumerAdmin_ptr default_consumer_admin (
      void);

    virtual ::CosNotifyChannelAdmin::SupplierAdmin_ptr default_supplier_admin (
      void);

    virtual ::CosNotifyFilter::FilterFactory_ptr default_filter_factory (
      void);

    virtual ::CosNotifyChannelAdmin::ConsumerAdmin_ptr new_for_consumers (
      ::CosNotifyChannelAdmin::InterFilterGroupOperator op,
      ::CosNotifyChannelAdmin::AdminID_out id);

    virtual ::CosNotifyChannelAdmin::SupplierAdmin_ptr new_for_suppliers (
      ::CosNotifyChannelAdmin::InterFilterGroupOperator op,
      ::CosNotifyChannelAdmin::AdminID_out id);

    virtual ::CosNotifyChannelAdmin::ConsumerAdmin_ptr get_consumeradmin (
      ::CosNotifyChannelAdmin::AdminID id);

    virtual ::CosNotifyChannelAdmin::SupplierAdmin_ptr get_supplieradmin (
      ::CosNotifyChannelAdmin::AdminID id);

    virtual ::CosNotifyChannelAdmin::AdminIDSeq * get_all_consumeradmins (
      void);

    virtual ::CosNotifyChannelAdmin::AdminIDSeq * get_all_supplieradmins (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_EventChannel_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    EventChannel (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_EventChannel_setup_collocation (void);

    // Concrete non-local interface only.
    EventChannel (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    EventChannel (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~EventChannel (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    EventChannel (const EventChannel &);

    void operator= (const EventChannel &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_EventChannel;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Long ChannelID;
  typedef ::CORBA::Long_out ChannelID_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ChannelID;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSNOTIFYCHANNELADMIN_CHANNELIDSEQ_CH_)
#define _COSNOTIFYCHANNELADMIN_CHANNELIDSEQ_CH_

  class ChannelIDSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        ChannelIDSeq
      >
    ChannelIDSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ChannelIDSeq
      >
    ChannelIDSeq_out;

  class TAO_Notify_Export ChannelIDSeq
    : public
        ::TAO::unbounded_value_sequence<
            ChannelID
          >
  {
  public:
    ChannelIDSeq (void);
    ChannelIDSeq ( ::CORBA::ULong max);
    ChannelIDSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Long* buffer, 
      ::CORBA::Boolean release = false);
    ChannelIDSeq (const ChannelIDSeq &);
    virtual ~ChannelIDSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ChannelIDSeq_var _var_type;
    typedef ChannelIDSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ChannelIDSeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export ChannelNotFound : public ::CORBA::UserException
  {
  public:
    
    ChannelNotFound (void);
    ChannelNotFound (const ChannelNotFound &);
    ~ChannelNotFound (void);

    ChannelNotFound &operator= (const ChannelNotFound &);

    static void _tao_any_destructor (void *);

    static ChannelNotFound *_downcast ( ::CORBA::Exception *);
    static const ChannelNotFound *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ChannelNotFound;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export EventChannelFactory
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<EventChannelFactory>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef EventChannelFactory_ptr _ptr_type;
    typedef EventChannelFactory_var _var_type;
    typedef EventChannelFactory_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static EventChannelFactory_ptr _duplicate (EventChannelFactory_ptr obj);

    static void _tao_release (EventChannelFactory_ptr obj);

    static EventChannelFactory_ptr _narrow (::CORBA::Object_ptr obj);
    static EventChannelFactory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static EventChannelFactory_ptr _nil (void);

    virtual ::CosNotifyChannelAdmin::EventChannel_ptr create_channel (
      const ::CosNotification::QoSProperties & initial_qos,
      const ::CosNotification::AdminProperties & initial_admin,
      ::CosNotifyChannelAdmin::ChannelID_out id);

    virtual ::CosNotifyChannelAdmin::ChannelIDSeq * get_all_channels (
      void);

    virtual ::CosNotifyChannelAdmin::EventChannel_ptr get_event_channel (
      ::CosNotifyChannelAdmin::ChannelID id);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_EventChannelFactory_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    EventChannelFactory (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyChannelAdmin_EventChannelFactory_setup_collocation (void);

    // Concrete non-local interface only.
    EventChannelFactory (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    EventChannelFactory (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~EventChannelFactory (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    EventChannelFactory (const EventChannelFactory &);

    void operator= (const EventChannelFactory &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_EventChannelFactory;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module CosNotifyChannelAdmin

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_CONSUMERADMIN__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_CONSUMERADMIN__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::ConsumerAdmin>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::ConsumerAdmin_ptr,
            ::CosNotifyChannelAdmin::ConsumerAdmin_var,
            ::CosNotifyChannelAdmin::ConsumerAdmin_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::ConsumerAdmin>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_SUPPLIERADMIN__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_SUPPLIERADMIN__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::SupplierAdmin>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::SupplierAdmin_ptr,
            ::CosNotifyChannelAdmin::SupplierAdmin_var,
            ::CosNotifyChannelAdmin::SupplierAdmin_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::SupplierAdmin>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_EVENTCHANNEL__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_EVENTCHANNEL__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::EventChannel>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::EventChannel_ptr,
            ::CosNotifyChannelAdmin::EventChannel_var,
            ::CosNotifyChannelAdmin::EventChannel_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::EventChannel>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_EVENTCHANNELFACTORY__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_EVENTCHANNELFACTORY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::EventChannelFactory>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::EventChannelFactory_ptr,
            ::CosNotifyChannelAdmin::EventChannelFactory_var,
            ::CosNotifyChannelAdmin::EventChannelFactory_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::EventChannelFactory>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::CosNotifyChannelAdmin::ProxyType>
    : public
        Basic_Arg_Traits_T<
            ::CosNotifyChannelAdmin::ProxyType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::CosNotifyChannelAdmin::ObtainInfoMode>
    : public
        Basic_Arg_Traits_T<
            ::CosNotifyChannelAdmin::ObtainInfoMode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYCONSUMER__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_PROXYCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::ProxyConsumer>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::ProxyConsumer_ptr,
            ::CosNotifyChannelAdmin::ProxyConsumer_var,
            ::CosNotifyChannelAdmin::ProxyConsumer_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::ProxyConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYSUPPLIER__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_PROXYSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::ProxySupplier>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::ProxySupplier_ptr,
            ::CosNotifyChannelAdmin::ProxySupplier_var,
            ::CosNotifyChannelAdmin::ProxySupplier_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::ProxySupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYPUSHCONSUMER__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_PROXYPUSHCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::ProxyPushConsumer>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::ProxyPushConsumer_ptr,
            ::CosNotifyChannelAdmin::ProxyPushConsumer_var,
            ::CosNotifyChannelAdmin::ProxyPushConsumer_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::ProxyPushConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHCONSUMER__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::StructuredProxyPushConsumer>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr,
            ::CosNotifyChannelAdmin::StructuredProxyPushConsumer_var,
            ::CosNotifyChannelAdmin::StructuredProxyPushConsumer_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::StructuredProxyPushConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHCONSUMER__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::SequenceProxyPushConsumer>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr,
            ::CosNotifyChannelAdmin::SequenceProxyPushConsumer_var,
            ::CosNotifyChannelAdmin::SequenceProxyPushConsumer_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::SequenceProxyPushConsumer>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYPUSHSUPPLIER__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_PROXYPUSHSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::ProxyPushSupplier>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::ProxyPushSupplier_ptr,
            ::CosNotifyChannelAdmin::ProxyPushSupplier_var,
            ::CosNotifyChannelAdmin::ProxyPushSupplier_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::ProxyPushSupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHSUPPLIER__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::StructuredProxyPushSupplier>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr,
            ::CosNotifyChannelAdmin::StructuredProxyPushSupplier_var,
            ::CosNotifyChannelAdmin::StructuredProxyPushSupplier_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::StructuredProxyPushSupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHSUPPLIER__ARG_TRAITS_)
#define _COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHSUPPLIER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyChannelAdmin::SequenceProxyPushSupplier>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr,
            ::CosNotifyChannelAdmin::SequenceProxyPushSupplier_var,
            ::CosNotifyChannelAdmin::SequenceProxyPushSupplier_out,
            TAO::Objref_Traits<CosNotifyChannelAdmin::SequenceProxyPushSupplier>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosNotifyChannelAdmin::ProxyIDSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyChannelAdmin::ProxyIDSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::CosNotifyChannelAdmin::ClientType>
    : public
        Basic_Arg_Traits_T<
            ::CosNotifyChannelAdmin::ClientType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::CosNotifyChannelAdmin::InterFilterGroupOperator>
    : public
        Basic_Arg_Traits_T<
            ::CosNotifyChannelAdmin::InterFilterGroupOperator,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosNotifyChannelAdmin::AdminIDSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyChannelAdmin::AdminIDSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CosNotifyChannelAdmin::AdminLimit>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyChannelAdmin::AdminLimit,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosNotifyChannelAdmin::ChannelIDSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyChannelAdmin::ChannelIDSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_ProxyConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_ProxySupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_ProxyPushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_StructuredProxyPushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_SequenceProxyPushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_ProxyPushSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_StructuredProxyPushSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_SequenceProxyPushSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_ConsumerAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_SupplierAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_EventChannel_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyChannelAdmin__TAO_EventChannelFactory_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYCONSUMER__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_PROXYCONSUMER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::ProxyConsumer>
  {
    static ::CosNotifyChannelAdmin::ProxyConsumer_ptr duplicate (
        ::CosNotifyChannelAdmin::ProxyConsumer_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::ProxyConsumer_ptr p);
    static ::CosNotifyChannelAdmin::ProxyConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::ProxyConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYSUPPLIER__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_PROXYSUPPLIER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::ProxySupplier>
  {
    static ::CosNotifyChannelAdmin::ProxySupplier_ptr duplicate (
        ::CosNotifyChannelAdmin::ProxySupplier_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::ProxySupplier_ptr p);
    static ::CosNotifyChannelAdmin::ProxySupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::ProxySupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYPUSHCONSUMER__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_PROXYPUSHCONSUMER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::ProxyPushConsumer>
  {
    static ::CosNotifyChannelAdmin::ProxyPushConsumer_ptr duplicate (
        ::CosNotifyChannelAdmin::ProxyPushConsumer_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::ProxyPushConsumer_ptr p);
    static ::CosNotifyChannelAdmin::ProxyPushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::ProxyPushConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHCONSUMER__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHCONSUMER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::StructuredProxyPushConsumer>
  {
    static ::CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr duplicate (
        ::CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr p);
    static ::CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHCONSUMER__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHCONSUMER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::SequenceProxyPushConsumer>
  {
    static ::CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr duplicate (
        ::CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr p);
    static ::CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_PROXYPUSHSUPPLIER__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_PROXYPUSHSUPPLIER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::ProxyPushSupplier>
  {
    static ::CosNotifyChannelAdmin::ProxyPushSupplier_ptr duplicate (
        ::CosNotifyChannelAdmin::ProxyPushSupplier_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::ProxyPushSupplier_ptr p);
    static ::CosNotifyChannelAdmin::ProxyPushSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::ProxyPushSupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHSUPPLIER__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_STRUCTUREDPROXYPUSHSUPPLIER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::StructuredProxyPushSupplier>
  {
    static ::CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr duplicate (
        ::CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr p);
    static ::CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHSUPPLIER__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_SEQUENCEPROXYPUSHSUPPLIER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::SequenceProxyPushSupplier>
  {
    static ::CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr duplicate (
        ::CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr p);
    static ::CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_CONSUMERADMIN__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_CONSUMERADMIN__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::ConsumerAdmin>
  {
    static ::CosNotifyChannelAdmin::ConsumerAdmin_ptr duplicate (
        ::CosNotifyChannelAdmin::ConsumerAdmin_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::ConsumerAdmin_ptr p);
    static ::CosNotifyChannelAdmin::ConsumerAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::ConsumerAdmin_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_SUPPLIERADMIN__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_SUPPLIERADMIN__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::SupplierAdmin>
  {
    static ::CosNotifyChannelAdmin::SupplierAdmin_ptr duplicate (
        ::CosNotifyChannelAdmin::SupplierAdmin_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::SupplierAdmin_ptr p);
    static ::CosNotifyChannelAdmin::SupplierAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::SupplierAdmin_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_EVENTCHANNEL__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_EVENTCHANNEL__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::EventChannel>
  {
    static ::CosNotifyChannelAdmin::EventChannel_ptr duplicate (
        ::CosNotifyChannelAdmin::EventChannel_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::EventChannel_ptr p);
    static ::CosNotifyChannelAdmin::EventChannel_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::EventChannel_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYCHANNELADMIN_EVENTCHANNELFACTORY__TRAITS_)
#define _COSNOTIFYCHANNELADMIN_EVENTCHANNELFACTORY__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyChannelAdmin::EventChannelFactory>
  {
    static ::CosNotifyChannelAdmin::EventChannelFactory_ptr duplicate (
        ::CosNotifyChannelAdmin::EventChannelFactory_ptr p);
    static void release (
        ::CosNotifyChannelAdmin::EventChannelFactory_ptr p);
    static ::CosNotifyChannelAdmin::EventChannelFactory_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyChannelAdmin::EventChannelFactory_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyChannelAdmin::ConnectionAlreadyActive &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::ConnectionAlreadyActive*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::ConnectionAlreadyActive *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::ConnectionAlreadyActive *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyChannelAdmin::ConnectionAlreadyActive &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ConnectionAlreadyActive*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ConnectionAlreadyActive *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::ConnectionAlreadyActive *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyChannelAdmin::ConnectionAlreadyInactive &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::ConnectionAlreadyInactive*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::ConnectionAlreadyInactive *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::ConnectionAlreadyInactive *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyChannelAdmin::ConnectionAlreadyInactive &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ConnectionAlreadyInactive*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ConnectionAlreadyInactive *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::ConnectionAlreadyInactive *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyChannelAdmin::NotConnected &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::NotConnected*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::NotConnected *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::NotConnected *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyChannelAdmin::NotConnected &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::NotConnected*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::NotConnected *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::NotConnected *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::ProxyType);
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::ProxyType &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ProxyType);
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ProxyType &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::ObtainInfoMode);
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::ObtainInfoMode &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ObtainInfoMode);
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ObtainInfoMode &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ProxyConsumer_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ProxyConsumer_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxyConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ProxyConsumer_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ProxyConsumer_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ProxyConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ProxySupplier_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ProxySupplier_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxySupplier_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ProxySupplier_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ProxySupplier_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ProxySupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ProxyPushConsumer_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ProxyPushConsumer_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxyPushConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ProxyPushConsumer_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ProxyPushConsumer_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ProxyPushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, StructuredProxyPushConsumer_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, StructuredProxyPushConsumer_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StructuredProxyPushConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SequenceProxyPushConsumer_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SequenceProxyPushConsumer_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SequenceProxyPushConsumer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ProxyPushSupplier_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ProxyPushSupplier_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxyPushSupplier_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ProxyPushSupplier_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ProxyPushSupplier_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ProxyPushSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, StructuredProxyPushSupplier_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, StructuredProxyPushSupplier_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StructuredProxyPushSupplier_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SequenceProxyPushSupplier_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SequenceProxyPushSupplier_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SequenceProxyPushSupplier_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const ::CosNotifyChannelAdmin::ProxyIDSeq &); // copying version
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ::CosNotifyChannelAdmin::ProxyIDSeq*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::ProxyIDSeq *&); // deprecated
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::ProxyIDSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const CosNotifyChannelAdmin::ProxyIDSeq &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, CosNotifyChannelAdmin::ProxyIDSeq*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ProxyIDSeq *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::ProxyIDSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::ClientType);
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::ClientType &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ClientType);
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ClientType &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::InterFilterGroupOperator);
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::InterFilterGroupOperator &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::InterFilterGroupOperator);
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::InterFilterGroupOperator &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const ::CosNotifyChannelAdmin::AdminIDSeq &); // copying version
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ::CosNotifyChannelAdmin::AdminIDSeq*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::AdminIDSeq *&); // deprecated
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::AdminIDSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const CosNotifyChannelAdmin::AdminIDSeq &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, CosNotifyChannelAdmin::AdminIDSeq*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::AdminIDSeq *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::AdminIDSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyChannelAdmin::AdminNotFound &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::AdminNotFound*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::AdminNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::AdminNotFound *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyChannelAdmin::AdminNotFound &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::AdminNotFound*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::AdminNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::AdminNotFound *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyChannelAdmin::ProxyNotFound &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::ProxyNotFound*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::ProxyNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::ProxyNotFound *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyChannelAdmin::ProxyNotFound &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ProxyNotFound*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ProxyNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::ProxyNotFound *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyChannelAdmin::AdminLimit &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::AdminLimit*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::AdminLimit *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::AdminLimit *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyChannelAdmin::AdminLimit &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::AdminLimit*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::AdminLimit *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::AdminLimit *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyChannelAdmin::AdminLimitExceeded &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::AdminLimitExceeded*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::AdminLimitExceeded *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::AdminLimitExceeded *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyChannelAdmin::AdminLimitExceeded &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::AdminLimitExceeded*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::AdminLimitExceeded *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::AdminLimitExceeded *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ConsumerAdmin_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ConsumerAdmin_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ConsumerAdmin_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ConsumerAdmin_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ConsumerAdmin_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ConsumerAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SupplierAdmin_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SupplierAdmin_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SupplierAdmin_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::SupplierAdmin_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::SupplierAdmin_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::SupplierAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, EventChannel_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, EventChannel_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EventChannel_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::EventChannel_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::EventChannel_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::EventChannel_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const ::CosNotifyChannelAdmin::ChannelIDSeq &); // copying version
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ::CosNotifyChannelAdmin::ChannelIDSeq*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::ChannelIDSeq *&); // deprecated
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::ChannelIDSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const CosNotifyChannelAdmin::ChannelIDSeq &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, CosNotifyChannelAdmin::ChannelIDSeq*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ChannelIDSeq *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::ChannelIDSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyChannelAdmin::ChannelNotFound &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyChannelAdmin::ChannelNotFound*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyChannelAdmin::ChannelNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyChannelAdmin::ChannelNotFound *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyChannelAdmin::ChannelNotFound &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::ChannelNotFound*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::ChannelNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyChannelAdmin::ChannelNotFound *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyChannelAdmin
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, EventChannelFactory_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, EventChannelFactory_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EventChannelFactory_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::EventChannelFactory_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyChannelAdmin::EventChannelFactory_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyChannelAdmin::EventChannelFactory_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::ConnectionAlreadyActive &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::ConnectionAlreadyActive &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::ConnectionAlreadyInactive &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::ConnectionAlreadyInactive &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::NotConnected &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::NotConnected &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CosNotifyChannelAdmin::ProxyType _tao_enumerator);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CosNotifyChannelAdmin::ProxyType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CosNotifyChannelAdmin::ObtainInfoMode _tao_enumerator);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CosNotifyChannelAdmin::ObtainInfoMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::ProxyConsumer_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::ProxyConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::ProxySupplier_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::ProxySupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::ProxyPushConsumer_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::ProxyPushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::StructuredProxyPushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::SequenceProxyPushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::ProxyPushSupplier_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::ProxyPushSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::StructuredProxyPushSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::SequenceProxyPushSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosNotifyChannelAdmin_ProxyIDSeq_H_
#define _TAO_CDR_OP_CosNotifyChannelAdmin_ProxyIDSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosNotifyChannelAdmin::ProxyIDSeq &_tao_sequence);
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosNotifyChannelAdmin::ProxyIDSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosNotifyChannelAdmin_ProxyIDSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CosNotifyChannelAdmin::ClientType _tao_enumerator);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CosNotifyChannelAdmin::ClientType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CosNotifyChannelAdmin::InterFilterGroupOperator _tao_enumerator);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CosNotifyChannelAdmin::InterFilterGroupOperator &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosNotifyChannelAdmin_AdminIDSeq_H_
#define _TAO_CDR_OP_CosNotifyChannelAdmin_AdminIDSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosNotifyChannelAdmin::AdminIDSeq &_tao_sequence);
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosNotifyChannelAdmin::AdminIDSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosNotifyChannelAdmin_AdminIDSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::AdminNotFound &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::AdminNotFound &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::ProxyNotFound &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::ProxyNotFound &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::AdminLimit &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::AdminLimit &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::AdminLimitExceeded &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::AdminLimitExceeded &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::ConsumerAdmin_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::ConsumerAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::SupplierAdmin_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::SupplierAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::EventChannel_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::EventChannel_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosNotifyChannelAdmin_ChannelIDSeq_H_
#define _TAO_CDR_OP_CosNotifyChannelAdmin_ChannelIDSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosNotifyChannelAdmin::ChannelIDSeq &_tao_sequence);
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosNotifyChannelAdmin::ChannelIDSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosNotifyChannelAdmin_ChannelIDSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::ChannelNotFound &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::ChannelNotFound &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyChannelAdmin::EventChannelFactory_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyChannelAdmin::EventChannelFactory_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "CosNotifyChannelAdminC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

