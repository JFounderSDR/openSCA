// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:460

#ifndef _TAO_IDL_RTECEVENTCOMMS_XIZFXR_H_
#define _TAO_IDL_RTECEVENTCOMMS_XIZFXR_H_


#include "RtecEventCommC.h"
#include "TimeBaseS.h"
#include "RtecDefaultEventDataS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Collocation_Proxy_Broker.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

#include /**/ "orbsvcs/Event/event_skel_export.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_RTEvent_Skel_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class SArg_Traits< ::RtecEventComm::EventHeader>
    : public
        Fixed_Size_SArg_Traits_T<
            ::RtecEventComm::EventHeader,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class SArg_Traits< ::RtecEventComm::Event>
    : public
        Var_Size_SArg_Traits_T<
            ::RtecEventComm::Event,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class SArg_Traits< ::RtecEventComm::EventSet>
    : public
        Var_Size_SArg_Traits_T<
            ::RtecEventComm::EventSet,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_RTECEVENTCOMM_PUSHCONSUMER__SARG_TRAITS_)
#define _RTECEVENTCOMM_PUSHCONSUMER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::RtecEventComm::PushConsumer>
    : public
        Object_SArg_Traits_T<
            ::RtecEventComm::PushConsumer_ptr,
            ::RtecEventComm::PushConsumer_var,
            ::RtecEventComm::PushConsumer_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_RTECEVENTCOMM_PUSHSUPPLIER__SARG_TRAITS_)
#define _RTECEVENTCOMM_PUSHSUPPLIER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::RtecEventComm::PushSupplier>
    : public
        Object_SArg_Traits_T<
            ::RtecEventComm::PushSupplier_ptr,
            ::RtecEventComm::PushSupplier_var,
            ::RtecEventComm::PushSupplier_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_sh.cpp:41

namespace POA_RtecEventComm
{
  

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class PushConsumer;
  typedef PushConsumer *PushConsumer_ptr;

  class TAO_RTEvent_Skel_Export PushConsumer
    : public virtual PortableServer::ServantBase
  {
  protected:
    PushConsumer (void);
  
  public:
    /// Useful for template programming.
    typedef ::RtecEventComm::PushConsumer _stub_type;
    typedef ::RtecEventComm::PushConsumer_ptr _stub_ptr_type;
    typedef ::RtecEventComm::PushConsumer_var _stub_var_type;

    PushConsumer (const PushConsumer& rhs);
    virtual ~PushConsumer (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::RtecEventComm::PushConsumer *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void push (
      const ::RtecEventComm::EventSet & data) = 0;

    static void push_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void disconnect_push_consumer (
      void) = 0;

    static void disconnect_push_consumer_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78

  class PushSupplier;
  typedef PushSupplier *PushSupplier_ptr;

  class TAO_RTEvent_Skel_Export PushSupplier
    : public virtual PortableServer::ServantBase
  {
  protected:
    PushSupplier (void);
  
  public:
    /// Useful for template programming.
    typedef ::RtecEventComm::PushSupplier _stub_type;
    typedef ::RtecEventComm::PushSupplier_ptr _stub_ptr_type;
    typedef ::RtecEventComm::PushSupplier_var _stub_var_type;

    PushSupplier (const PushSupplier& rhs);
    virtual ~PushSupplier (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::RtecEventComm::PushSupplier *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41

    virtual void disconnect_push_supplier (
      void) = 0;

    static void disconnect_push_supplier_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
  };

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_sh.cpp:72

} // module RtecEventComm

TAO_END_VERSIONED_NAMESPACE_DECL



#include "RtecEventCommS_T.h"

#if defined (__ACE_INLINE__)
#include "RtecEventCommS.inl"
#endif /* defined INLINE */

#endif /* ifndef */

