// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_COSNOTIFYFILTERC_IZLB0W_H_
#define _TAO_IDL_COSNOTIFYFILTERC_IZLB0W_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/Notify/notify_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/BooleanSeqA.h"
#include "tao/AnyTypeCode/CharSeqA.h"
#include "tao/AnyTypeCode/DoubleSeqA.h"
#include "tao/AnyTypeCode/FloatSeqA.h"
#include "tao/AnyTypeCode/LongDoubleSeqA.h"
#include "tao/AnyTypeCode/LongSeqA.h"
#include "tao/AnyTypeCode/OctetSeqA.h"
#include "tao/AnyTypeCode/ShortSeqA.h"
#include "tao/AnyTypeCode/StringSeqA.h"
#include "tao/AnyTypeCode/ULongSeqA.h"
#include "tao/AnyTypeCode/UShortSeqA.h"
#include "tao/AnyTypeCode/WCharSeqA.h"
#include "tao/AnyTypeCode/WStringSeqA.h"
#include "tao/AnyTypeCode/LongLongSeqA.h"
#include "tao/AnyTypeCode/ULongLongSeqA.h"
#include "tao/AnyTypeCode/PolicyA.h"
#include "tao/AnyTypeCode/Policy_ManagerA.h"
#include "tao/AnyTypeCode/Policy_CurrentA.h"
#include "tao/AnyTypeCode/ServicesA.h"
#include "tao/AnyTypeCode/ParameterModeA.h"
#include "tao/AnyTypeCode/orb_typesA.h"
#include "tao/AnyTypeCode/Typecode_typesA.h"
#include "tao/AnyTypeCode/WrongTransactionA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/AnyTypeCode/Any_Arg_Traits.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/BooleanSeqC.h"
#include "tao/CharSeqC.h"
#include "tao/DoubleSeqC.h"
#include "tao/FloatSeqC.h"
#include "tao/LongDoubleSeqC.h"
#include "tao/LongSeqC.h"
#include "tao/OctetSeqC.h"
#include "tao/ShortSeqC.h"
#include "tao/StringSeqC.h"
#include "tao/ULongSeqC.h"
#include "tao/UShortSeqC.h"
#include "tao/WCharSeqC.h"
#include "tao/WStringSeqC.h"
#include "tao/LongLongSeqC.h"
#include "tao/ULongLongSeqC.h"
#include "tao/PolicyC.h"
#include "tao/Policy_ManagerC.h"
#include "tao/Policy_CurrentC.h"
#include "tao/ServicesC.h"
#include "tao/ParameterModeC.h"
#include "tao/orb_typesC.h"
#include "tao/Typecode_typesC.h"
#include "tao/WrongTransactionC.h"
#include "CosNotifyCommC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Notify_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace CosNotifyFilter
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Long ConstraintID;
  typedef ::CORBA::Long_out ConstraintID_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConstraintID;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct ConstraintExp;

  typedef
    ::TAO_Var_Var_T<
        ConstraintExp
      >
    ConstraintExp_var;
  
  typedef
    ::TAO_Out_T<
        ConstraintExp
      >
    ConstraintExp_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Notify_Export ConstraintExp
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ConstraintExp_var _var_type;
    typedef ConstraintExp_out _out_type;

    static void _tao_any_destructor (void *);
    
    CosNotification::EventTypeSeq event_types;
    ::TAO::String_Manager constraint_expr;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConstraintExp;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSNOTIFYFILTER_CONSTRAINTIDSEQ_CH_)
#define _COSNOTIFYFILTER_CONSTRAINTIDSEQ_CH_

  class ConstraintIDSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        ConstraintIDSeq
      >
    ConstraintIDSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ConstraintIDSeq
      >
    ConstraintIDSeq_out;

  class TAO_Notify_Export ConstraintIDSeq
    : public
        ::TAO::unbounded_value_sequence<
            ConstraintID
          >
  {
  public:
    ConstraintIDSeq (void);
    ConstraintIDSeq ( ::CORBA::ULong max);
    ConstraintIDSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Long* buffer, 
      ::CORBA::Boolean release = false);
    ConstraintIDSeq (const ConstraintIDSeq &);
    virtual ~ConstraintIDSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ConstraintIDSeq_var _var_type;
    typedef ConstraintIDSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConstraintIDSeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSNOTIFYFILTER_CONSTRAINTEXPSEQ_CH_)
#define _COSNOTIFYFILTER_CONSTRAINTEXPSEQ_CH_

  class ConstraintExpSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ConstraintExpSeq
      >
    ConstraintExpSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ConstraintExpSeq
      >
    ConstraintExpSeq_out;

  class TAO_Notify_Export ConstraintExpSeq
    : public
        ::TAO::unbounded_value_sequence<
            ConstraintExp
          >
  {
  public:
    ConstraintExpSeq (void);
    ConstraintExpSeq ( ::CORBA::ULong max);
    ConstraintExpSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ConstraintExp* buffer, 
      ::CORBA::Boolean release = false);
    ConstraintExpSeq (const ConstraintExpSeq &);
    virtual ~ConstraintExpSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ConstraintExpSeq_var _var_type;
    typedef ConstraintExpSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConstraintExpSeq;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct ConstraintInfo;

  typedef
    ::TAO_Var_Var_T<
        ConstraintInfo
      >
    ConstraintInfo_var;
  
  typedef
    ::TAO_Out_T<
        ConstraintInfo
      >
    ConstraintInfo_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Notify_Export ConstraintInfo
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ConstraintInfo_var _var_type;
    typedef ConstraintInfo_out _out_type;

    static void _tao_any_destructor (void *);
    
    CosNotifyFilter::ConstraintExp constraint_expression;
    CosNotifyFilter::ConstraintID constraint_id;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConstraintInfo;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSNOTIFYFILTER_CONSTRAINTINFOSEQ_CH_)
#define _COSNOTIFYFILTER_CONSTRAINTINFOSEQ_CH_

  class ConstraintInfoSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ConstraintInfoSeq
      >
    ConstraintInfoSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ConstraintInfoSeq
      >
    ConstraintInfoSeq_out;

  class TAO_Notify_Export ConstraintInfoSeq
    : public
        ::TAO::unbounded_value_sequence<
            ConstraintInfo
          >
  {
  public:
    ConstraintInfoSeq (void);
    ConstraintInfoSeq ( ::CORBA::ULong max);
    ConstraintInfoSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ConstraintInfo* buffer, 
      ::CORBA::Boolean release = false);
    ConstraintInfoSeq (const ConstraintInfoSeq &);
    virtual ~ConstraintInfoSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ConstraintInfoSeq_var _var_type;
    typedef ConstraintInfoSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConstraintInfoSeq;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct MappingConstraintPair;

  typedef
    ::TAO_Var_Var_T<
        MappingConstraintPair
      >
    MappingConstraintPair_var;
  
  typedef
    ::TAO_Out_T<
        MappingConstraintPair
      >
    MappingConstraintPair_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Notify_Export MappingConstraintPair
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef MappingConstraintPair_var _var_type;
    typedef MappingConstraintPair_out _out_type;

    static void _tao_any_destructor (void *);
    
    CosNotifyFilter::ConstraintExp constraint_expression;
    ::CORBA::Any result_to_set;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_MappingConstraintPair;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSNOTIFYFILTER_MAPPINGCONSTRAINTPAIRSEQ_CH_)
#define _COSNOTIFYFILTER_MAPPINGCONSTRAINTPAIRSEQ_CH_

  class MappingConstraintPairSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        MappingConstraintPairSeq
      >
    MappingConstraintPairSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        MappingConstraintPairSeq
      >
    MappingConstraintPairSeq_out;

  class TAO_Notify_Export MappingConstraintPairSeq
    : public
        ::TAO::unbounded_value_sequence<
            MappingConstraintPair
          >
  {
  public:
    MappingConstraintPairSeq (void);
    MappingConstraintPairSeq ( ::CORBA::ULong max);
    MappingConstraintPairSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      MappingConstraintPair* buffer, 
      ::CORBA::Boolean release = false);
    MappingConstraintPairSeq (const MappingConstraintPairSeq &);
    virtual ~MappingConstraintPairSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef MappingConstraintPairSeq_var _var_type;
    typedef MappingConstraintPairSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_MappingConstraintPairSeq;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct MappingConstraintInfo;

  typedef
    ::TAO_Var_Var_T<
        MappingConstraintInfo
      >
    MappingConstraintInfo_var;
  
  typedef
    ::TAO_Out_T<
        MappingConstraintInfo
      >
    MappingConstraintInfo_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Notify_Export MappingConstraintInfo
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef MappingConstraintInfo_var _var_type;
    typedef MappingConstraintInfo_out _out_type;

    static void _tao_any_destructor (void *);
    
    CosNotifyFilter::ConstraintExp constraint_expression;
    CosNotifyFilter::ConstraintID constraint_id;
    ::CORBA::Any value;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_MappingConstraintInfo;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSNOTIFYFILTER_MAPPINGCONSTRAINTINFOSEQ_CH_)
#define _COSNOTIFYFILTER_MAPPINGCONSTRAINTINFOSEQ_CH_

  class MappingConstraintInfoSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        MappingConstraintInfoSeq
      >
    MappingConstraintInfoSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        MappingConstraintInfoSeq
      >
    MappingConstraintInfoSeq_out;

  class TAO_Notify_Export MappingConstraintInfoSeq
    : public
        ::TAO::unbounded_value_sequence<
            MappingConstraintInfo
          >
  {
  public:
    MappingConstraintInfoSeq (void);
    MappingConstraintInfoSeq ( ::CORBA::ULong max);
    MappingConstraintInfoSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      MappingConstraintInfo* buffer, 
      ::CORBA::Boolean release = false);
    MappingConstraintInfoSeq (const MappingConstraintInfoSeq &);
    virtual ~MappingConstraintInfoSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef MappingConstraintInfoSeq_var _var_type;
    typedef MappingConstraintInfoSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_MappingConstraintInfoSeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Long CallbackID;
  typedef ::CORBA::Long_out CallbackID_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_CallbackID;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSNOTIFYFILTER_CALLBACKIDSEQ_CH_)
#define _COSNOTIFYFILTER_CALLBACKIDSEQ_CH_

  class CallbackIDSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        CallbackIDSeq
      >
    CallbackIDSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        CallbackIDSeq
      >
    CallbackIDSeq_out;

  class TAO_Notify_Export CallbackIDSeq
    : public
        ::TAO::unbounded_value_sequence<
            CallbackID
          >
  {
  public:
    CallbackIDSeq (void);
    CallbackIDSeq ( ::CORBA::ULong max);
    CallbackIDSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Long* buffer, 
      ::CORBA::Boolean release = false);
    CallbackIDSeq (const CallbackIDSeq &);
    virtual ~CallbackIDSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef CallbackIDSeq_var _var_type;
    typedef CallbackIDSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_CallbackIDSeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export UnsupportedFilterableData : public ::CORBA::UserException
  {
  public:
    
    UnsupportedFilterableData (void);
    UnsupportedFilterableData (const UnsupportedFilterableData &);
    ~UnsupportedFilterableData (void);

    UnsupportedFilterableData &operator= (const UnsupportedFilterableData &);

    static void _tao_any_destructor (void *);

    static UnsupportedFilterableData *_downcast ( ::CORBA::Exception *);
    static const UnsupportedFilterableData *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_UnsupportedFilterableData;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export InvalidGrammar : public ::CORBA::UserException
  {
  public:
    
    InvalidGrammar (void);
    InvalidGrammar (const InvalidGrammar &);
    ~InvalidGrammar (void);

    InvalidGrammar &operator= (const InvalidGrammar &);

    static void _tao_any_destructor (void *);

    static InvalidGrammar *_downcast ( ::CORBA::Exception *);
    static const InvalidGrammar *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_InvalidGrammar;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export InvalidConstraint : public ::CORBA::UserException
  {
  public:
    
    CosNotifyFilter::ConstraintExp constr;
    InvalidConstraint (void);
    InvalidConstraint (const InvalidConstraint &);
    ~InvalidConstraint (void);

    InvalidConstraint &operator= (const InvalidConstraint &);

    static void _tao_any_destructor (void *);

    static InvalidConstraint *_downcast ( ::CORBA::Exception *);
    static const InvalidConstraint *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    InvalidConstraint (
        const CosNotifyFilter::ConstraintExp & _tao_constr);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_InvalidConstraint;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export DuplicateConstraintID : public ::CORBA::UserException
  {
  public:
    
    CosNotifyFilter::ConstraintID id;
    DuplicateConstraintID (void);
    DuplicateConstraintID (const DuplicateConstraintID &);
    ~DuplicateConstraintID (void);

    DuplicateConstraintID &operator= (const DuplicateConstraintID &);

    static void _tao_any_destructor (void *);

    static DuplicateConstraintID *_downcast ( ::CORBA::Exception *);
    static const DuplicateConstraintID *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    DuplicateConstraintID (
        CosNotifyFilter::ConstraintID _tao_id);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_DuplicateConstraintID;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export ConstraintNotFound : public ::CORBA::UserException
  {
  public:
    
    CosNotifyFilter::ConstraintID id;
    ConstraintNotFound (void);
    ConstraintNotFound (const ConstraintNotFound &);
    ~ConstraintNotFound (void);

    ConstraintNotFound &operator= (const ConstraintNotFound &);

    static void _tao_any_destructor (void *);

    static ConstraintNotFound *_downcast ( ::CORBA::Exception *);
    static const ConstraintNotFound *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    ConstraintNotFound (
        CosNotifyFilter::ConstraintID _tao_id);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConstraintNotFound;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export CallbackNotFound : public ::CORBA::UserException
  {
  public:
    
    CallbackNotFound (void);
    CallbackNotFound (const CallbackNotFound &);
    ~CallbackNotFound (void);

    CallbackNotFound &operator= (const CallbackNotFound &);

    static void _tao_any_destructor (void *);

    static CallbackNotFound *_downcast ( ::CORBA::Exception *);
    static const CallbackNotFound *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_CallbackNotFound;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export InvalidValue : public ::CORBA::UserException
  {
  public:
    
    CosNotifyFilter::ConstraintExp constr;
    ::CORBA::Any value;
    InvalidValue (void);
    InvalidValue (const InvalidValue &);
    ~InvalidValue (void);

    InvalidValue &operator= (const InvalidValue &);

    static void _tao_any_destructor (void *);

    static InvalidValue *_downcast ( ::CORBA::Exception *);
    static const InvalidValue *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    InvalidValue (
        const CosNotifyFilter::ConstraintExp & _tao_constr,
        const ::CORBA::Any & _tao_value);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_InvalidValue;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYFILTER_FILTER__VAR_OUT_CH_)
#define _COSNOTIFYFILTER_FILTER__VAR_OUT_CH_

  class Filter;
  typedef Filter *Filter_ptr;

  typedef
    TAO_Objref_Var_T<
        Filter
      >
    Filter_var;
  
  typedef
    TAO_Objref_Out_T<
        Filter
      >
    Filter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export Filter
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<Filter>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Filter_ptr _ptr_type;
    typedef Filter_var _var_type;
    typedef Filter_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Filter_ptr _duplicate (Filter_ptr obj);

    static void _tao_release (Filter_ptr obj);

    static Filter_ptr _narrow (::CORBA::Object_ptr obj);
    static Filter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Filter_ptr _nil (void);

    virtual char * constraint_grammar (
      void);

    virtual ::CosNotifyFilter::ConstraintInfoSeq * add_constraints (
      const ::CosNotifyFilter::ConstraintExpSeq & constraint_list);

    virtual void modify_constraints (
      const ::CosNotifyFilter::ConstraintIDSeq & del_list,
      const ::CosNotifyFilter::ConstraintInfoSeq & modify_list);

    virtual ::CosNotifyFilter::ConstraintInfoSeq * get_constraints (
      const ::CosNotifyFilter::ConstraintIDSeq & id_list);

    virtual ::CosNotifyFilter::ConstraintInfoSeq * get_all_constraints (
      void);

    virtual void remove_all_constraints (
      void);

    virtual void destroy (
      void);

    virtual ::CORBA::Boolean match (
      const ::CORBA::Any & filterable_data);

    virtual ::CORBA::Boolean match_structured (
      const ::CosNotification::StructuredEvent & filterable_data);

    virtual ::CORBA::Boolean match_typed (
      const ::CosNotification::PropertySeq & filterable_data);

    virtual ::CosNotifyFilter::CallbackID attach_callback (
      ::CosNotifyComm::NotifySubscribe_ptr callback);

    virtual void detach_callback (
      ::CosNotifyFilter::CallbackID callback);

    virtual ::CosNotifyFilter::CallbackIDSeq * get_callbacks (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_Filter_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    Filter (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyFilter_Filter_setup_collocation (void);

    // Concrete non-local interface only.
    Filter (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Filter (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Filter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Filter (const Filter &);

    void operator= (const Filter &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_Filter;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYFILTER_MAPPINGFILTER__VAR_OUT_CH_)
#define _COSNOTIFYFILTER_MAPPINGFILTER__VAR_OUT_CH_

  class MappingFilter;
  typedef MappingFilter *MappingFilter_ptr;

  typedef
    TAO_Objref_Var_T<
        MappingFilter
      >
    MappingFilter_var;
  
  typedef
    TAO_Objref_Out_T<
        MappingFilter
      >
    MappingFilter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export MappingFilter
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<MappingFilter>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef MappingFilter_ptr _ptr_type;
    typedef MappingFilter_var _var_type;
    typedef MappingFilter_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static MappingFilter_ptr _duplicate (MappingFilter_ptr obj);

    static void _tao_release (MappingFilter_ptr obj);

    static MappingFilter_ptr _narrow (::CORBA::Object_ptr obj);
    static MappingFilter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static MappingFilter_ptr _nil (void);

    virtual char * constraint_grammar (
      void);

    virtual ::CORBA::TypeCode_ptr value_type (
      void);

    virtual ::CORBA::Any * default_value (
      void);

    virtual ::CosNotifyFilter::MappingConstraintInfoSeq * add_mapping_constraints (
      const ::CosNotifyFilter::MappingConstraintPairSeq & pair_list);

    virtual void modify_mapping_constraints (
      const ::CosNotifyFilter::ConstraintIDSeq & del_list,
      const ::CosNotifyFilter::MappingConstraintInfoSeq & modify_list);

    virtual ::CosNotifyFilter::MappingConstraintInfoSeq * get_mapping_constraints (
      const ::CosNotifyFilter::ConstraintIDSeq & id_list);

    virtual ::CosNotifyFilter::MappingConstraintInfoSeq * get_all_mapping_constraints (
      void);

    virtual void remove_all_mapping_constraints (
      void);

    virtual void destroy (
      void);

    virtual ::CORBA::Boolean match (
      const ::CORBA::Any & filterable_data,
      ::CORBA::Any_out result_to_set);

    virtual ::CORBA::Boolean match_structured (
      const ::CosNotification::StructuredEvent & filterable_data,
      ::CORBA::Any_out result_to_set);

    virtual ::CORBA::Boolean match_typed (
      const ::CosNotification::PropertySeq & filterable_data,
      ::CORBA::Any_out result_to_set);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_MappingFilter_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    MappingFilter (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyFilter_MappingFilter_setup_collocation (void);

    // Concrete non-local interface only.
    MappingFilter (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    MappingFilter (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~MappingFilter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    MappingFilter (const MappingFilter &);

    void operator= (const MappingFilter &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_MappingFilter;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYFILTER_FILTERFACTORY__VAR_OUT_CH_)
#define _COSNOTIFYFILTER_FILTERFACTORY__VAR_OUT_CH_

  class FilterFactory;
  typedef FilterFactory *FilterFactory_ptr;

  typedef
    TAO_Objref_Var_T<
        FilterFactory
      >
    FilterFactory_var;
  
  typedef
    TAO_Objref_Out_T<
        FilterFactory
      >
    FilterFactory_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export FilterFactory
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<FilterFactory>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef FilterFactory_ptr _ptr_type;
    typedef FilterFactory_var _var_type;
    typedef FilterFactory_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static FilterFactory_ptr _duplicate (FilterFactory_ptr obj);

    static void _tao_release (FilterFactory_ptr obj);

    static FilterFactory_ptr _narrow (::CORBA::Object_ptr obj);
    static FilterFactory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static FilterFactory_ptr _nil (void);

    virtual ::CosNotifyFilter::Filter_ptr create_filter (
      const char * constraint_grammar);

    virtual ::CosNotifyFilter::MappingFilter_ptr create_mapping_filter (
      const char * constraint_grammar,
      const ::CORBA::Any & default_value);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_FilterFactory_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    FilterFactory (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyFilter_FilterFactory_setup_collocation (void);

    // Concrete non-local interface only.
    FilterFactory (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    FilterFactory (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~FilterFactory (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    FilterFactory (const FilterFactory &);

    void operator= (const FilterFactory &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_FilterFactory;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Long FilterID;
  typedef ::CORBA::Long_out FilterID_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_FilterID;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSNOTIFYFILTER_FILTERIDSEQ_CH_)
#define _COSNOTIFYFILTER_FILTERIDSEQ_CH_

  class FilterIDSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        FilterIDSeq
      >
    FilterIDSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        FilterIDSeq
      >
    FilterIDSeq_out;

  class TAO_Notify_Export FilterIDSeq
    : public
        ::TAO::unbounded_value_sequence<
            FilterID
          >
  {
  public:
    FilterIDSeq (void);
    FilterIDSeq ( ::CORBA::ULong max);
    FilterIDSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Long* buffer, 
      ::CORBA::Boolean release = false);
    FilterIDSeq (const FilterIDSeq &);
    virtual ~FilterIDSeq (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef FilterIDSeq_var _var_type;
    typedef FilterIDSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_FilterIDSeq;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Notify_Export FilterNotFound : public ::CORBA::UserException
  {
  public:
    
    FilterNotFound (void);
    FilterNotFound (const FilterNotFound &);
    ~FilterNotFound (void);

    FilterNotFound &operator= (const FilterNotFound &);

    static void _tao_any_destructor (void *);

    static FilterNotFound *_downcast ( ::CORBA::Exception *);
    static const FilterNotFound *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_FilterNotFound;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSNOTIFYFILTER_FILTERADMIN__VAR_OUT_CH_)
#define _COSNOTIFYFILTER_FILTERADMIN__VAR_OUT_CH_

  class FilterAdmin;
  typedef FilterAdmin *FilterAdmin_ptr;

  typedef
    TAO_Objref_Var_T<
        FilterAdmin
      >
    FilterAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        FilterAdmin
      >
    FilterAdmin_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_Notify_Export FilterAdmin
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<FilterAdmin>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef FilterAdmin_ptr _ptr_type;
    typedef FilterAdmin_var _var_type;
    typedef FilterAdmin_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static FilterAdmin_ptr _duplicate (FilterAdmin_ptr obj);

    static void _tao_release (FilterAdmin_ptr obj);

    static FilterAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static FilterAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static FilterAdmin_ptr _nil (void);

    virtual ::CosNotifyFilter::FilterID add_filter (
      ::CosNotifyFilter::Filter_ptr new_filter);

    virtual void remove_filter (
      ::CosNotifyFilter::FilterID filter);

    virtual ::CosNotifyFilter::Filter_ptr get_filter (
      ::CosNotifyFilter::FilterID filter);

    virtual ::CosNotifyFilter::FilterIDSeq * get_all_filters (
      void);

    virtual void remove_all_filters (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_FilterAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    FilterAdmin (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosNotifyFilter_FilterAdmin_setup_collocation (void);

    // Concrete non-local interface only.
    FilterAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    FilterAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~FilterAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    FilterAdmin (const FilterAdmin &);

    void operator= (const FilterAdmin &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_FilterAdmin;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module CosNotifyFilter

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CosNotifyFilter::ConstraintExp>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::ConstraintExp,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosNotifyFilter::ConstraintIDSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::ConstraintIDSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosNotifyFilter::ConstraintExpSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::ConstraintExpSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CosNotifyFilter::ConstraintInfo>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::ConstraintInfo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosNotifyFilter::ConstraintInfoSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::ConstraintInfoSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CosNotifyFilter::MappingConstraintPair>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::MappingConstraintPair,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosNotifyFilter::MappingConstraintPairSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::MappingConstraintPairSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CosNotifyFilter::MappingConstraintInfo>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::MappingConstraintInfo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosNotifyFilter::MappingConstraintInfoSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::MappingConstraintInfoSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosNotifyFilter::CallbackIDSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::CallbackIDSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYFILTER_FILTER__ARG_TRAITS_)
#define _COSNOTIFYFILTER_FILTER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyFilter::Filter>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyFilter::Filter_ptr,
            ::CosNotifyFilter::Filter_var,
            ::CosNotifyFilter::Filter_out,
            TAO::Objref_Traits<CosNotifyFilter::Filter>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYFILTER_MAPPINGFILTER__ARG_TRAITS_)
#define _COSNOTIFYFILTER_MAPPINGFILTER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyFilter::MappingFilter>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyFilter::MappingFilter_ptr,
            ::CosNotifyFilter::MappingFilter_var,
            ::CosNotifyFilter::MappingFilter_out,
            TAO::Objref_Traits<CosNotifyFilter::MappingFilter>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYFILTER_FILTERFACTORY__ARG_TRAITS_)
#define _COSNOTIFYFILTER_FILTERFACTORY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyFilter::FilterFactory>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyFilter::FilterFactory_ptr,
            ::CosNotifyFilter::FilterFactory_var,
            ::CosNotifyFilter::FilterFactory_out,
            TAO::Objref_Traits<CosNotifyFilter::FilterFactory>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosNotifyFilter::FilterIDSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CosNotifyFilter::FilterIDSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSNOTIFYFILTER_FILTERADMIN__ARG_TRAITS_)
#define _COSNOTIFYFILTER_FILTERADMIN__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosNotifyFilter::FilterAdmin>
    : public
        Object_Arg_Traits_T<
            ::CosNotifyFilter::FilterAdmin_ptr,
            ::CosNotifyFilter::FilterAdmin_var,
            ::CosNotifyFilter::FilterAdmin_out,
            TAO::Objref_Traits<CosNotifyFilter::FilterAdmin>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyFilter__TAO_Filter_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyFilter__TAO_MappingFilter_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyFilter__TAO_FilterFactory_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*CosNotifyFilter__TAO_FilterAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_COSNOTIFYFILTER_FILTER__TRAITS_)
#define _COSNOTIFYFILTER_FILTER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyFilter::Filter>
  {
    static ::CosNotifyFilter::Filter_ptr duplicate (
        ::CosNotifyFilter::Filter_ptr p);
    static void release (
        ::CosNotifyFilter::Filter_ptr p);
    static ::CosNotifyFilter::Filter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyFilter::Filter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYFILTER_MAPPINGFILTER__TRAITS_)
#define _COSNOTIFYFILTER_MAPPINGFILTER__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyFilter::MappingFilter>
  {
    static ::CosNotifyFilter::MappingFilter_ptr duplicate (
        ::CosNotifyFilter::MappingFilter_ptr p);
    static void release (
        ::CosNotifyFilter::MappingFilter_ptr p);
    static ::CosNotifyFilter::MappingFilter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyFilter::MappingFilter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYFILTER_FILTERFACTORY__TRAITS_)
#define _COSNOTIFYFILTER_FILTERFACTORY__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyFilter::FilterFactory>
  {
    static ::CosNotifyFilter::FilterFactory_ptr duplicate (
        ::CosNotifyFilter::FilterFactory_ptr p);
    static void release (
        ::CosNotifyFilter::FilterFactory_ptr p);
    static ::CosNotifyFilter::FilterFactory_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyFilter::FilterFactory_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSNOTIFYFILTER_FILTERADMIN__TRAITS_)
#define _COSNOTIFYFILTER_FILTERADMIN__TRAITS_

  template<>
  struct TAO_Notify_Export Objref_Traits< ::CosNotifyFilter::FilterAdmin>
  {
    static ::CosNotifyFilter::FilterAdmin_ptr duplicate (
        ::CosNotifyFilter::FilterAdmin_ptr p);
    static void release (
        ::CosNotifyFilter::FilterAdmin_ptr p);
    static ::CosNotifyFilter::FilterAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosNotifyFilter::FilterAdmin_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::ConstraintExp &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::ConstraintExp*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::ConstraintExp *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::ConstraintExp *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::ConstraintExp &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::ConstraintExp*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::ConstraintExp *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::ConstraintExp *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const ::CosNotifyFilter::ConstraintIDSeq &); // copying version
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ::CosNotifyFilter::ConstraintIDSeq*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::ConstraintIDSeq *&); // deprecated
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::ConstraintIDSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const CosNotifyFilter::ConstraintIDSeq &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, CosNotifyFilter::ConstraintIDSeq*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::ConstraintIDSeq *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::ConstraintIDSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const ::CosNotifyFilter::ConstraintExpSeq &); // copying version
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ::CosNotifyFilter::ConstraintExpSeq*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::ConstraintExpSeq *&); // deprecated
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::ConstraintExpSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const CosNotifyFilter::ConstraintExpSeq &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, CosNotifyFilter::ConstraintExpSeq*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::ConstraintExpSeq *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::ConstraintExpSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::ConstraintInfo &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::ConstraintInfo*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::ConstraintInfo *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::ConstraintInfo *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::ConstraintInfo &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::ConstraintInfo*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::ConstraintInfo *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::ConstraintInfo *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const ::CosNotifyFilter::ConstraintInfoSeq &); // copying version
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ::CosNotifyFilter::ConstraintInfoSeq*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::ConstraintInfoSeq *&); // deprecated
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::ConstraintInfoSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const CosNotifyFilter::ConstraintInfoSeq &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, CosNotifyFilter::ConstraintInfoSeq*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::ConstraintInfoSeq *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::ConstraintInfoSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::MappingConstraintPair &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::MappingConstraintPair*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::MappingConstraintPair *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::MappingConstraintPair *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::MappingConstraintPair &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::MappingConstraintPair*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::MappingConstraintPair *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::MappingConstraintPair *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const ::CosNotifyFilter::MappingConstraintPairSeq &); // copying version
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ::CosNotifyFilter::MappingConstraintPairSeq*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::MappingConstraintPairSeq *&); // deprecated
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::MappingConstraintPairSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const CosNotifyFilter::MappingConstraintPairSeq &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, CosNotifyFilter::MappingConstraintPairSeq*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::MappingConstraintPairSeq *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::MappingConstraintPairSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::MappingConstraintInfo &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::MappingConstraintInfo*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::MappingConstraintInfo *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::MappingConstraintInfo *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::MappingConstraintInfo &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::MappingConstraintInfo*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::MappingConstraintInfo *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::MappingConstraintInfo *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const ::CosNotifyFilter::MappingConstraintInfoSeq &); // copying version
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ::CosNotifyFilter::MappingConstraintInfoSeq*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::MappingConstraintInfoSeq *&); // deprecated
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::MappingConstraintInfoSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const CosNotifyFilter::MappingConstraintInfoSeq &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, CosNotifyFilter::MappingConstraintInfoSeq*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::MappingConstraintInfoSeq *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::MappingConstraintInfoSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const ::CosNotifyFilter::CallbackIDSeq &); // copying version
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ::CosNotifyFilter::CallbackIDSeq*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::CallbackIDSeq *&); // deprecated
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::CallbackIDSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const CosNotifyFilter::CallbackIDSeq &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, CosNotifyFilter::CallbackIDSeq*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::CallbackIDSeq *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::CallbackIDSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::UnsupportedFilterableData &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::UnsupportedFilterableData*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::UnsupportedFilterableData *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::UnsupportedFilterableData *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::UnsupportedFilterableData &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::UnsupportedFilterableData*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::UnsupportedFilterableData *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::UnsupportedFilterableData *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::InvalidGrammar &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::InvalidGrammar*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::InvalidGrammar *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::InvalidGrammar *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::InvalidGrammar &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::InvalidGrammar*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::InvalidGrammar *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::InvalidGrammar *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::InvalidConstraint &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::InvalidConstraint*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::InvalidConstraint *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::InvalidConstraint *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::InvalidConstraint &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::InvalidConstraint*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::InvalidConstraint *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::InvalidConstraint *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::DuplicateConstraintID &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::DuplicateConstraintID*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::DuplicateConstraintID *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::DuplicateConstraintID *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::DuplicateConstraintID &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::DuplicateConstraintID*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::DuplicateConstraintID *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::DuplicateConstraintID *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::ConstraintNotFound &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::ConstraintNotFound*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::ConstraintNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::ConstraintNotFound *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::ConstraintNotFound &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::ConstraintNotFound*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::ConstraintNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::ConstraintNotFound *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::CallbackNotFound &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::CallbackNotFound*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::CallbackNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::CallbackNotFound *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::CallbackNotFound &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::CallbackNotFound*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::CallbackNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::CallbackNotFound *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::InvalidValue &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::InvalidValue*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::InvalidValue *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::InvalidValue *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::InvalidValue &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::InvalidValue*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::InvalidValue *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::InvalidValue *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, Filter_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, Filter_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Filter_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::Filter_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::Filter_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::Filter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, MappingFilter_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, MappingFilter_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, MappingFilter_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::MappingFilter_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::MappingFilter_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::MappingFilter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, FilterFactory_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, FilterFactory_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FilterFactory_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::FilterFactory_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::FilterFactory_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::FilterFactory_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const ::CosNotifyFilter::FilterIDSeq &); // copying version
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ::CosNotifyFilter::FilterIDSeq*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::FilterIDSeq *&); // deprecated
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::FilterIDSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const CosNotifyFilter::FilterIDSeq &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, CosNotifyFilter::FilterIDSeq*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::FilterIDSeq *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::FilterIDSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  

  TAO_Notify_Export void operator<<= (::CORBA::Any &, const ::CosNotifyFilter::FilterNotFound &); // copying version
  TAO_Notify_Export void operator<<= (::CORBA::Any &, ::CosNotifyFilter::FilterNotFound*); // noncopying version
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosNotifyFilter::FilterNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosNotifyFilter::FilterNotFound *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, const CosNotifyFilter::FilterNotFound &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::FilterNotFound*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::FilterNotFound *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosNotifyFilter::FilterNotFound *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosNotifyFilter
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, FilterAdmin_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, FilterAdmin_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FilterAdmin_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::FilterAdmin_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, CosNotifyFilter::FilterAdmin_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosNotifyFilter::FilterAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::ConstraintExp &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::ConstraintExp &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosNotifyFilter_ConstraintIDSeq_H_
#define _TAO_CDR_OP_CosNotifyFilter_ConstraintIDSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosNotifyFilter::ConstraintIDSeq &_tao_sequence);
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosNotifyFilter::ConstraintIDSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosNotifyFilter_ConstraintIDSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosNotifyFilter_ConstraintExpSeq_H_
#define _TAO_CDR_OP_CosNotifyFilter_ConstraintExpSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosNotifyFilter::ConstraintExpSeq &_tao_sequence);
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosNotifyFilter::ConstraintExpSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosNotifyFilter_ConstraintExpSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::ConstraintInfo &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::ConstraintInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosNotifyFilter_ConstraintInfoSeq_H_
#define _TAO_CDR_OP_CosNotifyFilter_ConstraintInfoSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosNotifyFilter::ConstraintInfoSeq &_tao_sequence);
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosNotifyFilter::ConstraintInfoSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosNotifyFilter_ConstraintInfoSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::MappingConstraintPair &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::MappingConstraintPair &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosNotifyFilter_MappingConstraintPairSeq_H_
#define _TAO_CDR_OP_CosNotifyFilter_MappingConstraintPairSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosNotifyFilter::MappingConstraintPairSeq &_tao_sequence);
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosNotifyFilter::MappingConstraintPairSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosNotifyFilter_MappingConstraintPairSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::MappingConstraintInfo &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::MappingConstraintInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosNotifyFilter_MappingConstraintInfoSeq_H_
#define _TAO_CDR_OP_CosNotifyFilter_MappingConstraintInfoSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosNotifyFilter::MappingConstraintInfoSeq &_tao_sequence);
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosNotifyFilter::MappingConstraintInfoSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosNotifyFilter_MappingConstraintInfoSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosNotifyFilter_CallbackIDSeq_H_
#define _TAO_CDR_OP_CosNotifyFilter_CallbackIDSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosNotifyFilter::CallbackIDSeq &_tao_sequence);
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosNotifyFilter::CallbackIDSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosNotifyFilter_CallbackIDSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::UnsupportedFilterableData &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::UnsupportedFilterableData &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::InvalidGrammar &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::InvalidGrammar &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::InvalidConstraint &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::InvalidConstraint &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::DuplicateConstraintID &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::DuplicateConstraintID &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::ConstraintNotFound &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::ConstraintNotFound &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::CallbackNotFound &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::CallbackNotFound &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::InvalidValue &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::InvalidValue &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::Filter_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::Filter_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::MappingFilter_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::MappingFilter_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::FilterFactory_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::FilterFactory_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosNotifyFilter_FilterIDSeq_H_
#define _TAO_CDR_OP_CosNotifyFilter_FilterIDSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosNotifyFilter::FilterIDSeq &_tao_sequence);
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosNotifyFilter::FilterIDSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosNotifyFilter_FilterIDSeq_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::FilterNotFound &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::FilterNotFound &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosNotifyFilter::FilterAdmin_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosNotifyFilter::FilterAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "CosNotifyFilterC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

