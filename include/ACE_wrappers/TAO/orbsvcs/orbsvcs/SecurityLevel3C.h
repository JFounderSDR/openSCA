// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_SECURITYLEVEL3C_ZJ5CDU_H_
#define _TAO_IDL_SECURITYLEVEL3C_ZJ5CDU_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/Security/security_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/PolicyA.h"
#include "tao/AnyTypeCode/TimeBaseA.h"
#include "tao/AnyTypeCode/StringSeqA.h"
#include "tao/AnyTypeCode/WStringSeqA.h"
#include "tao/Valuetype/Sequence_T.h"
#include "tao/Sequence_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/PolicyC.h"
#include "tao/TimeBaseC.h"
#include "tao/StringSeqC.h"
#include "tao/WStringSeqC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Security_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace SecurityLevel3
{

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong ADIRON_VMCID = 168935424U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef char * NameType;
  typedef ::CORBA::String_var NameType_var;
  typedef ::CORBA::String_out NameType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_NameType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef ::CORBA::WChar * NameComponent;
  typedef ::CORBA::WString_var NameComponent_var;
  typedef ::CORBA::WString_out NameComponent_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_NameComponent;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_NAMEPATH_CH_)
#define _SECURITYLEVEL3_NAMEPATH_CH_

  class NamePath;

  typedef
    ::TAO_VarSeq_Var_T<
        NamePath
      >
    NamePath_var;

  typedef
    ::TAO_Seq_Out_T<
        NamePath
      >
    NamePath_out;

  class TAO_Security_Export NamePath
    : public
        ::TAO::unbounded_basic_string_sequence<CORBA::WChar>
  {
  public:
    NamePath (void);
    NamePath ( ::CORBA::ULong max);
    NamePath (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::WChar ** buffer, 
      ::CORBA::Boolean release = false);
    NamePath (const NamePath &);
    virtual ~NamePath (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef NamePath_var _var_type;
    typedef NamePath_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_NamePath;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef NamePath NameValue;
  typedef NamePath_var NameValue_var;
  typedef NamePath_out NameValue_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_NameValue;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct PrincipalName;

  typedef
    ::TAO_Var_Var_T<
        PrincipalName
      >
    PrincipalName_var;
  
  typedef
    ::TAO_Out_T<
        PrincipalName
      >
    PrincipalName_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export PrincipalName
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef PrincipalName_var _var_type;
    typedef PrincipalName_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager the_type;
    SecurityLevel3::NameValue the_name;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_PrincipalName;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_PRINCIPALNAMELIST_CH_)
#define _SECURITYLEVEL3_PRINCIPALNAMELIST_CH_

  class PrincipalNameList;

  typedef
    ::TAO_VarSeq_Var_T<
        PrincipalNameList
      >
    PrincipalNameList_var;

  typedef
    ::TAO_Seq_Out_T<
        PrincipalNameList
      >
    PrincipalNameList_out;

  class TAO_Security_Export PrincipalNameList
    : public
        ::TAO::unbounded_value_sequence<
            PrincipalName
          >
  {
  public:
    PrincipalNameList (void);
    PrincipalNameList ( ::CORBA::ULong max);
    PrincipalNameList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      PrincipalName* buffer, 
      ::CORBA::Boolean release = false);
    PrincipalNameList (const PrincipalNameList &);
    virtual ~PrincipalNameList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef PrincipalNameList_var _var_type;
    typedef PrincipalNameList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_PrincipalNameList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef char * PrinAttributeType;
  typedef ::CORBA::String_var PrinAttributeType_var;
  typedef ::CORBA::String_out PrinAttributeType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_PrinAttributeType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef ::CORBA::WChar * PrinAttributeValue;
  typedef ::CORBA::WString_var PrinAttributeValue_var;
  typedef ::CORBA::WString_out PrinAttributeValue_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_PrinAttributeValue;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct PrinAttribute;

  typedef
    ::TAO_Var_Var_T<
        PrinAttribute
      >
    PrinAttribute_var;
  
  typedef
    ::TAO_Out_T<
        PrinAttribute
      >
    PrinAttribute_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export PrinAttribute
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef PrinAttribute_var _var_type;
    typedef PrinAttribute_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager the_type;
    ::TAO::WString_Manager the_value;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_PrinAttribute;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_PRINATTRIBUTELIST_CH_)
#define _SECURITYLEVEL3_PRINATTRIBUTELIST_CH_

  class PrinAttributeList;

  typedef
    ::TAO_VarSeq_Var_T<
        PrinAttributeList
      >
    PrinAttributeList_var;

  typedef
    ::TAO_Seq_Out_T<
        PrinAttributeList
      >
    PrinAttributeList_out;

  class TAO_Security_Export PrinAttributeList
    : public
        ::TAO::unbounded_value_sequence<
            PrinAttribute
          >
  {
  public:
    PrinAttributeList (void);
    PrinAttributeList ( ::CORBA::ULong max);
    PrinAttributeList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      PrinAttribute* buffer, 
      ::CORBA::Boolean release = false);
    PrinAttributeList (const PrinAttributeList &);
    virtual ~PrinAttributeList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef PrinAttributeList_var _var_type;
    typedef PrinAttributeList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_PrinAttributeList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_RESOURCENAMECOMPONENTS_CH_)
#define _SECURITYLEVEL3_RESOURCENAMECOMPONENTS_CH_

  class ResourceNameComponents;

  typedef
    ::TAO_VarSeq_Var_T<
        ResourceNameComponents
      >
    ResourceNameComponents_var;

  typedef
    ::TAO_Seq_Out_T<
        ResourceNameComponents
      >
    ResourceNameComponents_out;

  class TAO_Security_Export ResourceNameComponents
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    ResourceNameComponents (void);
    ResourceNameComponents ( ::CORBA::ULong max);
    ResourceNameComponents (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer, 
      ::CORBA::Boolean release = false);
    ResourceNameComponents (const ResourceNameComponents &);
    virtual ~ResourceNameComponents (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ResourceNameComponents_var _var_type;
    typedef ResourceNameComponents_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ResourceNameComponents;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct ResourceName;

  typedef
    ::TAO_Var_Var_T<
        ResourceName
      >
    ResourceName_var;
  
  typedef
    ::TAO_Out_T<
        ResourceName
      >
    ResourceName_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export ResourceName
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ResourceName_var _var_type;
    typedef ResourceName_out _out_type;

    static void _tao_any_destructor (void *);
    
    SecurityLevel3::ResourceNameComponents components;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ResourceName;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_RESOURCENAMELIST_CH_)
#define _SECURITYLEVEL3_RESOURCENAMELIST_CH_

  class ResourceNameList;

  typedef
    ::TAO_VarSeq_Var_T<
        ResourceNameList
      >
    ResourceNameList_var;

  typedef
    ::TAO_Seq_Out_T<
        ResourceNameList
      >
    ResourceNameList_out;

  class TAO_Security_Export ResourceNameList
    : public
        ::TAO::unbounded_value_sequence<
            ResourceName
          >
  {
  public:
    ResourceNameList (void);
    ResourceNameList ( ::CORBA::ULong max);
    ResourceNameList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ResourceName* buffer, 
      ::CORBA::Boolean release = false);
    ResourceNameList (const ResourceNameList &);
    virtual ~ResourceNameList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ResourceNameList_var _var_type;
    typedef ResourceNameList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ResourceNameList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const char *const NT_KerberosName = "oid:1.2.840.113554.1.2.2.1";

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const char *const NT_X509DirectoryNamePath = "SL3:X509DirectoryPathName";

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const char *const NT_Anonymous = "SL3:anonymous";

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const char *const NT_StringName = "oid:2.23.130.1.2.1";

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct ScopedPrivileges;

  typedef
    ::TAO_Var_Var_T<
        ScopedPrivileges
      >
    ScopedPrivileges_var;
  
  typedef
    ::TAO_Out_T<
        ScopedPrivileges
      >
    ScopedPrivileges_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export ScopedPrivileges
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ScopedPrivileges_var _var_type;
    typedef ScopedPrivileges_out _out_type;

    static void _tao_any_destructor (void *);
    
    SecurityLevel3::PrincipalName privilege_authority;
    SecurityLevel3::PrinAttributeList privileges;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ScopedPrivileges;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_SCOPEDPRIVILEGESLIST_CH_)
#define _SECURITYLEVEL3_SCOPEDPRIVILEGESLIST_CH_

  class ScopedPrivilegesList;

  typedef
    ::TAO_VarSeq_Var_T<
        ScopedPrivilegesList
      >
    ScopedPrivilegesList_var;

  typedef
    ::TAO_Seq_Out_T<
        ScopedPrivilegesList
      >
    ScopedPrivilegesList_out;

  class TAO_Security_Export ScopedPrivilegesList
    : public
        ::TAO::unbounded_value_sequence<
            ScopedPrivileges
          >
  {
  public:
    ScopedPrivilegesList (void);
    ScopedPrivilegesList ( ::CORBA::ULong max);
    ScopedPrivilegesList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ScopedPrivileges* buffer, 
      ::CORBA::Boolean release = false);
    ScopedPrivilegesList (const ScopedPrivilegesList &);
    virtual ~ScopedPrivilegesList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ScopedPrivilegesList_var _var_type;
    typedef ScopedPrivilegesList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ScopedPrivilegesList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::ULong PrincipalType;
  typedef ::CORBA::ULong_out PrincipalType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_PrincipalType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong PT_Simple = 0U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong PT_Quoting = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong PT_Proxy = 2U;

  // TAO_IDL - Generated from
  // .\be\be_valuetype.cpp:560

  

#if !defined (_SECURITYLEVEL3_PRINCIPAL__VAR_OUT_CH_)
#define _SECURITYLEVEL3_PRINCIPAL__VAR_OUT_CH_

  class Principal;
  typedef
    TAO_Value_Var_T<
        Principal
      >
    Principal_var;
  
  typedef
    TAO_Value_Out_T<
        Principal
      >
    Principal_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:51

  class TAO_Security_Export Principal
    : public virtual ::CORBA::ValueBase
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Principal * _ptr_type;
    typedef Principal_var _var_type;
    typedef Principal_out _out_type;

    static void _tao_any_destructor (void *);

    static Principal* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        Principal *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:459

    virtual void the_type (const ::SecurityLevel3::PrincipalType) = 0;
    virtual ::SecurityLevel3::PrincipalType the_type (void) const = 0;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:674

    virtual void the_name (const SecurityLevel3::PrincipalName &) = 0;
    virtual const SecurityLevel3::PrincipalName &the_name (void) const = 0;
    virtual SecurityLevel3::PrincipalName &the_name (void) = 0;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:533

    virtual void environmental_attributes (const SecurityLevel3::PrinAttributeList &) = 0;
    virtual const SecurityLevel3::PrinAttributeList &environmental_attributes (void) const = 0;
    virtual SecurityLevel3::PrinAttributeList &environmental_attributes (void) = 0;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:533

    virtual void with_privileges (const SecurityLevel3::ScopedPrivilegesList &) = 0;
    virtual const SecurityLevel3::ScopedPrivilegesList &with_privileges (void) const = 0;
    virtual SecurityLevel3::ScopedPrivilegesList &with_privileges (void) = 0;

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    Principal (void);
    virtual ~Principal (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    Principal (const Principal &);
    void operator= (const Principal &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__SecurityLevel3_Principal (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__SecurityLevel3_Principal (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_init_ch.cpp:59

  class TAO_Security_Export Principal_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    Principal_init (void);

    static Principal_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~Principal_init (void);
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_Principal;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_PRINCIPALLIST_CH_)
#define _SECURITYLEVEL3_PRINCIPALLIST_CH_

  class PrincipalList;

  typedef
    ::TAO_VarSeq_Var_T<
        PrincipalList
      >
    PrincipalList_var;

  typedef
    ::TAO_Seq_Out_T<
        PrincipalList
      >
    PrincipalList_out;

  class TAO_Security_Export PrincipalList
    : public
        ::TAO::unbounded_valuetype_sequence<
            Principal,
            Principal_var
          >
  {
  public:
    PrincipalList (void);
    PrincipalList ( ::CORBA::ULong max);
    PrincipalList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Principal ** buffer, 
      ::CORBA::Boolean release = false);
    PrincipalList (const PrincipalList &);
    virtual ~PrincipalList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef PrincipalList_var _var_type;
    typedef PrincipalList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_PrincipalList;

  // TAO_IDL - Generated from
  // .\be\be_valuetype.cpp:560

  

#if !defined (_SECURITYLEVEL3_SIMPLEPRINCIPAL__VAR_OUT_CH_)
#define _SECURITYLEVEL3_SIMPLEPRINCIPAL__VAR_OUT_CH_

  class SimplePrincipal;
  typedef
    TAO_Value_Var_T<
        SimplePrincipal
      >
    SimplePrincipal_var;
  
  typedef
    TAO_Value_Out_T<
        SimplePrincipal
      >
    SimplePrincipal_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:51

  class TAO_Security_Export SimplePrincipal
    : public virtual Principal
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SimplePrincipal * _ptr_type;
    typedef SimplePrincipal_var _var_type;
    typedef SimplePrincipal_out _out_type;

    static void _tao_any_destructor (void *);

    static SimplePrincipal* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        SimplePrincipal *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:459

    virtual void authenticated (const ::CORBA::Boolean) = 0;
    virtual ::CORBA::Boolean authenticated (void) const = 0;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:533

    virtual void alternate_names (const SecurityLevel3::PrincipalNameList &) = 0;
    virtual const SecurityLevel3::PrincipalNameList &alternate_names (void) const = 0;
    virtual SecurityLevel3::PrincipalNameList &alternate_names (void) = 0;

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    SimplePrincipal (void);
    virtual ~SimplePrincipal (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    SimplePrincipal (const SimplePrincipal &);
    void operator= (const SimplePrincipal &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__SecurityLevel3_SimplePrincipal (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__SecurityLevel3_SimplePrincipal (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_init_ch.cpp:59

  class TAO_Security_Export SimplePrincipal_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    SimplePrincipal_init (void);

    static SimplePrincipal_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~SimplePrincipal_init (void);
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SimplePrincipal;

  // TAO_IDL - Generated from
  // .\be\be_valuetype.cpp:560

  

#if !defined (_SECURITYLEVEL3_PROXYPRINCIPAL__VAR_OUT_CH_)
#define _SECURITYLEVEL3_PROXYPRINCIPAL__VAR_OUT_CH_

  class ProxyPrincipal;
  typedef
    TAO_Value_Var_T<
        ProxyPrincipal
      >
    ProxyPrincipal_var;
  
  typedef
    TAO_Value_Out_T<
        ProxyPrincipal
      >
    ProxyPrincipal_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:51

  class TAO_Security_Export ProxyPrincipal
    : public virtual Principal
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ProxyPrincipal * _ptr_type;
    typedef ProxyPrincipal_var _var_type;
    typedef ProxyPrincipal_out _out_type;

    static void _tao_any_destructor (void *);

    static ProxyPrincipal* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        ProxyPrincipal *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:361

    virtual void speaking (SecurityLevel3::Principal *) = 0;
    virtual SecurityLevel3::Principal *speaking (void) const = 0;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:361

    virtual void speaks_for (SecurityLevel3::Principal *) = 0;
    virtual SecurityLevel3::Principal *speaks_for (void) const = 0;

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    ProxyPrincipal (void);
    virtual ~ProxyPrincipal (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    ProxyPrincipal (const ProxyPrincipal &);
    void operator= (const ProxyPrincipal &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__SecurityLevel3_ProxyPrincipal (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__SecurityLevel3_ProxyPrincipal (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_init_ch.cpp:59

  class TAO_Security_Export ProxyPrincipal_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    ProxyPrincipal_init (void);

    static ProxyPrincipal_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~ProxyPrincipal_init (void);
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ProxyPrincipal;

  // TAO_IDL - Generated from
  // .\be\be_valuetype.cpp:560

  

#if !defined (_SECURITYLEVEL3_QUOTINGPRINCIPAL__VAR_OUT_CH_)
#define _SECURITYLEVEL3_QUOTINGPRINCIPAL__VAR_OUT_CH_

  class QuotingPrincipal;
  typedef
    TAO_Value_Var_T<
        QuotingPrincipal
      >
    QuotingPrincipal_var;
  
  typedef
    TAO_Value_Out_T<
        QuotingPrincipal
      >
    QuotingPrincipal_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:51

  class TAO_Security_Export QuotingPrincipal
    : public virtual Principal
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef QuotingPrincipal * _ptr_type;
    typedef QuotingPrincipal_var _var_type;
    typedef QuotingPrincipal_out _out_type;

    static void _tao_any_destructor (void *);

    static QuotingPrincipal* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        QuotingPrincipal *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:361

    virtual void speaking (SecurityLevel3::Principal *) = 0;
    virtual SecurityLevel3::Principal *speaking (void) const = 0;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:361

    virtual void quotes_for (SecurityLevel3::Principal *) = 0;
    virtual SecurityLevel3::Principal *quotes_for (void) const = 0;

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    QuotingPrincipal (void);
    virtual ~QuotingPrincipal (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    QuotingPrincipal (const QuotingPrincipal &);
    void operator= (const QuotingPrincipal &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__SecurityLevel3_QuotingPrincipal (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__SecurityLevel3_QuotingPrincipal (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_init_ch.cpp:59

  class TAO_Security_Export QuotingPrincipal_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    QuotingPrincipal_init (void);

    static QuotingPrincipal_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~QuotingPrincipal_init (void);
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_QuotingPrincipal;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::ULong StatementType;
  typedef ::CORBA::ULong_out StatementType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_StatementType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong ST_IdentityStatement = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong ST_EndorsementStatement = 2U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_ENCODING_CH_)
#define _SECURITYLEVEL3_ENCODING_CH_

  class Encoding;

  typedef
    ::TAO_FixedSeq_Var_T<
        Encoding
      >
    Encoding_var;

  typedef
    ::TAO_Seq_Out_T<
        Encoding
      >
    Encoding_out;

  class TAO_Security_Export Encoding
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Octet
          >
  {
  public:
    Encoding (void);
    Encoding ( ::CORBA::ULong max);
    Encoding (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Octet* buffer, 
      ::CORBA::Boolean release = false);
    Encoding (const Encoding &);
    virtual ~Encoding (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Encoding_var _var_type;
    typedef Encoding_out _out_type;

    static void _tao_any_destructor (void *);

    

#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    Encoding (
        ::CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_Encoding;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef char * EncodingType;
  typedef ::CORBA::String_var EncodingType_var;
  typedef ::CORBA::String_out EncodingType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_EncodingType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const char *const ET_NoEncoding = "NoEncoding";

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const char *const ET_Unknown = "Unknown";

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Security_Export BadEncoding : public ::CORBA::UserException
  {
  public:
    
    BadEncoding (void);
    BadEncoding (const BadEncoding &);
    ~BadEncoding (void);

    BadEncoding &operator= (const BadEncoding &);

    static void _tao_any_destructor (void *);

    static BadEncoding *_downcast ( ::CORBA::Exception *);
    static const BadEncoding *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_BadEncoding;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_Security_Export BadEncodingType : public ::CORBA::UserException
  {
  public:
    
    BadEncodingType (void);
    BadEncodingType (const BadEncodingType &);
    ~BadEncodingType (void);

    BadEncodingType &operator= (const BadEncodingType &);

    static void _tao_any_destructor (void *);

    static BadEncodingType *_downcast ( ::CORBA::Exception *);
    static const BadEncodingType *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_BadEncodingType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::ULong StatementLayer;
  typedef ::CORBA::ULong_out StatementLayer_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_StatementLayer;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SL_Unknown = 0U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SL_Transport = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SL_CSIAuthorization = 2U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SL_CSIClientAuth = 3U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SL_CSIIdentity = 4U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SL_UserDefined = 5U;

  // TAO_IDL - Generated from
  // .\be\be_valuetype.cpp:560

  

#if !defined (_SECURITYLEVEL3_STATEMENT__VAR_OUT_CH_)
#define _SECURITYLEVEL3_STATEMENT__VAR_OUT_CH_

  class Statement;
  typedef
    TAO_Value_Var_T<
        Statement
      >
    Statement_var;
  
  typedef
    TAO_Value_Out_T<
        Statement
      >
    Statement_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:51

  class TAO_Security_Export Statement
    : public virtual ::CORBA::ValueBase
  {
  public:

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Statement * _ptr_type;
    typedef Statement_var _var_type;
    typedef Statement_out _out_type;

    static void _tao_any_destructor (void *);

    static Statement* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        Statement *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:459

    virtual void the_layer (const ::SecurityLevel3::StatementLayer) = 0;
    virtual ::SecurityLevel3::StatementLayer the_layer (void) const = 0;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:459

    virtual void the_type (const ::SecurityLevel3::StatementType) = 0;
    virtual ::SecurityLevel3::StatementType the_type (void) const = 0;
  
  protected:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:608

    virtual void encoding_type (char *val) = 0;
    virtual void encoding_type (const char *val) = 0;
    virtual void encoding_type (const ::CORBA::String_var &val) = 0;
    virtual const char *encoding_type (void) const = 0;
  
  protected:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:533

    virtual void the_encoding (const SecurityLevel3::Encoding &) = 0;
    virtual const SecurityLevel3::Encoding &the_encoding (void) const = 0;
    virtual SecurityLevel3::Encoding &the_encoding (void) = 0;
  
  public:

    // TAO_IDL - Generated from
    // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:396
    
  public:
    virtual char * get_encoding_type (void) = 0;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual ::SecurityLevel3::Encoding * get_encoding (
      const char *
    ) = 0;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Statement (void);
  virtual ~Statement (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Statement (const Statement &);
  void operator= (const Statement &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_Statement (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_Statement (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_init_ch.cpp:59

class TAO_Security_Export Statement_init
  : public virtual ::CORBA::ValueFactoryBase
{
public:

  virtual Statement* create (
    const char * encoding_type,
    const ::SecurityLevel3::Encoding & the_encoding) = 0;

  static Statement_init* _downcast ( ::CORBA::ValueFactoryBase *);

  // TAO-specific extensions
public:
  virtual const char* tao_repository_id (void);

protected:
  Statement_init (void);

protected:
  virtual ~Statement_init (void);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_Statement;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_STATEMENTLIST_CH_)
#define _SECURITYLEVEL3_STATEMENTLIST_CH_

class StatementList;

typedef
  ::TAO_VarSeq_Var_T<
      StatementList
    >
  StatementList_var;

typedef
  ::TAO_Seq_Out_T<
      StatementList
    >
  StatementList_out;

class TAO_Security_Export StatementList
  : public
      ::TAO::unbounded_valuetype_sequence<
          Statement,
          Statement_var
        >
{
public:
  StatementList (void);
  StatementList ( ::CORBA::ULong max);
  StatementList (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Statement ** buffer, 
    ::CORBA::Boolean release = false);
  StatementList (const StatementList &);
  virtual ~StatementList (void);
  

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef StatementList_var _var_type;
  typedef StatementList_out _out_type;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_StatementList;

// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:560



#if !defined (_SECURITYLEVEL3_IDENTITYSTATEMENT__VAR_OUT_CH_)
#define _SECURITYLEVEL3_IDENTITYSTATEMENT__VAR_OUT_CH_

class IdentityStatement;
typedef
  TAO_Value_Var_T<
      IdentityStatement
    >
  IdentityStatement_var;

typedef
  TAO_Value_Out_T<
      IdentityStatement
    >
  IdentityStatement_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:51

class TAO_Security_Export IdentityStatement
  : public virtual Statement
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef IdentityStatement * _ptr_type;
  typedef IdentityStatement_var _var_type;
  typedef IdentityStatement_out _out_type;

  static void _tao_any_destructor (void *);

  static IdentityStatement* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      IdentityStatement *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:608

  virtual void interpretation_aid (char *val) = 0;
  virtual void interpretation_aid (const char *val) = 0;
  virtual void interpretation_aid (const ::CORBA::String_var &val) = 0;
  virtual const char *interpretation_aid (void) const = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  IdentityStatement (void);
  virtual ~IdentityStatement (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  IdentityStatement (const IdentityStatement &);
  void operator= (const IdentityStatement &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_IdentityStatement (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_IdentityStatement (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_IdentityStatement;

// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:560



#if !defined (_SECURITYLEVEL3_PRINCIPALIDENTITYSTATEMENT__VAR_OUT_CH_)
#define _SECURITYLEVEL3_PRINCIPALIDENTITYSTATEMENT__VAR_OUT_CH_

class PrincipalIdentityStatement;
typedef
  TAO_Value_Var_T<
      PrincipalIdentityStatement
    >
  PrincipalIdentityStatement_var;

typedef
  TAO_Value_Out_T<
      PrincipalIdentityStatement
    >
  PrincipalIdentityStatement_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:51

class TAO_Security_Export PrincipalIdentityStatement
  : public virtual IdentityStatement
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef PrincipalIdentityStatement * _ptr_type;
  typedef PrincipalIdentityStatement_var _var_type;
  typedef PrincipalIdentityStatement_out _out_type;

  static void _tao_any_destructor (void *);

  static PrincipalIdentityStatement* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      PrincipalIdentityStatement *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:361

  virtual void the_principal (SecurityLevel3::Principal *) = 0;
  virtual SecurityLevel3::Principal *the_principal (void) const = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  PrincipalIdentityStatement (void);
  virtual ~PrincipalIdentityStatement (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  PrincipalIdentityStatement (const PrincipalIdentityStatement &);
  void operator= (const PrincipalIdentityStatement &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_PrincipalIdentityStatement (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_PrincipalIdentityStatement (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_PrincipalIdentityStatement;

// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:560



#if !defined (_SECURITYLEVEL3_ENDORSEMENTSTATEMENT__VAR_OUT_CH_)
#define _SECURITYLEVEL3_ENDORSEMENTSTATEMENT__VAR_OUT_CH_

class EndorsementStatement;
typedef
  TAO_Value_Var_T<
      EndorsementStatement
    >
  EndorsementStatement_var;

typedef
  TAO_Value_Out_T<
      EndorsementStatement
    >
  EndorsementStatement_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:51

class TAO_Security_Export EndorsementStatement
  : public virtual Statement
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef EndorsementStatement * _ptr_type;
  typedef EndorsementStatement_var _var_type;
  typedef EndorsementStatement_out _out_type;

  static void _tao_any_destructor (void *);

  static EndorsementStatement* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      EndorsementStatement *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:608

  virtual void interpretation_aid (char *val) = 0;
  virtual void interpretation_aid (const char *val) = 0;
  virtual void interpretation_aid (const ::CORBA::String_var &val) = 0;
  virtual const char *interpretation_aid (void) const = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  EndorsementStatement (void);
  virtual ~EndorsementStatement (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  EndorsementStatement (const EndorsementStatement &);
  void operator= (const EndorsementStatement &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_EndorsementStatement (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_EndorsementStatement (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_EndorsementStatement;

// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:560



#if !defined (_SECURITYLEVEL3_X509IDENTITYSTATEMENT__VAR_OUT_CH_)
#define _SECURITYLEVEL3_X509IDENTITYSTATEMENT__VAR_OUT_CH_

class X509IdentityStatement;
typedef
  TAO_Value_Var_T<
      X509IdentityStatement
    >
  X509IdentityStatement_var;

typedef
  TAO_Value_Out_T<
      X509IdentityStatement
    >
  X509IdentityStatement_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:51

class TAO_Security_Export X509IdentityStatement
  : public virtual PrincipalIdentityStatement
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef X509IdentityStatement * _ptr_type;
  typedef X509IdentityStatement_var _var_type;
  typedef X509IdentityStatement_out _out_type;

  static void _tao_any_destructor (void *);

  static X509IdentityStatement* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      X509IdentityStatement *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  X509IdentityStatement (void);
  virtual ~X509IdentityStatement (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  X509IdentityStatement (const X509IdentityStatement &);
  void operator= (const X509IdentityStatement &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_X509IdentityStatement (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_X509IdentityStatement (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_init_ch.cpp:59

class TAO_Security_Export X509IdentityStatement_init
  : public virtual ::CORBA::ValueFactoryBase
{
public:

  virtual X509IdentityStatement* create (
    const char * encoding_type,
    const ::SecurityLevel3::Encoding & the_encoding) = 0;

  static X509IdentityStatement_init* _downcast ( ::CORBA::ValueFactoryBase *);

  // TAO-specific extensions
public:
  virtual const char* tao_repository_id (void);

protected:
  X509IdentityStatement_init (void);

protected:
  virtual ~X509IdentityStatement_init (void);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_X509IdentityStatement;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_X509IDENTITYSTATEMENTLIST_CH_)
#define _SECURITYLEVEL3_X509IDENTITYSTATEMENTLIST_CH_

class X509IdentityStatementList;

typedef
  ::TAO_VarSeq_Var_T<
      X509IdentityStatementList
    >
  X509IdentityStatementList_var;

typedef
  ::TAO_Seq_Out_T<
      X509IdentityStatementList
    >
  X509IdentityStatementList_out;

class TAO_Security_Export X509IdentityStatementList
  : public
      ::TAO::unbounded_valuetype_sequence<
          X509IdentityStatement,
          X509IdentityStatement_var
        >
{
public:
  X509IdentityStatementList (void);
  X509IdentityStatementList ( ::CORBA::ULong max);
  X509IdentityStatementList (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    X509IdentityStatement ** buffer, 
    ::CORBA::Boolean release = false);
  X509IdentityStatementList (const X509IdentityStatementList &);
  virtual ~X509IdentityStatementList (void);
  

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef X509IdentityStatementList_var _var_type;
  typedef X509IdentityStatementList_out _out_type;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_X509IdentityStatementList;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

typedef ::CORBA::ULong CredentialsType;
typedef ::CORBA::ULong_out CredentialsType_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredentialsType;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CT_OwnCredentials = 0U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CT_ClientCredentials = 1U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CT_TargetCredentials = 2U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

typedef ::CORBA::Long CredentialsState;
typedef ::CORBA::Long_out CredentialsState_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredentialsState;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long CS_Invalid = -3;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long CS_Expired = -2;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long CS_PendingRelease = -1;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long CS_Initialized = 0;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long CS_Valid = 1;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

typedef char * CredentialsId;
typedef ::CORBA::String_var CredentialsId_var;
typedef ::CORBA::String_out CredentialsId_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredentialsId;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_CREDENTIALSIDLIST_CH_)
#define _SECURITYLEVEL3_CREDENTIALSIDLIST_CH_

class CredentialsIdList;

typedef
  ::TAO_VarSeq_Var_T<
      CredentialsIdList
    >
  CredentialsIdList_var;

typedef
  ::TAO_Seq_Out_T<
      CredentialsIdList
    >
  CredentialsIdList_out;

class TAO_Security_Export CredentialsIdList
  : public
      ::TAO::unbounded_basic_string_sequence<char>
{
public:
  CredentialsIdList (void);
  CredentialsIdList ( ::CORBA::ULong max);
  CredentialsIdList (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Char ** buffer, 
    ::CORBA::Boolean release = false);
  CredentialsIdList (const CredentialsIdList &);
  virtual ~CredentialsIdList (void);
  

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef CredentialsIdList_var _var_type;
  typedef CredentialsIdList_out _out_type;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredentialsIdList;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

typedef char * ContextId;
typedef ::CORBA::String_var ContextId_var;
typedef ::CORBA::String_out ContextId_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ContextId;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

typedef ::CORBA::ULong CredentialsUsage;
typedef ::CORBA::ULong_out CredentialsUsage_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredentialsUsage;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CU_Indefinite = 1U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CU_None = 2U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CU_AcceptOnly = 3U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CU_InitiateOnly = 4U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CU_InitiateAndAccept = 5U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

typedef ::CORBA::ULong CredsDirective;
typedef ::CORBA::ULong_out CredsDirective_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredsDirective;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CD_Default = 0U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CD_InvokeTarget = 1U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CD_EndorseTarget = 2U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong CD_EmbodyTarget = 3U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

typedef ::CORBA::Long FeatureDirective;
typedef ::CORBA::Long_out FeatureDirective_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_FeatureDirective;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long FD_DoNotUse = -2;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long FD_DoNotUseIfPossible = -1;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long FD_UseDefault = 0;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long FD_UseIfPossible = 1;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long FD_Use = 2;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

typedef ::CORBA::ULong InitiatorType;
typedef ::CORBA::ULong_out InitiatorType_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_InitiatorType;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong IT_None = 0U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong IT_Simple = 1U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong IT_Quoting = 2U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong IT_Proxy = 3U;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_CREDSINITIATOR__VAR_OUT_CH_)
#define _SECURITYLEVEL3_CREDSINITIATOR__VAR_OUT_CH_

class CredsInitiator;
typedef CredsInitiator *CredsInitiator_ptr;

typedef
  TAO_Objref_Var_T<
      CredsInitiator
    >
  CredsInitiator_var;

typedef
  TAO_Objref_Out_T<
      CredsInitiator
    >
  CredsInitiator_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export CredsInitiator
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef CredsInitiator_ptr _ptr_type;
  typedef CredsInitiator_var _var_type;
  typedef CredsInitiator_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static CredsInitiator_ptr _duplicate (CredsInitiator_ptr obj);

  static void _tao_release (CredsInitiator_ptr obj);

  static CredsInitiator_ptr _narrow (::CORBA::Object_ptr obj);
  static CredsInitiator_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static CredsInitiator_ptr _nil (void);

  virtual ::SecurityLevel3::Principal * the_principal (
    void) = 0;

  virtual ::SecurityLevel3::StatementList * supporting_statements (
    void) = 0;

  virtual ::SecurityLevel3::ResourceNameList * restricted_resources (
    void) = 0;

  virtual ::SecurityLevel3::InitiatorType initiator_type (
    void) = 0;

  virtual ::CORBA::Boolean supports_embodiment (
    void) = 0;

  virtual ::CORBA::Boolean supports_endorsement (
    void) = 0;

  virtual ::CORBA::Boolean supports_quoting (
    void) = 0;

  virtual ::TimeBase::UtcT expiry_time (
    void) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  CredsInitiator (void);

  

  virtual ~CredsInitiator (void);

private:
  // Private and unimplemented for concrete interfaces.
  CredsInitiator (const CredsInitiator &);

  void operator= (const CredsInitiator &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredsInitiator;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_CREDSACCEPTOR__VAR_OUT_CH_)
#define _SECURITYLEVEL3_CREDSACCEPTOR__VAR_OUT_CH_

class CredsAcceptor;
typedef CredsAcceptor *CredsAcceptor_ptr;

typedef
  TAO_Objref_Var_T<
      CredsAcceptor
    >
  CredsAcceptor_var;

typedef
  TAO_Objref_Out_T<
      CredsAcceptor
    >
  CredsAcceptor_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export CredsAcceptor
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef CredsAcceptor_ptr _ptr_type;
  typedef CredsAcceptor_var _var_type;
  typedef CredsAcceptor_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static CredsAcceptor_ptr _duplicate (CredsAcceptor_ptr obj);

  static void _tao_release (CredsAcceptor_ptr obj);

  static CredsAcceptor_ptr _narrow (::CORBA::Object_ptr obj);
  static CredsAcceptor_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static CredsAcceptor_ptr _nil (void);

  virtual ::SecurityLevel3::Principal * the_principal (
    void) = 0;

  virtual ::SecurityLevel3::StatementList * supporting_statements (
    void) = 0;

  virtual ::SecurityLevel3::ResourceNameList * restricted_resources (
    void) = 0;

  virtual ::CORBA::Boolean accepts_endorsement (
    void) = 0;

  virtual ::CORBA::Boolean accepts_quoting (
    void) = 0;

  virtual ::TimeBase::UtcT expiry_time (
    void) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  CredsAcceptor (void);

  

  virtual ~CredsAcceptor (void);

private:
  // Private and unimplemented for concrete interfaces.
  CredsAcceptor (const CredsAcceptor &);

  void operator= (const CredsAcceptor &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredsAcceptor;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

typedef char * ListenerId;
typedef ::CORBA::String_var ListenerId_var;
typedef ::CORBA::String_out ListenerId_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ListenerId;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_RELINQUISHEDCREDENTIALSLISTENER__VAR_OUT_CH_)
#define _SECURITYLEVEL3_RELINQUISHEDCREDENTIALSLISTENER__VAR_OUT_CH_

class RelinquishedCredentialsListener;
typedef RelinquishedCredentialsListener *RelinquishedCredentialsListener_ptr;

typedef
  TAO_Objref_Var_T<
      RelinquishedCredentialsListener
    >
  RelinquishedCredentialsListener_var;

typedef
  TAO_Objref_Out_T<
      RelinquishedCredentialsListener
    >
  RelinquishedCredentialsListener_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export RelinquishedCredentialsListener
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef RelinquishedCredentialsListener_ptr _ptr_type;
  typedef RelinquishedCredentialsListener_var _var_type;
  typedef RelinquishedCredentialsListener_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static RelinquishedCredentialsListener_ptr _duplicate (RelinquishedCredentialsListener_ptr obj);

  static void _tao_release (RelinquishedCredentialsListener_ptr obj);

  static RelinquishedCredentialsListener_ptr _narrow (::CORBA::Object_ptr obj);
  static RelinquishedCredentialsListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static RelinquishedCredentialsListener_ptr _nil (void);

  virtual void relinquished_notify (
    const char * creds_id) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  RelinquishedCredentialsListener (void);

  

  virtual ~RelinquishedCredentialsListener (void);

private:
  // Private and unimplemented for concrete interfaces.
  RelinquishedCredentialsListener (const RelinquishedCredentialsListener &);

  void operator= (const RelinquishedCredentialsListener &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_RelinquishedCredentialsListener;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_CREDENTIALS__VAR_OUT_CH_)
#define _SECURITYLEVEL3_CREDENTIALS__VAR_OUT_CH_

class Credentials;
typedef Credentials *Credentials_ptr;

typedef
  TAO_Objref_Var_T<
      Credentials
    >
  Credentials_var;

typedef
  TAO_Objref_Out_T<
      Credentials
    >
  Credentials_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export Credentials
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef Credentials_ptr _ptr_type;
  typedef Credentials_var _var_type;
  typedef Credentials_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static Credentials_ptr _duplicate (Credentials_ptr obj);

  static void _tao_release (Credentials_ptr obj);

  static Credentials_ptr _narrow (::CORBA::Object_ptr obj);
  static Credentials_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static Credentials_ptr _nil (void);

  virtual char * creds_id (
    void) = 0;

  virtual ::SecurityLevel3::CredentialsType creds_type (
    void) = 0;

  virtual ::SecurityLevel3::CredentialsUsage creds_usage (
    void) = 0;

  virtual ::TimeBase::UtcT expiry_time (
    void) = 0;

  virtual ::SecurityLevel3::CredentialsState creds_state (
    void) = 0;

  virtual char * add_relinquished_listener (
    ::SecurityLevel3::RelinquishedCredentialsListener_ptr listener) = 0;

  virtual void remove_relinquished_listener (
    const char * id) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  Credentials (void);

  

  virtual ~Credentials (void);

private:
  // Private and unimplemented for concrete interfaces.
  Credentials (const Credentials &);

  void operator= (const Credentials &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_Credentials;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_CREDENTIALSLIST_CH_)
#define _SECURITYLEVEL3_CREDENTIALSLIST_CH_

class CredentialsList;

typedef
  ::TAO_VarSeq_Var_T<
      CredentialsList
    >
  CredentialsList_var;

typedef
  ::TAO_Seq_Out_T<
      CredentialsList
    >
  CredentialsList_out;

class TAO_Security_Export CredentialsList
  : public
      ::TAO::unbounded_object_reference_sequence<
          Credentials,
          Credentials_var
        >
{
public:
  CredentialsList (void);
  CredentialsList ( ::CORBA::ULong max);
  CredentialsList (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Credentials_ptr* buffer, 
    ::CORBA::Boolean release = false);
  CredentialsList (const CredentialsList &);
  virtual ~CredentialsList (void);
  

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef CredentialsList_var _var_type;
  typedef CredentialsList_out _out_type;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredentialsList;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_OWNCREDENTIALS__VAR_OUT_CH_)
#define _SECURITYLEVEL3_OWNCREDENTIALS__VAR_OUT_CH_

class OwnCredentials;
typedef OwnCredentials *OwnCredentials_ptr;

typedef
  TAO_Objref_Var_T<
      OwnCredentials
    >
  OwnCredentials_var;

typedef
  TAO_Objref_Out_T<
      OwnCredentials
    >
  OwnCredentials_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export OwnCredentials
  : public virtual ::SecurityLevel3::Credentials

{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef OwnCredentials_ptr _ptr_type;
  typedef OwnCredentials_var _var_type;
  typedef OwnCredentials_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static OwnCredentials_ptr _duplicate (OwnCredentials_ptr obj);

  static void _tao_release (OwnCredentials_ptr obj);

  static OwnCredentials_ptr _narrow (::CORBA::Object_ptr obj);
  static OwnCredentials_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static OwnCredentials_ptr _nil (void);

  virtual ::SecurityLevel3::CredsInitiator_ptr creds_initiator (
    void) = 0;

  virtual ::SecurityLevel3::CredsAcceptor_ptr creds_acceptor (
    void) = 0;

  virtual void release_credentials (
    void) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  OwnCredentials (void);

  

  virtual ~OwnCredentials (void);

private:
  // Private and unimplemented for concrete interfaces.
  OwnCredentials (const OwnCredentials &);

  void operator= (const OwnCredentials &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_OwnCredentials;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_OWNCREDENTIALSLIST_CH_)
#define _SECURITYLEVEL3_OWNCREDENTIALSLIST_CH_

class OwnCredentialsList;

typedef
  ::TAO_VarSeq_Var_T<
      OwnCredentialsList
    >
  OwnCredentialsList_var;

typedef
  ::TAO_Seq_Out_T<
      OwnCredentialsList
    >
  OwnCredentialsList_out;

class TAO_Security_Export OwnCredentialsList
  : public
      ::TAO::unbounded_object_reference_sequence<
          OwnCredentials,
          OwnCredentials_var
        >
{
public:
  OwnCredentialsList (void);
  OwnCredentialsList ( ::CORBA::ULong max);
  OwnCredentialsList (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    OwnCredentials_ptr* buffer, 
    ::CORBA::Boolean release = false);
  OwnCredentialsList (const OwnCredentialsList &);
  virtual ~OwnCredentialsList (void);
  

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef OwnCredentialsList_var _var_type;
  typedef OwnCredentialsList_out _out_type;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_OwnCredentialsList;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_CLIENTCREDENTIALS__VAR_OUT_CH_)
#define _SECURITYLEVEL3_CLIENTCREDENTIALS__VAR_OUT_CH_

class ClientCredentials;
typedef ClientCredentials *ClientCredentials_ptr;

typedef
  TAO_Objref_Var_T<
      ClientCredentials
    >
  ClientCredentials_var;

typedef
  TAO_Objref_Out_T<
      ClientCredentials
    >
  ClientCredentials_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export ClientCredentials
  : public virtual ::SecurityLevel3::Credentials

{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef ClientCredentials_ptr _ptr_type;
  typedef ClientCredentials_var _var_type;
  typedef ClientCredentials_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static ClientCredentials_ptr _duplicate (ClientCredentials_ptr obj);

  static void _tao_release (ClientCredentials_ptr obj);

  static ClientCredentials_ptr _narrow (::CORBA::Object_ptr obj);
  static ClientCredentials_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static ClientCredentials_ptr _nil (void);

  virtual char * context_id (
    void) = 0;

  virtual ::SecurityLevel3::Principal * client_principal (
    void) = 0;

  virtual ::SecurityLevel3::StatementList * client_supporting_statements (
    void) = 0;

  virtual ::SecurityLevel3::ResourceNameList * client_restricted_resources (
    void) = 0;

  virtual ::SecurityLevel3::Principal * target_principal (
    void) = 0;

  virtual ::SecurityLevel3::StatementList * target_supporting_statements (
    void) = 0;

  virtual ::SecurityLevel3::ResourceNameList * target_restricted_resources (
    void) = 0;

  virtual ::SecurityLevel3::OwnCredentials_ptr parent_credentials (
    void) = 0;

  virtual ::CORBA::Boolean client_authentication (
    void) = 0;

  virtual ::CORBA::Boolean target_authentication (
    void) = 0;

  virtual ::CORBA::Boolean confidentiality (
    void) = 0;

  virtual ::CORBA::Boolean integrity (
    void) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  ClientCredentials (void);

  

  virtual ~ClientCredentials (void);

private:
  // Private and unimplemented for concrete interfaces.
  ClientCredentials (const ClientCredentials &);

  void operator= (const ClientCredentials &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ClientCredentials;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_TARGETCREDENTIALS__VAR_OUT_CH_)
#define _SECURITYLEVEL3_TARGETCREDENTIALS__VAR_OUT_CH_

class TargetCredentials;
typedef TargetCredentials *TargetCredentials_ptr;

typedef
  TAO_Objref_Var_T<
      TargetCredentials
    >
  TargetCredentials_var;

typedef
  TAO_Objref_Out_T<
      TargetCredentials
    >
  TargetCredentials_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export TargetCredentials
  : public virtual ::SecurityLevel3::Credentials

{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef TargetCredentials_ptr _ptr_type;
  typedef TargetCredentials_var _var_type;
  typedef TargetCredentials_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static TargetCredentials_ptr _duplicate (TargetCredentials_ptr obj);

  static void _tao_release (TargetCredentials_ptr obj);

  static TargetCredentials_ptr _narrow (::CORBA::Object_ptr obj);
  static TargetCredentials_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static TargetCredentials_ptr _nil (void);

  virtual char * context_id (
    void) = 0;

  virtual ::SecurityLevel3::Principal * client_principal (
    void) = 0;

  virtual ::SecurityLevel3::StatementList * client_supporting_statements (
    void) = 0;

  virtual ::SecurityLevel3::ResourceNameList * client_restricted_resources (
    void) = 0;

  virtual ::SecurityLevel3::Principal * target_principal (
    void) = 0;

  virtual ::SecurityLevel3::StatementList * target_supporting_statements (
    void) = 0;

  virtual ::SecurityLevel3::ResourceNameList * target_restricted_resources (
    void) = 0;

  virtual ::SecurityLevel3::OwnCredentials_ptr parent_credentials (
    void) = 0;

  virtual ::CORBA::Boolean client_authentication (
    void) = 0;

  virtual ::CORBA::Boolean target_authentication (
    void) = 0;

  virtual ::CORBA::Boolean confidentiality (
    void) = 0;

  virtual ::CORBA::Boolean integrity (
    void) = 0;

  virtual ::CORBA::Boolean target_embodied (
    void) = 0;

  virtual ::CORBA::Boolean target_endorsed (
    void) = 0;

  virtual void release (
    void) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  TargetCredentials (void);

  

  virtual ~TargetCredentials (void);

private:
  // Private and unimplemented for concrete interfaces.
  TargetCredentials (const TargetCredentials &);

  void operator= (const TargetCredentials &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_TargetCredentials;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_CONTEXTESTABLISHMENTPOLICY__VAR_OUT_CH_)
#define _SECURITYLEVEL3_CONTEXTESTABLISHMENTPOLICY__VAR_OUT_CH_

class ContextEstablishmentPolicy;
typedef ContextEstablishmentPolicy *ContextEstablishmentPolicy_ptr;

typedef
  TAO_Objref_Var_T<
      ContextEstablishmentPolicy
    >
  ContextEstablishmentPolicy_var;

typedef
  TAO_Objref_Out_T<
      ContextEstablishmentPolicy
    >
  ContextEstablishmentPolicy_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export ContextEstablishmentPolicy
  : public virtual ::CORBA::Policy

{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef ContextEstablishmentPolicy_ptr _ptr_type;
  typedef ContextEstablishmentPolicy_var _var_type;
  typedef ContextEstablishmentPolicy_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static ContextEstablishmentPolicy_ptr _duplicate (ContextEstablishmentPolicy_ptr obj);

  static void _tao_release (ContextEstablishmentPolicy_ptr obj);

  static ContextEstablishmentPolicy_ptr _narrow (::CORBA::Object_ptr obj);
  static ContextEstablishmentPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static ContextEstablishmentPolicy_ptr _nil (void);

  virtual ::SecurityLevel3::CredsDirective creds_directive (
    void) = 0;

  virtual ::SecurityLevel3::OwnCredentialsList * creds_list (
    void) = 0;

  virtual ::SecurityLevel3::FeatureDirective use_client_auth (
    void) = 0;

  virtual ::SecurityLevel3::FeatureDirective use_target_auth (
    void) = 0;

  virtual ::SecurityLevel3::FeatureDirective use_confidentiality (
    void) = 0;

  virtual ::SecurityLevel3::FeatureDirective use_integrity (
    void) = 0;

  virtual ::CORBA::Policy_ptr copy (
    void) = 0;

  virtual void destroy (
    void) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  ContextEstablishmentPolicy (void);

  

  virtual ~ContextEstablishmentPolicy (void);

private:
  // Private and unimplemented for concrete interfaces.
  ContextEstablishmentPolicy (const ContextEstablishmentPolicy &);

  void operator= (const ContextEstablishmentPolicy &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ContextEstablishmentPolicy;

// TAO_IDL - Generated from
// .\be\be_type.cpp:261

struct ContextEstablishmentPolicyArgument;

typedef
  ::TAO_Var_Var_T<
      ContextEstablishmentPolicyArgument
    >
  ContextEstablishmentPolicyArgument_var;

typedef
  ::TAO_Out_T<
      ContextEstablishmentPolicyArgument
    >
  ContextEstablishmentPolicyArgument_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

struct TAO_Security_Export ContextEstablishmentPolicyArgument
{

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef ContextEstablishmentPolicyArgument_var _var_type;
  typedef ContextEstablishmentPolicyArgument_out _out_type;

  static void _tao_any_destructor (void *);
  
  SecurityLevel3::CredsDirective creds_directive;
  SecurityLevel3::OwnCredentialsList creds_list;
  SecurityLevel3::FeatureDirective use_client_auth;
  SecurityLevel3::FeatureDirective use_target_auth;
  SecurityLevel3::FeatureDirective use_confidentiality;
  SecurityLevel3::FeatureDirective use_integrity;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ContextEstablishmentPolicyArgument;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong ContextEstablishmentPolicyType = 168936425U;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_OBJECTCREDENTIALSPOLICY__VAR_OUT_CH_)
#define _SECURITYLEVEL3_OBJECTCREDENTIALSPOLICY__VAR_OUT_CH_

class ObjectCredentialsPolicy;
typedef ObjectCredentialsPolicy *ObjectCredentialsPolicy_ptr;

typedef
  TAO_Objref_Var_T<
      ObjectCredentialsPolicy
    >
  ObjectCredentialsPolicy_var;

typedef
  TAO_Objref_Out_T<
      ObjectCredentialsPolicy
    >
  ObjectCredentialsPolicy_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export ObjectCredentialsPolicy
  : public virtual ::CORBA::Policy

{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef ObjectCredentialsPolicy_ptr _ptr_type;
  typedef ObjectCredentialsPolicy_var _var_type;
  typedef ObjectCredentialsPolicy_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static ObjectCredentialsPolicy_ptr _duplicate (ObjectCredentialsPolicy_ptr obj);

  static void _tao_release (ObjectCredentialsPolicy_ptr obj);

  static ObjectCredentialsPolicy_ptr _narrow (::CORBA::Object_ptr obj);
  static ObjectCredentialsPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static ObjectCredentialsPolicy_ptr _nil (void);

  virtual ::SecurityLevel3::OwnCredentialsList * creds_list (
    void) = 0;

  virtual ::CORBA::Policy_ptr copy (
    void) = 0;

  virtual void destroy (
    void) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  ObjectCredentialsPolicy (void);

  

  virtual ~ObjectCredentialsPolicy (void);

private:
  // Private and unimplemented for concrete interfaces.
  ObjectCredentialsPolicy (const ObjectCredentialsPolicy &);

  void operator= (const ObjectCredentialsPolicy &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ObjectCredentialsPolicy;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

typedef OwnCredentialsList ObjectCredentialsPolicyArgument;
typedef OwnCredentialsList_var ObjectCredentialsPolicyArgument_var;
typedef OwnCredentialsList_out ObjectCredentialsPolicyArgument_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ObjectCredentialsPolicyArgument;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::ULong ObjectCredentialsPolicyType = 168936426U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

typedef char * AcquisitionMethod;
typedef ::CORBA::String_var AcquisitionMethod_var;
typedef ::CORBA::String_out AcquisitionMethod_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AcquisitionMethod;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITYLEVEL3_ACQUISITIONMETHODLIST_CH_)
#define _SECURITYLEVEL3_ACQUISITIONMETHODLIST_CH_

class AcquisitionMethodList;

typedef
  ::TAO_VarSeq_Var_T<
      AcquisitionMethodList
    >
  AcquisitionMethodList_var;

typedef
  ::TAO_Seq_Out_T<
      AcquisitionMethodList
    >
  AcquisitionMethodList_out;

class TAO_Security_Export AcquisitionMethodList
  : public
      ::TAO::unbounded_basic_string_sequence<char>
{
public:
  AcquisitionMethodList (void);
  AcquisitionMethodList ( ::CORBA::ULong max);
  AcquisitionMethodList (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Char ** buffer, 
    ::CORBA::Boolean release = false);
  AcquisitionMethodList (const AcquisitionMethodList &);
  virtual ~AcquisitionMethodList (void);
  

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef AcquisitionMethodList_var _var_type;
  typedef AcquisitionMethodList_out _out_type;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AcquisitionMethodList;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

typedef ::CORBA::Long AcquisitionStatus;
typedef ::CORBA::Long_out AcquisitionStatus_out;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AcquisitionStatus;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long AQST_Failed = -2;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long AQST_Expired = -1;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long AQST_Initialized = 0;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long AQST_Continued = 1;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

const CORBA::Long AQST_Succeeded = 2;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_CREDENTIALSACQUIRER__VAR_OUT_CH_)
#define _SECURITYLEVEL3_CREDENTIALSACQUIRER__VAR_OUT_CH_

class CredentialsAcquirer;
typedef CredentialsAcquirer *CredentialsAcquirer_ptr;

typedef
  TAO_Objref_Var_T<
      CredentialsAcquirer
    >
  CredentialsAcquirer_var;

typedef
  TAO_Objref_Out_T<
      CredentialsAcquirer
    >
  CredentialsAcquirer_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export CredentialsAcquirer
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef CredentialsAcquirer_ptr _ptr_type;
  typedef CredentialsAcquirer_var _var_type;
  typedef CredentialsAcquirer_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static CredentialsAcquirer_ptr _duplicate (CredentialsAcquirer_ptr obj);

  static void _tao_release (CredentialsAcquirer_ptr obj);

  static CredentialsAcquirer_ptr _narrow (::CORBA::Object_ptr obj);
  static CredentialsAcquirer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static CredentialsAcquirer_ptr _nil (void);

  virtual char * acquisition_method (
    void) = 0;

  virtual ::SecurityLevel3::AcquisitionStatus current_status (
    void) = 0;

  virtual ::CORBA::ULong nth_iteration (
    void) = 0;

  virtual ::CORBA::Any * get_continuation_data (
    void) = 0;

  virtual ::SecurityLevel3::AcquisitionStatus continue_acquisition (
    const ::CORBA::Any & acquisition_arguments) = 0;

  virtual ::SecurityLevel3::OwnCredentials_ptr get_credentials (
    ::CORBA::Boolean on_list) = 0;

  virtual void destroy (
    void) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  CredentialsAcquirer (void);

  

  virtual ~CredentialsAcquirer (void);

private:
  // Private and unimplemented for concrete interfaces.
  CredentialsAcquirer (const CredentialsAcquirer &);

  void operator= (const CredentialsAcquirer &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredentialsAcquirer;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_CREDENTIALSCURATOR__VAR_OUT_CH_)
#define _SECURITYLEVEL3_CREDENTIALSCURATOR__VAR_OUT_CH_

class CredentialsCurator;
typedef CredentialsCurator *CredentialsCurator_ptr;

typedef
  TAO_Objref_Var_T<
      CredentialsCurator
    >
  CredentialsCurator_var;

typedef
  TAO_Objref_Out_T<
      CredentialsCurator
    >
  CredentialsCurator_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export CredentialsCurator
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef CredentialsCurator_ptr _ptr_type;
  typedef CredentialsCurator_var _var_type;
  typedef CredentialsCurator_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static CredentialsCurator_ptr _duplicate (CredentialsCurator_ptr obj);

  static void _tao_release (CredentialsCurator_ptr obj);

  static CredentialsCurator_ptr _narrow (::CORBA::Object_ptr obj);
  static CredentialsCurator_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static CredentialsCurator_ptr _nil (void);

  virtual ::SecurityLevel3::AcquisitionMethodList * supported_methods (
    void) = 0;

  virtual ::SecurityLevel3::CredentialsAcquirer_ptr acquire_credentials (
    const char * acquisition_method,
    const ::CORBA::Any & acquisition_arguments) = 0;

  virtual ::SecurityLevel3::OwnCredentialsList * default_creds_list (
    void) = 0;

  virtual ::SecurityLevel3::CredentialsIdList * default_creds_ids (
    void) = 0;

  virtual ::SecurityLevel3::OwnCredentials_ptr get_own_credentials (
    const char * credentials_id) = 0;

  virtual void release_own_credentials (
    const char * credentials_id) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  CredentialsCurator (void);

  

  virtual ~CredentialsCurator (void);

private:
  // Private and unimplemented for concrete interfaces.
  CredentialsCurator (const CredentialsCurator &);

  void operator= (const CredentialsCurator &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CredentialsCurator;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_SECURITYMANAGER__VAR_OUT_CH_)
#define _SECURITYLEVEL3_SECURITYMANAGER__VAR_OUT_CH_

class SecurityManager;
typedef SecurityManager *SecurityManager_ptr;

typedef
  TAO_Objref_Var_T<
      SecurityManager
    >
  SecurityManager_var;

typedef
  TAO_Objref_Out_T<
      SecurityManager
    >
  SecurityManager_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export SecurityManager
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef SecurityManager_ptr _ptr_type;
  typedef SecurityManager_var _var_type;
  typedef SecurityManager_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static SecurityManager_ptr _duplicate (SecurityManager_ptr obj);

  static void _tao_release (SecurityManager_ptr obj);

  static SecurityManager_ptr _narrow (::CORBA::Object_ptr obj);
  static SecurityManager_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static SecurityManager_ptr _nil (void);

  virtual ::SecurityLevel3::CredentialsCurator_ptr credentials_curator (
    void) = 0;

  virtual ::SecurityLevel3::TargetCredentials_ptr get_target_credentials (
    ::CORBA::Object_ptr the_object) = 0;

  virtual ::SecurityLevel3::ContextEstablishmentPolicy_ptr create_context_estab_policy (
    ::SecurityLevel3::CredsDirective creds_directive,
    const ::SecurityLevel3::OwnCredentialsList & creds_list,
    ::SecurityLevel3::FeatureDirective use_client_auth,
    ::SecurityLevel3::FeatureDirective use_target_auth,
    ::SecurityLevel3::FeatureDirective use_confidentiality,
    ::SecurityLevel3::FeatureDirective use_integrity) = 0;

  virtual ::SecurityLevel3::ObjectCredentialsPolicy_ptr create_object_creds_policy (
    const ::SecurityLevel3::OwnCredentialsList & creds_list) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  SecurityManager (void);

  

  virtual ~SecurityManager (void);

private:
  // Private and unimplemented for concrete interfaces.
  SecurityManager (const SecurityManager &);

  void operator= (const SecurityManager &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SecurityManager;

// TAO_IDL - Generated from
// .\be\be_interface.cpp:784

#if !defined (_SECURITYLEVEL3_SECURITYCURRENT__VAR_OUT_CH_)
#define _SECURITYLEVEL3_SECURITYCURRENT__VAR_OUT_CH_

class SecurityCurrent;
typedef SecurityCurrent *SecurityCurrent_ptr;

typedef
  TAO_Objref_Var_T<
      SecurityCurrent
    >
  SecurityCurrent_var;

typedef
  TAO_Objref_Out_T<
      SecurityCurrent
    >
  SecurityCurrent_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class TAO_Security_Export SecurityCurrent
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:307
  
  typedef SecurityCurrent_ptr _ptr_type;
  typedef SecurityCurrent_var _var_type;
  typedef SecurityCurrent_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static SecurityCurrent_ptr _duplicate (SecurityCurrent_ptr obj);

  static void _tao_release (SecurityCurrent_ptr obj);

  static SecurityCurrent_ptr _narrow (::CORBA::Object_ptr obj);
  static SecurityCurrent_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static SecurityCurrent_ptr _nil (void);

  virtual ::SecurityLevel3::ClientCredentials_ptr client_credentials (
    void) = 0;

  virtual ::CORBA::Boolean request_is_local (
    void) = 0;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  SecurityCurrent (void);

  

  virtual ~SecurityCurrent (void);

private:
  // Private and unimplemented for concrete interfaces.
  SecurityCurrent (const SecurityCurrent &);

  void operator= (const SecurityCurrent &);
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SecurityCurrent;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module SecurityLevel3

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::NamePath>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::NamePath,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::SecurityLevel3::PrincipalName>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::PrincipalName,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::PrincipalNameList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::PrincipalNameList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::SecurityLevel3::PrinAttribute>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::PrinAttribute,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::PrinAttributeList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::PrinAttributeList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::ResourceNameComponents>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::ResourceNameComponents,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::SecurityLevel3::ResourceName>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::ResourceName,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::ResourceNameList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::ResourceNameList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::SecurityLevel3::ScopedPrivileges>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::ScopedPrivileges,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::ScopedPrivilegesList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::ScopedPrivilegesList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:308

#if !defined (_SECURITYLEVEL3_PRINCIPAL__ARG_TRAITS_)
#define _SECURITYLEVEL3_PRINCIPAL__ARG_TRAITS_

  template<>
  class Arg_Traits< ::SecurityLevel3::Principal>
    : public
        Object_Arg_Traits_T<
            ::SecurityLevel3::Principal *,
            ::SecurityLevel3::Principal_var,
            ::SecurityLevel3::Principal_out,
            TAO::Value_Traits<SecurityLevel3::Principal>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::PrincipalList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::PrincipalList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:308

#if !defined (_SECURITYLEVEL3_SIMPLEPRINCIPAL__ARG_TRAITS_)
#define _SECURITYLEVEL3_SIMPLEPRINCIPAL__ARG_TRAITS_

  template<>
  class Arg_Traits< ::SecurityLevel3::SimplePrincipal>
    : public
        Object_Arg_Traits_T<
            ::SecurityLevel3::SimplePrincipal *,
            ::SecurityLevel3::SimplePrincipal_var,
            ::SecurityLevel3::SimplePrincipal_out,
            TAO::Value_Traits<SecurityLevel3::SimplePrincipal>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:308

#if !defined (_SECURITYLEVEL3_PROXYPRINCIPAL__ARG_TRAITS_)
#define _SECURITYLEVEL3_PROXYPRINCIPAL__ARG_TRAITS_

  template<>
  class Arg_Traits< ::SecurityLevel3::ProxyPrincipal>
    : public
        Object_Arg_Traits_T<
            ::SecurityLevel3::ProxyPrincipal *,
            ::SecurityLevel3::ProxyPrincipal_var,
            ::SecurityLevel3::ProxyPrincipal_out,
            TAO::Value_Traits<SecurityLevel3::ProxyPrincipal>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:308

#if !defined (_SECURITYLEVEL3_QUOTINGPRINCIPAL__ARG_TRAITS_)
#define _SECURITYLEVEL3_QUOTINGPRINCIPAL__ARG_TRAITS_

  template<>
  class Arg_Traits< ::SecurityLevel3::QuotingPrincipal>
    : public
        Object_Arg_Traits_T<
            ::SecurityLevel3::QuotingPrincipal *,
            ::SecurityLevel3::QuotingPrincipal_var,
            ::SecurityLevel3::QuotingPrincipal_out,
            TAO::Value_Traits<SecurityLevel3::QuotingPrincipal>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::Encoding>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::Encoding,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:308

#if !defined (_SECURITYLEVEL3_STATEMENT__ARG_TRAITS_)
#define _SECURITYLEVEL3_STATEMENT__ARG_TRAITS_

  template<>
  class Arg_Traits< ::SecurityLevel3::Statement>
    : public
        Object_Arg_Traits_T<
            ::SecurityLevel3::Statement *,
            ::SecurityLevel3::Statement_var,
            ::SecurityLevel3::Statement_out,
            TAO::Value_Traits<SecurityLevel3::Statement>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::StatementList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::StatementList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:308

#if !defined (_SECURITYLEVEL3_IDENTITYSTATEMENT__ARG_TRAITS_)
#define _SECURITYLEVEL3_IDENTITYSTATEMENT__ARG_TRAITS_

  template<>
  class Arg_Traits< ::SecurityLevel3::IdentityStatement>
    : public
        Object_Arg_Traits_T<
            ::SecurityLevel3::IdentityStatement *,
            ::SecurityLevel3::IdentityStatement_var,
            ::SecurityLevel3::IdentityStatement_out,
            TAO::Value_Traits<SecurityLevel3::IdentityStatement>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:308

#if !defined (_SECURITYLEVEL3_PRINCIPALIDENTITYSTATEMENT__ARG_TRAITS_)
#define _SECURITYLEVEL3_PRINCIPALIDENTITYSTATEMENT__ARG_TRAITS_

  template<>
  class Arg_Traits< ::SecurityLevel3::PrincipalIdentityStatement>
    : public
        Object_Arg_Traits_T<
            ::SecurityLevel3::PrincipalIdentityStatement *,
            ::SecurityLevel3::PrincipalIdentityStatement_var,
            ::SecurityLevel3::PrincipalIdentityStatement_out,
            TAO::Value_Traits<SecurityLevel3::PrincipalIdentityStatement>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:308

#if !defined (_SECURITYLEVEL3_ENDORSEMENTSTATEMENT__ARG_TRAITS_)
#define _SECURITYLEVEL3_ENDORSEMENTSTATEMENT__ARG_TRAITS_

  template<>
  class Arg_Traits< ::SecurityLevel3::EndorsementStatement>
    : public
        Object_Arg_Traits_T<
            ::SecurityLevel3::EndorsementStatement *,
            ::SecurityLevel3::EndorsementStatement_var,
            ::SecurityLevel3::EndorsementStatement_out,
            TAO::Value_Traits<SecurityLevel3::EndorsementStatement>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:308

#if !defined (_SECURITYLEVEL3_X509IDENTITYSTATEMENT__ARG_TRAITS_)
#define _SECURITYLEVEL3_X509IDENTITYSTATEMENT__ARG_TRAITS_

  template<>
  class Arg_Traits< ::SecurityLevel3::X509IdentityStatement>
    : public
        Object_Arg_Traits_T<
            ::SecurityLevel3::X509IdentityStatement *,
            ::SecurityLevel3::X509IdentityStatement_var,
            ::SecurityLevel3::X509IdentityStatement_out,
            TAO::Value_Traits<SecurityLevel3::X509IdentityStatement>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::X509IdentityStatementList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::X509IdentityStatementList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::CredentialsIdList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::CredentialsIdList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::CredentialsList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::CredentialsList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::OwnCredentialsList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::OwnCredentialsList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::SecurityLevel3::ContextEstablishmentPolicyArgument>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::ContextEstablishmentPolicyArgument,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::SecurityLevel3::AcquisitionMethodList>
    : public
        Var_Size_Arg_Traits_T<
            ::SecurityLevel3::AcquisitionMethodList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/obv_module.cpp:45

namespace OBV_SecurityLevel3
{

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_obv_ch.cpp:49

  // OBV_ class
  class TAO_Security_Export Principal
    : public virtual SecurityLevel3::Principal,
      public virtual ::CORBA::DefaultValueRefCountBase
  {

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:459

  virtual void the_type (const ::SecurityLevel3::PrincipalType);
  virtual ::SecurityLevel3::PrincipalType the_type (void) const;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:674

  virtual void the_name (const SecurityLevel3::PrincipalName &);
  virtual const SecurityLevel3::PrincipalName &the_name (void) const;
  virtual SecurityLevel3::PrincipalName &the_name (void);

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:533

  virtual void environmental_attributes (const SecurityLevel3::PrinAttributeList &);
  virtual const SecurityLevel3::PrinAttributeList &environmental_attributes (void) const;
  virtual SecurityLevel3::PrinAttributeList &environmental_attributes (void);

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:533

  virtual void with_privileges (const SecurityLevel3::ScopedPrivilegesList &);
  virtual const SecurityLevel3::ScopedPrivilegesList &with_privileges (void) const;
  virtual SecurityLevel3::ScopedPrivilegesList &with_privileges (void);

public:
  Principal (void);
  Principal (
      ::SecurityLevel3::PrincipalType _tao_init_the_type,
      const ::SecurityLevel3::PrincipalName & _tao_init_the_name,
      const ::SecurityLevel3::PrinAttributeList & _tao_init_environmental_attributes,
      const ::SecurityLevel3::ScopedPrivilegesList & _tao_init_with_privileges
    );
  virtual ~Principal (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_Principal (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_Principal (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  SecurityLevel3::PrincipalType _pd_the_type;
  SecurityLevel3::PrincipalName _pd_the_name;
  SecurityLevel3::PrinAttributeList _pd_environmental_attributes;
  SecurityLevel3::ScopedPrivilegesList _pd_with_privileges;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_obv_ch.cpp:49

// OBV_ class
class TAO_Security_Export SimplePrincipal
  : public virtual SecurityLevel3::SimplePrincipal,
    public virtual OBV_SecurityLevel3::Principal
{

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:459

  virtual void authenticated (const ::CORBA::Boolean);
  virtual ::CORBA::Boolean authenticated (void) const;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:533

  virtual void alternate_names (const SecurityLevel3::PrincipalNameList &);
  virtual const SecurityLevel3::PrincipalNameList &alternate_names (void) const;
  virtual SecurityLevel3::PrincipalNameList &alternate_names (void);

public:
  SimplePrincipal (void);
  SimplePrincipal (
      ::SecurityLevel3::PrincipalType _tao_init_the_type,
      const ::SecurityLevel3::PrincipalName & _tao_init_the_name,
      const ::SecurityLevel3::PrinAttributeList & _tao_init_environmental_attributes,
      const ::SecurityLevel3::ScopedPrivilegesList & _tao_init_with_privileges,
      ::CORBA::Boolean _tao_init_authenticated,
      const ::SecurityLevel3::PrincipalNameList & _tao_init_alternate_names
    );
  virtual ~SimplePrincipal (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_SimplePrincipal (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_SimplePrincipal (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::CORBA::Boolean _pd_authenticated;
  SecurityLevel3::PrincipalNameList _pd_alternate_names;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_obv_ch.cpp:49

// OBV_ class
class TAO_Security_Export ProxyPrincipal
  : public virtual SecurityLevel3::ProxyPrincipal,
    public virtual OBV_SecurityLevel3::Principal
{

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:361

  virtual void speaking (SecurityLevel3::Principal *);
  virtual SecurityLevel3::Principal *speaking (void) const;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:361

  virtual void speaks_for (SecurityLevel3::Principal *);
  virtual SecurityLevel3::Principal *speaks_for (void) const;

public:
  ProxyPrincipal (void);
  ProxyPrincipal (
      ::SecurityLevel3::PrincipalType _tao_init_the_type,
      const ::SecurityLevel3::PrincipalName & _tao_init_the_name,
      const ::SecurityLevel3::PrinAttributeList & _tao_init_environmental_attributes,
      const ::SecurityLevel3::ScopedPrivilegesList & _tao_init_with_privileges,
      ::SecurityLevel3::Principal * _tao_init_speaking,
      ::SecurityLevel3::Principal * _tao_init_speaks_for
    );
  virtual ~ProxyPrincipal (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_ProxyPrincipal (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_ProxyPrincipal (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  SecurityLevel3::Principal_var _pd_speaking;
  SecurityLevel3::Principal_var _pd_speaks_for;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_obv_ch.cpp:49

// OBV_ class
class TAO_Security_Export QuotingPrincipal
  : public virtual SecurityLevel3::QuotingPrincipal,
    public virtual OBV_SecurityLevel3::Principal
{

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:361

  virtual void speaking (SecurityLevel3::Principal *);
  virtual SecurityLevel3::Principal *speaking (void) const;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:361

  virtual void quotes_for (SecurityLevel3::Principal *);
  virtual SecurityLevel3::Principal *quotes_for (void) const;

public:
  QuotingPrincipal (void);
  QuotingPrincipal (
      ::SecurityLevel3::PrincipalType _tao_init_the_type,
      const ::SecurityLevel3::PrincipalName & _tao_init_the_name,
      const ::SecurityLevel3::PrinAttributeList & _tao_init_environmental_attributes,
      const ::SecurityLevel3::ScopedPrivilegesList & _tao_init_with_privileges,
      ::SecurityLevel3::Principal * _tao_init_speaking,
      ::SecurityLevel3::Principal * _tao_init_quotes_for
    );
  virtual ~QuotingPrincipal (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_QuotingPrincipal (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_QuotingPrincipal (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  SecurityLevel3::Principal_var _pd_speaking;
  SecurityLevel3::Principal_var _pd_quotes_for;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_obv_ch.cpp:49

// OBV_ class
class TAO_Security_Export Statement
  : public virtual SecurityLevel3::Statement
{

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:459

  virtual void the_layer (const ::SecurityLevel3::StatementLayer);
  virtual ::SecurityLevel3::StatementLayer the_layer (void) const;

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:459

  virtual void the_type (const ::SecurityLevel3::StatementType);
  virtual ::SecurityLevel3::StatementType the_type (void) const;

protected:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:608

  virtual void encoding_type (char *val);
  virtual void encoding_type (const char *val);
  virtual void encoding_type (const ::CORBA::String_var &val);
  virtual const char *encoding_type (void) const;

protected:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:533

  virtual void the_encoding (const SecurityLevel3::Encoding &);
  virtual const SecurityLevel3::Encoding &the_encoding (void) const;
  virtual SecurityLevel3::Encoding &the_encoding (void);

public:

protected:
  Statement (void);
  Statement (
      ::SecurityLevel3::StatementLayer _tao_init_the_layer,
      ::SecurityLevel3::StatementType _tao_init_the_type,
      const char * _tao_init_encoding_type,
      const ::SecurityLevel3::Encoding & _tao_init_the_encoding
    );
  virtual ~Statement (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_Statement (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_Statement (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  SecurityLevel3::StatementLayer _pd_the_layer;
  SecurityLevel3::StatementType _pd_the_type;
  ::TAO::String_Manager _pd_encoding_type;
  SecurityLevel3::Encoding _pd_the_encoding;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_obv_ch.cpp:49

// OBV_ class
class TAO_Security_Export IdentityStatement
  : public virtual SecurityLevel3::IdentityStatement,
    public virtual OBV_SecurityLevel3::Statement
{

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:608

  virtual void interpretation_aid (char *val);
  virtual void interpretation_aid (const char *val);
  virtual void interpretation_aid (const ::CORBA::String_var &val);
  virtual const char *interpretation_aid (void) const;

protected:
  IdentityStatement (void);
  IdentityStatement (
      ::SecurityLevel3::StatementLayer _tao_init_the_layer,
      ::SecurityLevel3::StatementType _tao_init_the_type,
      const char * _tao_init_encoding_type,
      const ::SecurityLevel3::Encoding & _tao_init_the_encoding,
      const char * _tao_init_interpretation_aid
    );
  virtual ~IdentityStatement (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_IdentityStatement (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_IdentityStatement (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::TAO::String_Manager _pd_interpretation_aid;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_obv_ch.cpp:49

// OBV_ class
class TAO_Security_Export PrincipalIdentityStatement
  : public virtual SecurityLevel3::PrincipalIdentityStatement,
    public virtual OBV_SecurityLevel3::IdentityStatement
{

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:361

  virtual void the_principal (SecurityLevel3::Principal *);
  virtual SecurityLevel3::Principal *the_principal (void) const;

protected:
  PrincipalIdentityStatement (void);
  PrincipalIdentityStatement (
      ::SecurityLevel3::StatementLayer _tao_init_the_layer,
      ::SecurityLevel3::StatementType _tao_init_the_type,
      const char * _tao_init_encoding_type,
      const ::SecurityLevel3::Encoding & _tao_init_the_encoding,
      const char * _tao_init_interpretation_aid,
      ::SecurityLevel3::Principal * _tao_init_the_principal
    );
  virtual ~PrincipalIdentityStatement (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_PrincipalIdentityStatement (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_PrincipalIdentityStatement (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  SecurityLevel3::Principal_var _pd_the_principal;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_obv_ch.cpp:49

// OBV_ class
class TAO_Security_Export EndorsementStatement
  : public virtual SecurityLevel3::EndorsementStatement,
    public virtual OBV_SecurityLevel3::Statement
{

public:

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/field_ch.cpp:608

  virtual void interpretation_aid (char *val);
  virtual void interpretation_aid (const char *val);
  virtual void interpretation_aid (const ::CORBA::String_var &val);
  virtual const char *interpretation_aid (void) const;

protected:
  EndorsementStatement (void);
  EndorsementStatement (
      ::SecurityLevel3::StatementLayer _tao_init_the_layer,
      ::SecurityLevel3::StatementType _tao_init_the_type,
      const char * _tao_init_encoding_type,
      const ::SecurityLevel3::Encoding & _tao_init_the_encoding,
      const char * _tao_init_interpretation_aid
    );
  virtual ~EndorsementStatement (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_EndorsementStatement (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_EndorsementStatement (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::TAO::String_Manager _pd_interpretation_aid;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/valuetype_obv_ch.cpp:49

// OBV_ class
class TAO_Security_Export X509IdentityStatement
  : public virtual SecurityLevel3::X509IdentityStatement,
    public virtual OBV_SecurityLevel3::PrincipalIdentityStatement
{

public:

protected:
  X509IdentityStatement (void);
  X509IdentityStatement (
      ::SecurityLevel3::StatementLayer _tao_init_the_layer,
      ::SecurityLevel3::StatementType _tao_init_the_type,
      const char * _tao_init_encoding_type,
      const ::SecurityLevel3::Encoding & _tao_init_the_encoding,
      const char * _tao_init_interpretation_aid,
      ::SecurityLevel3::Principal * _tao_init_the_principal
    );
  virtual ~X509IdentityStatement (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__SecurityLevel3_X509IdentityStatement (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__SecurityLevel3_X509IdentityStatement (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  CORBA::Boolean require_truncation_;
};
}

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_SECURITYLEVEL3_PRINCIPAL__TRAITS_)
#define _SECURITYLEVEL3_PRINCIPAL__TRAITS_

  template<>
  struct TAO_Security_Export Value_Traits<SecurityLevel3::Principal>
  {
    static void add_ref (SecurityLevel3::Principal *);
    static void remove_ref (SecurityLevel3::Principal *);
    static void release (SecurityLevel3::Principal *);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_SIMPLEPRINCIPAL__TRAITS_)
#define _SECURITYLEVEL3_SIMPLEPRINCIPAL__TRAITS_

  template<>
  struct TAO_Security_Export Value_Traits<SecurityLevel3::SimplePrincipal>
  {
    static void add_ref (SecurityLevel3::SimplePrincipal *);
    static void remove_ref (SecurityLevel3::SimplePrincipal *);
    static void release (SecurityLevel3::SimplePrincipal *);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_PROXYPRINCIPAL__TRAITS_)
#define _SECURITYLEVEL3_PROXYPRINCIPAL__TRAITS_

  template<>
  struct TAO_Security_Export Value_Traits<SecurityLevel3::ProxyPrincipal>
  {
    static void add_ref (SecurityLevel3::ProxyPrincipal *);
    static void remove_ref (SecurityLevel3::ProxyPrincipal *);
    static void release (SecurityLevel3::ProxyPrincipal *);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_QUOTINGPRINCIPAL__TRAITS_)
#define _SECURITYLEVEL3_QUOTINGPRINCIPAL__TRAITS_

  template<>
  struct TAO_Security_Export Value_Traits<SecurityLevel3::QuotingPrincipal>
  {
    static void add_ref (SecurityLevel3::QuotingPrincipal *);
    static void remove_ref (SecurityLevel3::QuotingPrincipal *);
    static void release (SecurityLevel3::QuotingPrincipal *);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_STATEMENT__TRAITS_)
#define _SECURITYLEVEL3_STATEMENT__TRAITS_

  template<>
  struct TAO_Security_Export Value_Traits<SecurityLevel3::Statement>
  {
    static void add_ref (SecurityLevel3::Statement *);
    static void remove_ref (SecurityLevel3::Statement *);
    static void release (SecurityLevel3::Statement *);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_IDENTITYSTATEMENT__TRAITS_)
#define _SECURITYLEVEL3_IDENTITYSTATEMENT__TRAITS_

  template<>
  struct TAO_Security_Export Value_Traits<SecurityLevel3::IdentityStatement>
  {
    static void add_ref (SecurityLevel3::IdentityStatement *);
    static void remove_ref (SecurityLevel3::IdentityStatement *);
    static void release (SecurityLevel3::IdentityStatement *);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_PRINCIPALIDENTITYSTATEMENT__TRAITS_)
#define _SECURITYLEVEL3_PRINCIPALIDENTITYSTATEMENT__TRAITS_

  template<>
  struct TAO_Security_Export Value_Traits<SecurityLevel3::PrincipalIdentityStatement>
  {
    static void add_ref (SecurityLevel3::PrincipalIdentityStatement *);
    static void remove_ref (SecurityLevel3::PrincipalIdentityStatement *);
    static void release (SecurityLevel3::PrincipalIdentityStatement *);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_ENDORSEMENTSTATEMENT__TRAITS_)
#define _SECURITYLEVEL3_ENDORSEMENTSTATEMENT__TRAITS_

  template<>
  struct TAO_Security_Export Value_Traits<SecurityLevel3::EndorsementStatement>
  {
    static void add_ref (SecurityLevel3::EndorsementStatement *);
    static void remove_ref (SecurityLevel3::EndorsementStatement *);
    static void release (SecurityLevel3::EndorsementStatement *);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_X509IDENTITYSTATEMENT__TRAITS_)
#define _SECURITYLEVEL3_X509IDENTITYSTATEMENT__TRAITS_

  template<>
  struct TAO_Security_Export Value_Traits<SecurityLevel3::X509IdentityStatement>
  {
    static void add_ref (SecurityLevel3::X509IdentityStatement *);
    static void remove_ref (SecurityLevel3::X509IdentityStatement *);
    static void release (SecurityLevel3::X509IdentityStatement *);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_CREDSINITIATOR__TRAITS_)
#define _SECURITYLEVEL3_CREDSINITIATOR__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::CredsInitiator>
  {
    static ::SecurityLevel3::CredsInitiator_ptr duplicate (
        ::SecurityLevel3::CredsInitiator_ptr p);
    static void release (
        ::SecurityLevel3::CredsInitiator_ptr p);
    static ::SecurityLevel3::CredsInitiator_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::CredsInitiator_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_CREDSACCEPTOR__TRAITS_)
#define _SECURITYLEVEL3_CREDSACCEPTOR__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::CredsAcceptor>
  {
    static ::SecurityLevel3::CredsAcceptor_ptr duplicate (
        ::SecurityLevel3::CredsAcceptor_ptr p);
    static void release (
        ::SecurityLevel3::CredsAcceptor_ptr p);
    static ::SecurityLevel3::CredsAcceptor_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::CredsAcceptor_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_RELINQUISHEDCREDENTIALSLISTENER__TRAITS_)
#define _SECURITYLEVEL3_RELINQUISHEDCREDENTIALSLISTENER__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::RelinquishedCredentialsListener>
  {
    static ::SecurityLevel3::RelinquishedCredentialsListener_ptr duplicate (
        ::SecurityLevel3::RelinquishedCredentialsListener_ptr p);
    static void release (
        ::SecurityLevel3::RelinquishedCredentialsListener_ptr p);
    static ::SecurityLevel3::RelinquishedCredentialsListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::RelinquishedCredentialsListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_CREDENTIALS__TRAITS_)
#define _SECURITYLEVEL3_CREDENTIALS__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::Credentials>
  {
    static ::SecurityLevel3::Credentials_ptr duplicate (
        ::SecurityLevel3::Credentials_ptr p);
    static void release (
        ::SecurityLevel3::Credentials_ptr p);
    static ::SecurityLevel3::Credentials_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::Credentials_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_OWNCREDENTIALS__TRAITS_)
#define _SECURITYLEVEL3_OWNCREDENTIALS__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::OwnCredentials>
  {
    static ::SecurityLevel3::OwnCredentials_ptr duplicate (
        ::SecurityLevel3::OwnCredentials_ptr p);
    static void release (
        ::SecurityLevel3::OwnCredentials_ptr p);
    static ::SecurityLevel3::OwnCredentials_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::OwnCredentials_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_CLIENTCREDENTIALS__TRAITS_)
#define _SECURITYLEVEL3_CLIENTCREDENTIALS__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::ClientCredentials>
  {
    static ::SecurityLevel3::ClientCredentials_ptr duplicate (
        ::SecurityLevel3::ClientCredentials_ptr p);
    static void release (
        ::SecurityLevel3::ClientCredentials_ptr p);
    static ::SecurityLevel3::ClientCredentials_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::ClientCredentials_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_TARGETCREDENTIALS__TRAITS_)
#define _SECURITYLEVEL3_TARGETCREDENTIALS__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::TargetCredentials>
  {
    static ::SecurityLevel3::TargetCredentials_ptr duplicate (
        ::SecurityLevel3::TargetCredentials_ptr p);
    static void release (
        ::SecurityLevel3::TargetCredentials_ptr p);
    static ::SecurityLevel3::TargetCredentials_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::TargetCredentials_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_CONTEXTESTABLISHMENTPOLICY__TRAITS_)
#define _SECURITYLEVEL3_CONTEXTESTABLISHMENTPOLICY__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::ContextEstablishmentPolicy>
  {
    static ::SecurityLevel3::ContextEstablishmentPolicy_ptr duplicate (
        ::SecurityLevel3::ContextEstablishmentPolicy_ptr p);
    static void release (
        ::SecurityLevel3::ContextEstablishmentPolicy_ptr p);
    static ::SecurityLevel3::ContextEstablishmentPolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::ContextEstablishmentPolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_OBJECTCREDENTIALSPOLICY__TRAITS_)
#define _SECURITYLEVEL3_OBJECTCREDENTIALSPOLICY__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::ObjectCredentialsPolicy>
  {
    static ::SecurityLevel3::ObjectCredentialsPolicy_ptr duplicate (
        ::SecurityLevel3::ObjectCredentialsPolicy_ptr p);
    static void release (
        ::SecurityLevel3::ObjectCredentialsPolicy_ptr p);
    static ::SecurityLevel3::ObjectCredentialsPolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::ObjectCredentialsPolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_CREDENTIALSACQUIRER__TRAITS_)
#define _SECURITYLEVEL3_CREDENTIALSACQUIRER__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::CredentialsAcquirer>
  {
    static ::SecurityLevel3::CredentialsAcquirer_ptr duplicate (
        ::SecurityLevel3::CredentialsAcquirer_ptr p);
    static void release (
        ::SecurityLevel3::CredentialsAcquirer_ptr p);
    static ::SecurityLevel3::CredentialsAcquirer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::CredentialsAcquirer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_CREDENTIALSCURATOR__TRAITS_)
#define _SECURITYLEVEL3_CREDENTIALSCURATOR__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::CredentialsCurator>
  {
    static ::SecurityLevel3::CredentialsCurator_ptr duplicate (
        ::SecurityLevel3::CredentialsCurator_ptr p);
    static void release (
        ::SecurityLevel3::CredentialsCurator_ptr p);
    static ::SecurityLevel3::CredentialsCurator_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::CredentialsCurator_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_SECURITYMANAGER__TRAITS_)
#define _SECURITYLEVEL3_SECURITYMANAGER__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::SecurityManager>
  {
    static ::SecurityLevel3::SecurityManager_ptr duplicate (
        ::SecurityLevel3::SecurityManager_ptr p);
    static void release (
        ::SecurityLevel3::SecurityManager_ptr p);
    static ::SecurityLevel3::SecurityManager_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::SecurityManager_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SECURITYLEVEL3_SECURITYCURRENT__TRAITS_)
#define _SECURITYLEVEL3_SECURITYCURRENT__TRAITS_

  template<>
  struct TAO_Security_Export Objref_Traits< ::SecurityLevel3::SecurityCurrent>
  {
    static ::SecurityLevel3::SecurityCurrent_ptr duplicate (
        ::SecurityLevel3::SecurityCurrent_ptr p);
    static void release (
        ::SecurityLevel3::SecurityCurrent_ptr p);
    static ::SecurityLevel3::SecurityCurrent_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SecurityLevel3::SecurityCurrent_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::NamePath &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::NamePath*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::NamePath *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::NamePath *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::NamePath &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::NamePath*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::NamePath *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::NamePath *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::SecurityLevel3::PrincipalName &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::SecurityLevel3::PrincipalName*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::PrincipalName *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::PrincipalName *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const SecurityLevel3::PrincipalName &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::PrincipalName*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::PrincipalName *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::PrincipalName *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::PrincipalNameList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::PrincipalNameList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::PrincipalNameList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::PrincipalNameList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::PrincipalNameList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::PrincipalNameList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::PrincipalNameList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::PrincipalNameList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::SecurityLevel3::PrinAttribute &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::SecurityLevel3::PrinAttribute*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::PrinAttribute *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::PrinAttribute *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const SecurityLevel3::PrinAttribute &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::PrinAttribute*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::PrinAttribute *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::PrinAttribute *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::PrinAttributeList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::PrinAttributeList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::PrinAttributeList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::PrinAttributeList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::PrinAttributeList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::PrinAttributeList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::PrinAttributeList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::PrinAttributeList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::ResourceNameComponents &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::ResourceNameComponents*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::ResourceNameComponents *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::ResourceNameComponents *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::ResourceNameComponents &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::ResourceNameComponents*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::ResourceNameComponents *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::ResourceNameComponents *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::SecurityLevel3::ResourceName &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::SecurityLevel3::ResourceName*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::ResourceName *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::ResourceName *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const SecurityLevel3::ResourceName &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ResourceName*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::ResourceName *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::ResourceName *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::ResourceNameList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::ResourceNameList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::ResourceNameList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::ResourceNameList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::ResourceNameList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::ResourceNameList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::ResourceNameList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::ResourceNameList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::SecurityLevel3::ScopedPrivileges &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::SecurityLevel3::ScopedPrivileges*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::ScopedPrivileges *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::ScopedPrivileges *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const SecurityLevel3::ScopedPrivileges &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ScopedPrivileges*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::ScopedPrivileges *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::ScopedPrivileges *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::ScopedPrivilegesList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::ScopedPrivilegesList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::ScopedPrivilegesList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::ScopedPrivilegesList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::ScopedPrivilegesList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::ScopedPrivilegesList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::ScopedPrivilegesList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::ScopedPrivilegesList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, Principal *); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, Principal **); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Principal *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::Principal *); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::Principal **); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::Principal *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::PrincipalList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::PrincipalList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::PrincipalList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::PrincipalList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::PrincipalList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::PrincipalList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::PrincipalList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::PrincipalList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, SimplePrincipal *); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, SimplePrincipal **); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SimplePrincipal *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::SimplePrincipal *); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::SimplePrincipal **); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::SimplePrincipal *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ProxyPrincipal *); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ProxyPrincipal **); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProxyPrincipal *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ProxyPrincipal *); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ProxyPrincipal **); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::ProxyPrincipal *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, QuotingPrincipal *); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, QuotingPrincipal **); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, QuotingPrincipal *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::QuotingPrincipal *); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::QuotingPrincipal **); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::QuotingPrincipal *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::Encoding &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::Encoding*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::Encoding *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::Encoding *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::Encoding &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::Encoding*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::Encoding *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::Encoding *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::SecurityLevel3::BadEncoding &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::SecurityLevel3::BadEncoding*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::BadEncoding *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::BadEncoding *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, const SecurityLevel3::BadEncoding &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::BadEncoding*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::BadEncoding *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::BadEncoding *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::SecurityLevel3::BadEncodingType &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::SecurityLevel3::BadEncodingType*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::BadEncodingType *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::BadEncodingType *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, const SecurityLevel3::BadEncodingType &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::BadEncodingType*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::BadEncodingType *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::BadEncodingType *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, Statement *); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, Statement **); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Statement *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::Statement *); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::Statement **); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::Statement *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::StatementList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::StatementList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::StatementList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::StatementList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::StatementList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::StatementList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::StatementList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::StatementList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, IdentityStatement *); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, IdentityStatement **); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IdentityStatement *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::IdentityStatement *); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::IdentityStatement **); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::IdentityStatement *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, PrincipalIdentityStatement *); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, PrincipalIdentityStatement **); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PrincipalIdentityStatement *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::PrincipalIdentityStatement *); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::PrincipalIdentityStatement **); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::PrincipalIdentityStatement *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, EndorsementStatement *); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, EndorsementStatement **); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EndorsementStatement *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::EndorsementStatement *); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::EndorsementStatement **); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::EndorsementStatement *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, X509IdentityStatement *); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, X509IdentityStatement **); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, X509IdentityStatement *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::X509IdentityStatement *); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::X509IdentityStatement **); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::X509IdentityStatement *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::X509IdentityStatementList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::X509IdentityStatementList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::X509IdentityStatementList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::X509IdentityStatementList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::X509IdentityStatementList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::X509IdentityStatementList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::X509IdentityStatementList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::X509IdentityStatementList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::CredentialsIdList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::CredentialsIdList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::CredentialsIdList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::CredentialsIdList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::CredentialsIdList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::CredentialsIdList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::CredentialsIdList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::CredentialsIdList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, CredsInitiator_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, CredsInitiator_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CredsInitiator_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::CredsInitiator_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::CredsInitiator_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::CredsInitiator_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, CredsAcceptor_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, CredsAcceptor_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CredsAcceptor_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::CredsAcceptor_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::CredsAcceptor_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::CredsAcceptor_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, RelinquishedCredentialsListener_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, RelinquishedCredentialsListener_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RelinquishedCredentialsListener_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::RelinquishedCredentialsListener_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::RelinquishedCredentialsListener_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::RelinquishedCredentialsListener_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, Credentials_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, Credentials_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Credentials_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::Credentials_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::Credentials_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::Credentials_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::CredentialsList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::CredentialsList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::CredentialsList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::CredentialsList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::CredentialsList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::CredentialsList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::CredentialsList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::CredentialsList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, OwnCredentials_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, OwnCredentials_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OwnCredentials_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::OwnCredentials_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::OwnCredentials_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::OwnCredentials_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::OwnCredentialsList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::OwnCredentialsList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::OwnCredentialsList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::OwnCredentialsList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::OwnCredentialsList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::OwnCredentialsList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::OwnCredentialsList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::OwnCredentialsList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ClientCredentials_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ClientCredentials_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ClientCredentials_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ClientCredentials_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ClientCredentials_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::ClientCredentials_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, TargetCredentials_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, TargetCredentials_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TargetCredentials_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::TargetCredentials_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::TargetCredentials_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::TargetCredentials_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ContextEstablishmentPolicy_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ContextEstablishmentPolicy_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ContextEstablishmentPolicy_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ContextEstablishmentPolicy_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ContextEstablishmentPolicy_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::ContextEstablishmentPolicy_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::SecurityLevel3::ContextEstablishmentPolicyArgument &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::SecurityLevel3::ContextEstablishmentPolicyArgument*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::ContextEstablishmentPolicyArgument *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::ContextEstablishmentPolicyArgument *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const SecurityLevel3::ContextEstablishmentPolicyArgument &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ContextEstablishmentPolicyArgument*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::ContextEstablishmentPolicyArgument *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::ContextEstablishmentPolicyArgument *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ObjectCredentialsPolicy_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ObjectCredentialsPolicy_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObjectCredentialsPolicy_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ObjectCredentialsPolicy_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::ObjectCredentialsPolicy_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::ObjectCredentialsPolicy_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::SecurityLevel3::AcquisitionMethodList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::SecurityLevel3::AcquisitionMethodList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SecurityLevel3::AcquisitionMethodList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SecurityLevel3::AcquisitionMethodList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const SecurityLevel3::AcquisitionMethodList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityLevel3::AcquisitionMethodList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::AcquisitionMethodList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SecurityLevel3::AcquisitionMethodList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, CredentialsAcquirer_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, CredentialsAcquirer_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CredentialsAcquirer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::CredentialsAcquirer_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::CredentialsAcquirer_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::CredentialsAcquirer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, CredentialsCurator_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, CredentialsCurator_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CredentialsCurator_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::CredentialsCurator_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::CredentialsCurator_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::CredentialsCurator_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityManager_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityManager_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityManager_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::SecurityManager_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::SecurityManager_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::SecurityManager_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SecurityLevel3
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityCurrent_ptr); // copying
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, SecurityCurrent_ptr *); // non-copying
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityCurrent_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::SecurityCurrent_ptr); // copying
TAO_Security_Export void operator<<= (::CORBA::Any &, SecurityLevel3::SecurityCurrent_ptr *); // non-copying
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SecurityLevel3::SecurityCurrent_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_NamePath_H_
#define _TAO_CDR_OP_SecurityLevel3_NamePath_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::NamePath &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::NamePath &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_NamePath_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::PrincipalName &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::PrincipalName &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_PrincipalNameList_H_
#define _TAO_CDR_OP_SecurityLevel3_PrincipalNameList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::PrincipalNameList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::PrincipalNameList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_PrincipalNameList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::PrinAttribute &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::PrinAttribute &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_PrinAttributeList_H_
#define _TAO_CDR_OP_SecurityLevel3_PrinAttributeList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::PrinAttributeList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::PrinAttributeList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_PrinAttributeList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_ResourceNameComponents_H_
#define _TAO_CDR_OP_SecurityLevel3_ResourceNameComponents_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::ResourceNameComponents &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::ResourceNameComponents &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_ResourceNameComponents_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::ResourceName &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::ResourceName &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_ResourceNameList_H_
#define _TAO_CDR_OP_SecurityLevel3_ResourceNameList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::ResourceNameList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::ResourceNameList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_ResourceNameList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::ScopedPrivileges &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::ScopedPrivileges &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_ScopedPrivilegesList_H_
#define _TAO_CDR_OP_SecurityLevel3_ScopedPrivilegesList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::ScopedPrivilegesList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::ScopedPrivilegesList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_ScopedPrivilegesList_H_ */

// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:452



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_Security_Export void add_ref (SecurityLevel3::Principal *);
  extern TAO_Security_Export void remove_ref (SecurityLevel3::Principal *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/cdr_op_ch.cpp:51



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::Principal *);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::Principal *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_PrincipalList_H_
#define _TAO_CDR_OP_SecurityLevel3_PrincipalList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::PrincipalList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::PrincipalList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_PrincipalList_H_ */

// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:452



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_Security_Export void add_ref (SecurityLevel3::SimplePrincipal *);
  extern TAO_Security_Export void remove_ref (SecurityLevel3::SimplePrincipal *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/cdr_op_ch.cpp:51



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::SimplePrincipal *);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::SimplePrincipal *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:452



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_Security_Export void add_ref (SecurityLevel3::ProxyPrincipal *);
  extern TAO_Security_Export void remove_ref (SecurityLevel3::ProxyPrincipal *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/cdr_op_ch.cpp:51



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::ProxyPrincipal *);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::ProxyPrincipal *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:452



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_Security_Export void add_ref (SecurityLevel3::QuotingPrincipal *);
  extern TAO_Security_Export void remove_ref (SecurityLevel3::QuotingPrincipal *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/cdr_op_ch.cpp:51



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::QuotingPrincipal *);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::QuotingPrincipal *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_Encoding_H_
#define _TAO_CDR_OP_SecurityLevel3_Encoding_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::Encoding &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::Encoding &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_Encoding_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::BadEncoding &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::BadEncoding &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::BadEncodingType &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::BadEncodingType &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:452



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_Security_Export void add_ref (SecurityLevel3::Statement *);
  extern TAO_Security_Export void remove_ref (SecurityLevel3::Statement *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/cdr_op_ch.cpp:51



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::Statement *);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::Statement *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_StatementList_H_
#define _TAO_CDR_OP_SecurityLevel3_StatementList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::StatementList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::StatementList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_StatementList_H_ */

// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:452



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_Security_Export void add_ref (SecurityLevel3::IdentityStatement *);
  extern TAO_Security_Export void remove_ref (SecurityLevel3::IdentityStatement *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/cdr_op_ch.cpp:51



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::IdentityStatement *);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::IdentityStatement *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:452



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_Security_Export void add_ref (SecurityLevel3::PrincipalIdentityStatement *);
  extern TAO_Security_Export void remove_ref (SecurityLevel3::PrincipalIdentityStatement *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/cdr_op_ch.cpp:51



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::PrincipalIdentityStatement *);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::PrincipalIdentityStatement *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:452



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_Security_Export void add_ref (SecurityLevel3::EndorsementStatement *);
  extern TAO_Security_Export void remove_ref (SecurityLevel3::EndorsementStatement *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/cdr_op_ch.cpp:51



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::EndorsementStatement *);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::EndorsementStatement *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_valuetype.cpp:452



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_Security_Export void add_ref (SecurityLevel3::X509IdentityStatement *);
  extern TAO_Security_Export void remove_ref (SecurityLevel3::X509IdentityStatement *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype/cdr_op_ch.cpp:51



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecurityLevel3::X509IdentityStatement *);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SecurityLevel3::X509IdentityStatement *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_X509IdentityStatementList_H_
#define _TAO_CDR_OP_SecurityLevel3_X509IdentityStatementList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::X509IdentityStatementList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::X509IdentityStatementList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_X509IdentityStatementList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_CredentialsIdList_H_
#define _TAO_CDR_OP_SecurityLevel3_CredentialsIdList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::CredentialsIdList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::CredentialsIdList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_CredentialsIdList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_SecurityLevel3_AcquisitionMethodList_H_
#define _TAO_CDR_OP_SecurityLevel3_AcquisitionMethodList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SecurityLevel3::AcquisitionMethodList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SecurityLevel3::AcquisitionMethodList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_SecurityLevel3_AcquisitionMethodList_H_ */

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "SecurityLevel3C.inl"
#endif /* defined INLINE */

#endif /* ifndef */

