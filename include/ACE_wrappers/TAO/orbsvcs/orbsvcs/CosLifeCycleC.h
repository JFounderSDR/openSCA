// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_COSLIFECYCLEC_ET0BW2_H_
#define _TAO_IDL_COSLIFECYCLEC_ET0BW2_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/LifeCycle/lifecycle_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "CosNamingC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_LifeCycle_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace CosLifeCycle
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

  typedef CosNaming::Name Key;
  typedef CosNaming::Name_var Key_var;
  typedef CosNaming::Name_out Key_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_Key;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Object Factory;
  typedef ::CORBA::Object_ptr Factory_ptr;
  typedef ::CORBA::Object_var Factory_var;
  typedef ::CORBA::Object_out Factory_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_Factory;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSLIFECYCLE_FACTORIES_CH_)
#define _COSLIFECYCLE_FACTORIES_CH_

  class Factories;

  typedef
    ::TAO_VarSeq_Var_T<
        Factories
      >
    Factories_var;

  typedef
    ::TAO_Seq_Out_T<
        Factories
      >
    Factories_out;

  class TAO_LifeCycle_Export Factories
    : public
        ::TAO::unbounded_object_reference_sequence<
            Factory,
            Factory_var
          >
  {
  public:
    Factories (void);
    Factories ( ::CORBA::ULong max);
    Factories (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Object_ptr* buffer, 
      ::CORBA::Boolean release = false);
    Factories (const Factories &);
    virtual ~Factories (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Factories_var _var_type;
    typedef Factories_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_Factories;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct NameValuePair;

  typedef
    ::TAO_Var_Var_T<
        NameValuePair
      >
    NameValuePair_var;
  
  typedef
    ::TAO_Out_T<
        NameValuePair
      >
    NameValuePair_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_LifeCycle_Export NameValuePair
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef NameValuePair_var _var_type;
    typedef NameValuePair_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::CORBA::Any value;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_NameValuePair;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_COSLIFECYCLE_CRITERIA_CH_)
#define _COSLIFECYCLE_CRITERIA_CH_

  class Criteria;

  typedef
    ::TAO_VarSeq_Var_T<
        Criteria
      >
    Criteria_var;

  typedef
    ::TAO_Seq_Out_T<
        Criteria
      >
    Criteria_out;

  class TAO_LifeCycle_Export Criteria
    : public
        ::TAO::unbounded_value_sequence<
            NameValuePair
          >
  {
  public:
    Criteria (void);
    Criteria ( ::CORBA::ULong max);
    Criteria (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      NameValuePair* buffer, 
      ::CORBA::Boolean release = false);
    Criteria (const Criteria &);
    virtual ~Criteria (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Criteria_var _var_type;
    typedef Criteria_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_Criteria;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_LifeCycle_Export NoFactory : public ::CORBA::UserException
  {
  public:
    
    CosLifeCycle::Key search_key;
    NoFactory (void);
    NoFactory (const NoFactory &);
    ~NoFactory (void);

    NoFactory &operator= (const NoFactory &);

    static void _tao_any_destructor (void *);

    static NoFactory *_downcast ( ::CORBA::Exception *);
    static const NoFactory *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    NoFactory (
        const CosLifeCycle::Key & _tao_search_key);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_NoFactory;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_LifeCycle_Export NotCopyable : public ::CORBA::UserException
  {
  public:
    
    ::TAO::String_Manager reason;
    NotCopyable (void);
    NotCopyable (const NotCopyable &);
    ~NotCopyable (void);

    NotCopyable &operator= (const NotCopyable &);

    static void _tao_any_destructor (void *);

    static NotCopyable *_downcast ( ::CORBA::Exception *);
    static const NotCopyable *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    NotCopyable (
        const char * _tao_reason);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_NotCopyable;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_LifeCycle_Export NotMovable : public ::CORBA::UserException
  {
  public:
    
    ::TAO::String_Manager reason;
    NotMovable (void);
    NotMovable (const NotMovable &);
    ~NotMovable (void);

    NotMovable &operator= (const NotMovable &);

    static void _tao_any_destructor (void *);

    static NotMovable *_downcast ( ::CORBA::Exception *);
    static const NotMovable *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    NotMovable (
        const char * _tao_reason);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_NotMovable;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_LifeCycle_Export NotRemovable : public ::CORBA::UserException
  {
  public:
    
    ::TAO::String_Manager reason;
    NotRemovable (void);
    NotRemovable (const NotRemovable &);
    ~NotRemovable (void);

    NotRemovable &operator= (const NotRemovable &);

    static void _tao_any_destructor (void *);

    static NotRemovable *_downcast ( ::CORBA::Exception *);
    static const NotRemovable *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    NotRemovable (
        const char * _tao_reason);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_NotRemovable;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_LifeCycle_Export InvalidCriteria : public ::CORBA::UserException
  {
  public:
    
    CosLifeCycle::Criteria invalid_criteria;
    InvalidCriteria (void);
    InvalidCriteria (const InvalidCriteria &);
    ~InvalidCriteria (void);

    InvalidCriteria &operator= (const InvalidCriteria &);

    static void _tao_any_destructor (void *);

    static InvalidCriteria *_downcast ( ::CORBA::Exception *);
    static const InvalidCriteria *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    InvalidCriteria (
        const CosLifeCycle::Criteria & _tao_invalid_criteria);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_InvalidCriteria;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:43

  class TAO_LifeCycle_Export CannotMeetCriteria : public ::CORBA::UserException
  {
  public:
    
    CosLifeCycle::Criteria unmet_criteria;
    CannotMeetCriteria (void);
    CannotMeetCriteria (const CannotMeetCriteria &);
    ~CannotMeetCriteria (void);

    CannotMeetCriteria &operator= (const CannotMeetCriteria &);

    static void _tao_any_destructor (void *);

    static CannotMeetCriteria *_downcast ( ::CORBA::Exception *);
    static const CannotMeetCriteria *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:56

    CannotMeetCriteria (
        const CosLifeCycle::Criteria & _tao_unmet_criteria);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_CannotMeetCriteria;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSLIFECYCLE_FACTORYFINDER__VAR_OUT_CH_)
#define _COSLIFECYCLE_FACTORYFINDER__VAR_OUT_CH_

  class FactoryFinder;
  typedef FactoryFinder *FactoryFinder_ptr;

  typedef
    TAO_Objref_Var_T<
        FactoryFinder
      >
    FactoryFinder_var;
  
  typedef
    TAO_Objref_Out_T<
        FactoryFinder
      >
    FactoryFinder_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_LifeCycle_Export FactoryFinder
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<FactoryFinder>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef FactoryFinder_ptr _ptr_type;
    typedef FactoryFinder_var _var_type;
    typedef FactoryFinder_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static FactoryFinder_ptr _duplicate (FactoryFinder_ptr obj);

    static void _tao_release (FactoryFinder_ptr obj);

    static FactoryFinder_ptr _narrow (::CORBA::Object_ptr obj);
    static FactoryFinder_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static FactoryFinder_ptr _nil (void);

    virtual ::CosLifeCycle::Factories * find_factories (
      const ::CosLifeCycle::Key & factory_key);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_FactoryFinder_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    FactoryFinder (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosLifeCycle_FactoryFinder_setup_collocation (void);

    // Concrete non-local interface only.
    FactoryFinder (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    FactoryFinder (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~FactoryFinder (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    FactoryFinder (const FactoryFinder &);

    void operator= (const FactoryFinder &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_FactoryFinder;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSLIFECYCLE_LIFECYCLEOBJECT__VAR_OUT_CH_)
#define _COSLIFECYCLE_LIFECYCLEOBJECT__VAR_OUT_CH_

  class LifeCycleObject;
  typedef LifeCycleObject *LifeCycleObject_ptr;

  typedef
    TAO_Objref_Var_T<
        LifeCycleObject
      >
    LifeCycleObject_var;
  
  typedef
    TAO_Objref_Out_T<
        LifeCycleObject
      >
    LifeCycleObject_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_LifeCycle_Export LifeCycleObject
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<LifeCycleObject>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef LifeCycleObject_ptr _ptr_type;
    typedef LifeCycleObject_var _var_type;
    typedef LifeCycleObject_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static LifeCycleObject_ptr _duplicate (LifeCycleObject_ptr obj);

    static void _tao_release (LifeCycleObject_ptr obj);

    static LifeCycleObject_ptr _narrow (::CORBA::Object_ptr obj);
    static LifeCycleObject_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static LifeCycleObject_ptr _nil (void);

    virtual ::CosLifeCycle::LifeCycleObject_ptr copy (
      ::CosLifeCycle::FactoryFinder_ptr there,
      const ::CosLifeCycle::Criteria & the_criteria);

    virtual void move (
      ::CosLifeCycle::FactoryFinder_ptr there,
      const ::CosLifeCycle::Criteria & the_criteria);

    virtual void remove (
      void);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_LifeCycleObject_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    LifeCycleObject (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosLifeCycle_LifeCycleObject_setup_collocation (void);

    // Concrete non-local interface only.
    LifeCycleObject (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    LifeCycleObject (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~LifeCycleObject (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    LifeCycleObject (const LifeCycleObject &);

    void operator= (const LifeCycleObject &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_LifeCycleObject;

  // TAO_IDL - Generated from
  // .\be\be_interface.cpp:784

#if !defined (_COSLIFECYCLE_GENERICFACTORY__VAR_OUT_CH_)
#define _COSLIFECYCLE_GENERICFACTORY__VAR_OUT_CH_

  class GenericFactory;
  typedef GenericFactory *GenericFactory_ptr;

  typedef
    TAO_Objref_Var_T<
        GenericFactory
      >
    GenericFactory_var;
  
  typedef
    TAO_Objref_Out_T<
        GenericFactory
      >
    GenericFactory_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

  class TAO_LifeCycle_Export GenericFactory
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<GenericFactory>;

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef GenericFactory_ptr _ptr_type;
    typedef GenericFactory_var _var_type;
    typedef GenericFactory_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static GenericFactory_ptr _duplicate (GenericFactory_ptr obj);

    static void _tao_release (GenericFactory_ptr obj);

    static GenericFactory_ptr _narrow (::CORBA::Object_ptr obj);
    static GenericFactory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static GenericFactory_ptr _nil (void);

    virtual ::CORBA::Boolean supports (
      const ::CosLifeCycle::Key & k);

    virtual ::CORBA::Object_ptr create_object (
      const ::CosLifeCycle::Key & k,
      const ::CosLifeCycle::Criteria & the_criteria);

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_GenericFactory_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    GenericFactory (void);

    // These methods traverse the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosLifeCycle_GenericFactory_setup_collocation (void);

    // Concrete non-local interface only.
    GenericFactory (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    GenericFactory (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~GenericFactory (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    GenericFactory (const GenericFactory &);

    void operator= (const GenericFactory &);
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_LifeCycle_Export ::CORBA::TypeCode_ptr const _tc_GenericFactory;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module CosLifeCycle

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosLifeCycle::Factories>
    : public
        Var_Size_Arg_Traits_T<
            ::CosLifeCycle::Factories,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::CosLifeCycle::NameValuePair>
    : public
        Var_Size_Arg_Traits_T<
            ::CosLifeCycle::NameValuePair,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::CosLifeCycle::Criteria>
    : public
        Var_Size_Arg_Traits_T<
            ::CosLifeCycle::Criteria,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSLIFECYCLE_FACTORYFINDER__ARG_TRAITS_)
#define _COSLIFECYCLE_FACTORYFINDER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosLifeCycle::FactoryFinder>
    : public
        Object_Arg_Traits_T<
            ::CosLifeCycle::FactoryFinder_ptr,
            ::CosLifeCycle::FactoryFinder_var,
            ::CosLifeCycle::FactoryFinder_out,
            TAO::Objref_Traits<CosLifeCycle::FactoryFinder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSLIFECYCLE_LIFECYCLEOBJECT__ARG_TRAITS_)
#define _COSLIFECYCLE_LIFECYCLEOBJECT__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosLifeCycle::LifeCycleObject>
    : public
        Object_Arg_Traits_T<
            ::CosLifeCycle::LifeCycleObject_ptr,
            ::CosLifeCycle::LifeCycleObject_var,
            ::CosLifeCycle::LifeCycleObject_out,
            TAO::Objref_Traits<CosLifeCycle::LifeCycleObject>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:147

#if !defined (_COSLIFECYCLE_GENERICFACTORY__ARG_TRAITS_)
#define _COSLIFECYCLE_GENERICFACTORY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CosLifeCycle::GenericFactory>
    : public
        Object_Arg_Traits_T<
            ::CosLifeCycle::GenericFactory_ptr,
            ::CosLifeCycle::GenericFactory_var,
            ::CosLifeCycle::GenericFactory_out,
            TAO::Objref_Traits<CosLifeCycle::GenericFactory>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern TAO_LifeCycle_Export
TAO::Collocation_Proxy_Broker *
(*CosLifeCycle__TAO_FactoryFinder_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_LifeCycle_Export
TAO::Collocation_Proxy_Broker *
(*CosLifeCycle__TAO_LifeCycleObject_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

extern TAO_LifeCycle_Export
TAO::Collocation_Proxy_Broker *
(*CosLifeCycle__TAO_GenericFactory_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_COSLIFECYCLE_FACTORYFINDER__TRAITS_)
#define _COSLIFECYCLE_FACTORYFINDER__TRAITS_

  template<>
  struct TAO_LifeCycle_Export Objref_Traits< ::CosLifeCycle::FactoryFinder>
  {
    static ::CosLifeCycle::FactoryFinder_ptr duplicate (
        ::CosLifeCycle::FactoryFinder_ptr p);
    static void release (
        ::CosLifeCycle::FactoryFinder_ptr p);
    static ::CosLifeCycle::FactoryFinder_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosLifeCycle::FactoryFinder_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSLIFECYCLE_LIFECYCLEOBJECT__TRAITS_)
#define _COSLIFECYCLE_LIFECYCLEOBJECT__TRAITS_

  template<>
  struct TAO_LifeCycle_Export Objref_Traits< ::CosLifeCycle::LifeCycleObject>
  {
    static ::CosLifeCycle::LifeCycleObject_ptr duplicate (
        ::CosLifeCycle::LifeCycleObject_ptr p);
    static void release (
        ::CosLifeCycle::LifeCycleObject_ptr p);
    static ::CosLifeCycle::LifeCycleObject_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosLifeCycle::LifeCycleObject_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_COSLIFECYCLE_GENERICFACTORY__TRAITS_)
#define _COSLIFECYCLE_GENERICFACTORY__TRAITS_

  template<>
  struct TAO_LifeCycle_Export Objref_Traits< ::CosLifeCycle::GenericFactory>
  {
    static ::CosLifeCycle::GenericFactory_ptr duplicate (
        ::CosLifeCycle::GenericFactory_ptr p);
    static void release (
        ::CosLifeCycle::GenericFactory_ptr p);
    static ::CosLifeCycle::GenericFactory_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosLifeCycle::GenericFactory_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, const ::CosLifeCycle::Factories &); // copying version
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, ::CosLifeCycle::Factories*); // noncopying version
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosLifeCycle::Factories *&); // deprecated
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosLifeCycle::Factories *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, const CosLifeCycle::Factories &); // copying version
TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, CosLifeCycle::Factories*); // noncopying version
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::Factories *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosLifeCycle::Factories *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const ::CosLifeCycle::NameValuePair &); // copying version
  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, ::CosLifeCycle::NameValuePair*); // noncopying version
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosLifeCycle::NameValuePair *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosLifeCycle::NameValuePair *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const CosLifeCycle::NameValuePair &); // copying version
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::NameValuePair*); // noncopying version
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::NameValuePair *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosLifeCycle::NameValuePair *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, const ::CosLifeCycle::Criteria &); // copying version
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, ::CosLifeCycle::Criteria*); // noncopying version
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosLifeCycle::Criteria *&); // deprecated
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosLifeCycle::Criteria *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, const CosLifeCycle::Criteria &); // copying version
TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, CosLifeCycle::Criteria*); // noncopying version
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::Criteria *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosLifeCycle::Criteria *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  

  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const ::CosLifeCycle::NoFactory &); // copying version
  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, ::CosLifeCycle::NoFactory*); // noncopying version
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosLifeCycle::NoFactory *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosLifeCycle::NoFactory *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const CosLifeCycle::NoFactory &); // copying version
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::NoFactory*); // noncopying version
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::NoFactory *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosLifeCycle::NoFactory *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  

  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const ::CosLifeCycle::NotCopyable &); // copying version
  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, ::CosLifeCycle::NotCopyable*); // noncopying version
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosLifeCycle::NotCopyable *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosLifeCycle::NotCopyable *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const CosLifeCycle::NotCopyable &); // copying version
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::NotCopyable*); // noncopying version
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::NotCopyable *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosLifeCycle::NotCopyable *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  

  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const ::CosLifeCycle::NotMovable &); // copying version
  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, ::CosLifeCycle::NotMovable*); // noncopying version
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosLifeCycle::NotMovable *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosLifeCycle::NotMovable *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const CosLifeCycle::NotMovable &); // copying version
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::NotMovable*); // noncopying version
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::NotMovable *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosLifeCycle::NotMovable *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  

  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const ::CosLifeCycle::NotRemovable &); // copying version
  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, ::CosLifeCycle::NotRemovable*); // noncopying version
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosLifeCycle::NotRemovable *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosLifeCycle::NotRemovable *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const CosLifeCycle::NotRemovable &); // copying version
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::NotRemovable*); // noncopying version
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::NotRemovable *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosLifeCycle::NotRemovable *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  

  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const ::CosLifeCycle::InvalidCriteria &); // copying version
  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, ::CosLifeCycle::InvalidCriteria*); // noncopying version
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosLifeCycle::InvalidCriteria *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosLifeCycle::InvalidCriteria *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const CosLifeCycle::InvalidCriteria &); // copying version
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::InvalidCriteria*); // noncopying version
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::InvalidCriteria *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosLifeCycle::InvalidCriteria *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:44

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  

  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const ::CosLifeCycle::CannotMeetCriteria &); // copying version
  TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, ::CosLifeCycle::CannotMeetCriteria*); // noncopying version
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CosLifeCycle::CannotMeetCriteria *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CosLifeCycle::CannotMeetCriteria *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, const CosLifeCycle::CannotMeetCriteria &); // copying version
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::CannotMeetCriteria*); // noncopying version
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::CannotMeetCriteria *&); // deprecated
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosLifeCycle::CannotMeetCriteria *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, FactoryFinder_ptr); // copying
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, FactoryFinder_ptr *); // non-copying
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FactoryFinder_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::FactoryFinder_ptr); // copying
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::FactoryFinder_ptr *); // non-copying
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::FactoryFinder_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, LifeCycleObject_ptr); // copying
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, LifeCycleObject_ptr *); // non-copying
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LifeCycleObject_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::LifeCycleObject_ptr); // copying
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::LifeCycleObject_ptr *); // non-copying
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::LifeCycleObject_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosLifeCycle
{
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, GenericFactory_ptr); // copying
  TAO_LifeCycle_Export void operator<<= ( ::CORBA::Any &, GenericFactory_ptr *); // non-copying
  TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GenericFactory_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::GenericFactory_ptr); // copying
TAO_LifeCycle_Export void operator<<= (::CORBA::Any &, CosLifeCycle::GenericFactory_ptr *); // non-copying
TAO_LifeCycle_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosLifeCycle::GenericFactory_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosLifeCycle_Factories_H_
#define _TAO_CDR_OP_CosLifeCycle_Factories_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_LifeCycle_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosLifeCycle::Factories &_tao_sequence);
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosLifeCycle::Factories &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosLifeCycle_Factories_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosLifeCycle::NameValuePair &);
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosLifeCycle::NameValuePair &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_CosLifeCycle_Criteria_H_
#define _TAO_CDR_OP_CosLifeCycle_Criteria_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_LifeCycle_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosLifeCycle::Criteria &_tao_sequence);
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosLifeCycle::Criteria &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosLifeCycle_Criteria_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosLifeCycle::NoFactory &);
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosLifeCycle::NoFactory &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosLifeCycle::NotCopyable &);
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosLifeCycle::NotCopyable &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosLifeCycle::NotMovable &);
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosLifeCycle::NotMovable &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosLifeCycle::NotRemovable &);
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosLifeCycle::NotRemovable &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosLifeCycle::InvalidCriteria &);
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosLifeCycle::InvalidCriteria &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:43

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosLifeCycle::CannotMeetCriteria &);
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosLifeCycle::CannotMeetCriteria &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosLifeCycle::FactoryFinder_ptr );
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosLifeCycle::FactoryFinder_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosLifeCycle::LifeCycleObject_ptr );
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosLifeCycle::LifeCycleObject_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_LifeCycle_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosLifeCycle::GenericFactory_ptr );
TAO_LifeCycle_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosLifeCycle::GenericFactory_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "CosLifeCycleC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

