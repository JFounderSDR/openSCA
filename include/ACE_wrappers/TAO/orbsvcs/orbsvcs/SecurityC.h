// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:150

#ifndef _TAO_IDL_SECURITYC_EIRNHE_H_
#define _TAO_IDL_SECURITYC_EIRNHE_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/Security/security_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/TimeBaseA.h"
#include "tao/AnyTypeCode/BooleanSeqA.h"
#include "tao/AnyTypeCode/CharSeqA.h"
#include "tao/AnyTypeCode/DoubleSeqA.h"
#include "tao/AnyTypeCode/FloatSeqA.h"
#include "tao/AnyTypeCode/LongDoubleSeqA.h"
#include "tao/AnyTypeCode/LongSeqA.h"
#include "tao/AnyTypeCode/OctetSeqA.h"
#include "tao/AnyTypeCode/ShortSeqA.h"
#include "tao/AnyTypeCode/StringSeqA.h"
#include "tao/AnyTypeCode/ULongSeqA.h"
#include "tao/AnyTypeCode/UShortSeqA.h"
#include "tao/AnyTypeCode/WCharSeqA.h"
#include "tao/AnyTypeCode/WStringSeqA.h"
#include "tao/AnyTypeCode/LongLongSeqA.h"
#include "tao/AnyTypeCode/ULongLongSeqA.h"
#include "tao/AnyTypeCode/PolicyA.h"
#include "tao/AnyTypeCode/Policy_ManagerA.h"
#include "tao/AnyTypeCode/Policy_CurrentA.h"
#include "tao/AnyTypeCode/ServicesA.h"
#include "tao/AnyTypeCode/ParameterModeA.h"
#include "tao/AnyTypeCode/orb_typesA.h"
#include "tao/AnyTypeCode/Typecode_typesA.h"
#include "tao/AnyTypeCode/WrongTransactionA.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/TimeBaseC.h"
#include "tao/BooleanSeqC.h"
#include "tao/CharSeqC.h"
#include "tao/DoubleSeqC.h"
#include "tao/FloatSeqC.h"
#include "tao/LongDoubleSeqC.h"
#include "tao/LongSeqC.h"
#include "tao/OctetSeqC.h"
#include "tao/ShortSeqC.h"
#include "tao/StringSeqC.h"
#include "tao/ULongSeqC.h"
#include "tao/UShortSeqC.h"
#include "tao/WCharSeqC.h"
#include "tao/WStringSeqC.h"
#include "tao/LongLongSeqC.h"
#include "tao/ULongLongSeqC.h"
#include "tao/PolicyC.h"
#include "tao/Policy_ManagerC.h"
#include "tao/Policy_CurrentC.h"
#include "tao/ServicesC.h"
#include "tao/ParameterModeC.h"
#include "tao/orb_typesC.h"
#include "tao/Typecode_typesC.h"
#include "tao/WrongTransactionC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Security_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:41

namespace Security
{

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef char * SecurityName;
  typedef ::CORBA::String_var SecurityName_var;
  typedef ::CORBA::String_out SecurityName_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SecurityName;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_OPAQUE_CH_)
#define _SECURITY_OPAQUE_CH_

  class Opaque;

  typedef
    ::TAO_FixedSeq_Var_T<
        Opaque
      >
    Opaque_var;

  typedef
    ::TAO_Seq_Out_T<
        Opaque
      >
    Opaque_out;

  class TAO_Security_Export Opaque
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Octet
          >
  {
  public:
    Opaque (void);
    Opaque ( ::CORBA::ULong max);
    Opaque (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Octet* buffer, 
      ::CORBA::Boolean release = false);
    Opaque (const Opaque &);
    virtual ~Opaque (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Opaque_var _var_type;
    typedef Opaque_out _out_type;

    static void _tao_any_destructor (void *);

    

#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    Opaque (
        ::CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_Opaque;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecurityLevel1 = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecurityLevel2 = 2U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong NonRepudiation = 3U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecurityORBServiceReady = 4U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecurityServiceReady = 5U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong ReplaceORBServices = 6U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong ReplaceSecurityServices = 7U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong StandardSecureInteroperability = 8U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong DCESecureInteroperability = 9U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong CommonInteroperabilityLevel0 = 10U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong CommonInteroperabilityLevel1 = 11U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong CommonInteroperabilityLevel2 = 12U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecurityMechanismType = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecurityAttribute = 2U;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct ExtensibleFamily;

  typedef
    ::TAO_Fixed_Var_T<
        ExtensibleFamily
      >
    ExtensibleFamily_var;
  
  typedef
    ExtensibleFamily &
    ExtensibleFamily_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export ExtensibleFamily
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ExtensibleFamily_var _var_type;
    typedef ExtensibleFamily_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::UShort family_definer;
    ::CORBA::UShort family;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ExtensibleFamily;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_OID_CH_)
#define _SECURITY_OID_CH_

  class OID;

  typedef
    ::TAO_FixedSeq_Var_T<
        OID
      >
    OID_var;

  typedef
    ::TAO_Seq_Out_T<
        OID
      >
    OID_out;

  class TAO_Security_Export OID
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Octet
          >
  {
  public:
    OID (void);
    OID ( ::CORBA::ULong max);
    OID (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Octet* buffer, 
      ::CORBA::Boolean release = false);
    OID (const OID &);
    virtual ~OID (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef OID_var _var_type;
    typedef OID_out _out_type;

    static void _tao_any_destructor (void *);

    

#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    OID (
        ::CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_OID;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_OIDLIST_CH_)
#define _SECURITY_OIDLIST_CH_

  class OIDList;

  typedef
    ::TAO_VarSeq_Var_T<
        OIDList
      >
    OIDList_var;

  typedef
    ::TAO_Seq_Out_T<
        OIDList
      >
    OIDList_out;

  class TAO_Security_Export OIDList
    : public
        ::TAO::unbounded_value_sequence<
            OID
          >
  {
  public:
    OIDList (void);
    OIDList ( ::CORBA::ULong max);
    OIDList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      OID* buffer, 
      ::CORBA::Boolean release = false);
    OIDList (const OIDList &);
    virtual ~OIDList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef OIDList_var _var_type;
    typedef OIDList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_OIDList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::ULong SecurityAttributeType;
  typedef ::CORBA::ULong_out SecurityAttributeType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SecurityAttributeType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong AuditId = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong AccountingId = 2U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong NonRepudiationId = 3U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong Public = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong AccessId = 2U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong PrimaryGroupId = 3U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong GroupId = 4U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong Role = 5U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong AttributeSet = 6U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong Clearance = 7U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong Capability = 8U;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct AttributeType;

  typedef
    ::TAO_Fixed_Var_T<
        AttributeType
      >
    AttributeType_var;
  
  typedef
    AttributeType &
    AttributeType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export AttributeType
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AttributeType_var _var_type;
    typedef AttributeType_out _out_type;

    static void _tao_any_destructor (void *);
    
    Security::ExtensibleFamily attribute_family;
    Security::SecurityAttributeType attribute_type;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AttributeType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_ATTRIBUTETYPELIST_CH_)
#define _SECURITY_ATTRIBUTETYPELIST_CH_

  class AttributeTypeList;

  typedef
    ::TAO_FixedSeq_Var_T<
        AttributeTypeList
      >
    AttributeTypeList_var;

  typedef
    ::TAO_Seq_Out_T<
        AttributeTypeList
      >
    AttributeTypeList_out;

  class TAO_Security_Export AttributeTypeList
    : public
        ::TAO::unbounded_value_sequence<
            AttributeType
          >
  {
  public:
    AttributeTypeList (void);
    AttributeTypeList ( ::CORBA::ULong max);
    AttributeTypeList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      AttributeType* buffer, 
      ::CORBA::Boolean release = false);
    AttributeTypeList (const AttributeTypeList &);
    virtual ~AttributeTypeList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AttributeTypeList_var _var_type;
    typedef AttributeTypeList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AttributeTypeList;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct SecAttribute;

  typedef
    ::TAO_Var_Var_T<
        SecAttribute
      >
    SecAttribute_var;
  
  typedef
    ::TAO_Out_T<
        SecAttribute
      >
    SecAttribute_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export SecAttribute
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SecAttribute_var _var_type;
    typedef SecAttribute_out _out_type;

    static void _tao_any_destructor (void *);
    
    Security::AttributeType attribute_type;
    Security::OID defining_authority;
    Security::Opaque value;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SecAttribute;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_ATTRIBUTELIST_CH_)
#define _SECURITY_ATTRIBUTELIST_CH_

  class AttributeList;

  typedef
    ::TAO_VarSeq_Var_T<
        AttributeList
      >
    AttributeList_var;

  typedef
    ::TAO_Seq_Out_T<
        AttributeList
      >
    AttributeList_out;

  class TAO_Security_Export AttributeList
    : public
        ::TAO::unbounded_value_sequence<
            SecAttribute
          >
  {
  public:
    AttributeList (void);
    AttributeList ( ::CORBA::ULong max);
    AttributeList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      SecAttribute* buffer, 
      ::CORBA::Boolean release = false);
    AttributeList (const AttributeList &);
    virtual ~AttributeList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AttributeList_var _var_type;
    typedef AttributeList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AttributeList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum AuthenticationStatus
  {
    SecAuthSuccess,
    SecAuthFailure,
    SecAuthContinue,
    SecAuthExpired
  };

  typedef AuthenticationStatus &AuthenticationStatus_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AuthenticationStatus;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum AssociationStatus
  {
    SecAssocSuccess,
    SecAssocFailure,
    SecAssocContinue
  };

  typedef AssociationStatus &AssociationStatus_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AssociationStatus;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::ULong AuthenticationMethod;
  typedef ::CORBA::ULong_out AuthenticationMethod_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AuthenticationMethod;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_AUTHENTICATIONMETHODLIST_CH_)
#define _SECURITY_AUTHENTICATIONMETHODLIST_CH_

  class AuthenticationMethodList;

  typedef
    ::TAO_FixedSeq_Var_T<
        AuthenticationMethodList
      >
    AuthenticationMethodList_var;

  typedef
    ::TAO_Seq_Out_T<
        AuthenticationMethodList
      >
    AuthenticationMethodList_out;

  class TAO_Security_Export AuthenticationMethodList
    : public
        ::TAO::unbounded_value_sequence<
            AuthenticationMethod
          >
  {
  public:
    AuthenticationMethodList (void);
    AuthenticationMethodList ( ::CORBA::ULong max);
    AuthenticationMethodList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::ULong* buffer, 
      ::CORBA::Boolean release = false);
    AuthenticationMethodList (const AuthenticationMethodList &);
    virtual ~AuthenticationMethodList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AuthenticationMethodList_var _var_type;
    typedef AuthenticationMethodList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AuthenticationMethodList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum InvocationCredentialsType
  {
    SecOwnCredentials,
    SecReceivedCredentials,
    SecTargetCredentials
  };

  typedef InvocationCredentialsType &InvocationCredentialsType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_InvocationCredentialsType;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct Right;

  typedef
    ::TAO_Var_Var_T<
        Right
      >
    Right_var;
  
  typedef
    ::TAO_Out_T<
        Right
      >
    Right_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export Right
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef Right_var _var_type;
    typedef Right_out _out_type;

    static void _tao_any_destructor (void *);
    
    Security::ExtensibleFamily rights_family;
    ::TAO::String_Manager the_right;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_Right;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_RIGHTSLIST_CH_)
#define _SECURITY_RIGHTSLIST_CH_

  class RightsList;

  typedef
    ::TAO_VarSeq_Var_T<
        RightsList
      >
    RightsList_var;

  typedef
    ::TAO_Seq_Out_T<
        RightsList
      >
    RightsList_out;

  class TAO_Security_Export RightsList
    : public
        ::TAO::unbounded_value_sequence<
            Right
          >
  {
  public:
    RightsList (void);
    RightsList ( ::CORBA::ULong max);
    RightsList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Right* buffer, 
      ::CORBA::Boolean release = false);
    RightsList (const RightsList &);
    virtual ~RightsList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef RightsList_var _var_type;
    typedef RightsList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_RightsList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum RightsCombinator
  {
    SecAllRights,
    SecAnyRight
  };

  typedef RightsCombinator &RightsCombinator_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_RightsCombinator;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum DelegationState
  {
    SecInitiator,
    SecDelegate
  };

  typedef DelegationState &DelegationState_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_DelegationState;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum DelegationDirective
  {
    Delegate,
    NoDelegate
  };

  typedef DelegationDirective &DelegationDirective_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_DelegationDirective;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:509

  typedef TimeBase::UtcT UtcT;
  typedef TimeBase::UtcT_var UtcT_var;
  typedef TimeBase::UtcT_out UtcT_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_UtcT;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:509

  typedef TimeBase::IntervalT IntervalT;
  typedef TimeBase::IntervalT_var IntervalT_var;
  typedef TimeBase::IntervalT_out IntervalT_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_IntervalT;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef TimeBase::TimeT TimeT;
  typedef TimeBase::TimeT_out TimeT_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_TimeT;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum SecurityFeature
  {
    SecNoDelegation,
    SecSimpleDelegation,
    SecCompositeDelegation,
    SecNoProtection,
    SecIntegrity,
    SecConfidentiality,
    SecIntegrityAndConfidentiality,
    SecDetectReplay,
    SecDetectMisordering,
    SecEstablishTrustInTarget,
    SecEstablishTrustInClient
  };

  typedef SecurityFeature &SecurityFeature_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SecurityFeature;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum QOP
  {
    SecQOPNoProtection,
    SecQOPIntegrity,
    SecQOPConfidentiality,
    SecQOPIntegrityAndConfidentiality
  };

  typedef QOP &QOP_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_QOP;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum SecurityContextType
  {
    SecClientSecurityContext,
    SecServerSecurityContext
  };

  typedef SecurityContextType &SecurityContextType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SecurityContextType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum SecurityContextState
  {
    SecContextInitialized,
    SecContextContinued,
    SecContextClientEstablished,
    SecContextEstablished,
    SecContextEstablishExpired,
    SecContextExpired,
    SecContextInvalid
  };

  typedef SecurityContextState &SecurityContextState_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SecurityContextState;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct ChannelBindings;

  typedef
    ::TAO_Var_Var_T<
        ChannelBindings
      >
    ChannelBindings_var;
  
  typedef
    ::TAO_Out_T<
        ChannelBindings
      >
    ChannelBindings_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export ChannelBindings
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef ChannelBindings_var _var_type;
    typedef ChannelBindings_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong initiator_addrtype;
    CORBA::OctetSeq initiator_address;
    ::CORBA::ULong acceptor_addrtype;
    CORBA::OctetSeq acceptor_address;
    CORBA::OctetSeq application_data;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_ChannelBindings;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct OpaqueBuffer;

  typedef
    ::TAO_Var_Var_T<
        OpaqueBuffer
      >
    OpaqueBuffer_var;
  
  typedef
    ::TAO_Out_T<
        OpaqueBuffer
      >
    OpaqueBuffer_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export OpaqueBuffer
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef OpaqueBuffer_var _var_type;
    typedef OpaqueBuffer_out _out_type;

    static void _tao_any_destructor (void *);
    
    Security::Opaque buffer;
    ::CORBA::ULong startpos;
    ::CORBA::ULong endpos;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_OpaqueBuffer;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::UShort AssociationOptions;
  typedef ::CORBA::UShort_out AssociationOptions_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AssociationOptions;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort NoProtection = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort Integrity = 2U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort Confidentiality = 4U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort DetectReplay = 8U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort DetectMisordering = 16U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort EstablishTrustInTarget = 32U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort EstablishTrustInClient = 64U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort NoDelegation = 128U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort SimpleDelegation = 256U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort CompositeDelegation = 512U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum RequiresSupports
  {
    SecRequires,
    SecSupports
  };

  typedef RequiresSupports &RequiresSupports_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_RequiresSupports;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum CommunicationDirection
  {
    SecDirectionBoth,
    SecDirectionRequest,
    SecDirectionReply
  };

  typedef CommunicationDirection &CommunicationDirection_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_CommunicationDirection;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:403

  typedef char * MechanismType;
  typedef ::CORBA::String_var MechanismType_var;
  typedef ::CORBA::String_out MechanismType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_MechanismType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_MECHANISMTYPELIST_CH_)
#define _SECURITY_MECHANISMTYPELIST_CH_

  class MechanismTypeList;

  typedef
    ::TAO_VarSeq_Var_T<
        MechanismTypeList
      >
    MechanismTypeList_var;

  typedef
    ::TAO_Seq_Out_T<
        MechanismTypeList
      >
    MechanismTypeList_out;

  class TAO_Security_Export MechanismTypeList
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    MechanismTypeList (void);
    MechanismTypeList ( ::CORBA::ULong max);
    MechanismTypeList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer, 
      ::CORBA::Boolean release = false);
    MechanismTypeList (const MechanismTypeList &);
    virtual ~MechanismTypeList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef MechanismTypeList_var _var_type;
    typedef MechanismTypeList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_MechanismTypeList;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct OptionsDirectionPair;

  typedef
    ::TAO_Fixed_Var_T<
        OptionsDirectionPair
      >
    OptionsDirectionPair_var;
  
  typedef
    OptionsDirectionPair &
    OptionsDirectionPair_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export OptionsDirectionPair
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef OptionsDirectionPair_var _var_type;
    typedef OptionsDirectionPair_out _out_type;

    static void _tao_any_destructor (void *);
    
    Security::AssociationOptions options;
    Security::CommunicationDirection direction;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_OptionsDirectionPair;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_OPTIONSDIRECTIONPAIRLIST_CH_)
#define _SECURITY_OPTIONSDIRECTIONPAIRLIST_CH_

  class OptionsDirectionPairList;

  typedef
    ::TAO_FixedSeq_Var_T<
        OptionsDirectionPairList
      >
    OptionsDirectionPairList_var;

  typedef
    ::TAO_Seq_Out_T<
        OptionsDirectionPairList
      >
    OptionsDirectionPairList_out;

  class TAO_Security_Export OptionsDirectionPairList
    : public
        ::TAO::unbounded_value_sequence<
            OptionsDirectionPair
          >
  {
  public:
    OptionsDirectionPairList (void);
    OptionsDirectionPairList ( ::CORBA::ULong max);
    OptionsDirectionPairList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      OptionsDirectionPair* buffer, 
      ::CORBA::Boolean release = false);
    OptionsDirectionPairList (const OptionsDirectionPairList &);
    virtual ~OptionsDirectionPairList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef OptionsDirectionPairList_var _var_type;
    typedef OptionsDirectionPairList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_OptionsDirectionPairList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum DelegationMode
  {
    SecDelModeNoDelegation,
    SecDelModeSimpleDelegation,
    SecDelModeCompositeDelegation
  };

  typedef DelegationMode &DelegationMode_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_DelegationMode;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct MechandOptions;

  typedef
    ::TAO_Var_Var_T<
        MechandOptions
      >
    MechandOptions_var;
  
  typedef
    ::TAO_Out_T<
        MechandOptions
      >
    MechandOptions_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export MechandOptions
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef MechandOptions_var _var_type;
    typedef MechandOptions_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager mechanism_type;
    Security::AssociationOptions options_supported;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_MechandOptions;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_MECHANDOPTIONSLIST_CH_)
#define _SECURITY_MECHANDOPTIONSLIST_CH_

  class MechandOptionsList;

  typedef
    ::TAO_VarSeq_Var_T<
        MechandOptionsList
      >
    MechandOptionsList_var;

  typedef
    ::TAO_Seq_Out_T<
        MechandOptionsList
      >
    MechandOptionsList_out;

  class TAO_Security_Export MechandOptionsList
    : public
        ::TAO::unbounded_value_sequence<
            MechandOptions
          >
  {
  public:
    MechandOptionsList (void);
    MechandOptionsList ( ::CORBA::ULong max);
    MechandOptionsList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      MechandOptions* buffer, 
      ::CORBA::Boolean release = false);
    MechandOptionsList (const MechandOptionsList &);
    virtual ~MechandOptionsList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef MechandOptionsList_var _var_type;
    typedef MechandOptionsList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_MechandOptionsList;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct EstablishTrust;

  typedef
    ::TAO_Fixed_Var_T<
        EstablishTrust
      >
    EstablishTrust_var;
  
  typedef
    EstablishTrust &
    EstablishTrust_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export EstablishTrust
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef EstablishTrust_var _var_type;
    typedef EstablishTrust_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Boolean trust_in_client;
    ::CORBA::Boolean trust_in_target;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_EstablishTrust;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::ULong AuditChannelId;
  typedef ::CORBA::ULong_out AuditChannelId_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AuditChannelId;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::UShort EventType;
  typedef ::CORBA::UShort_out EventType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_EventType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort AuditAll = 0U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort AuditPrincipalAuth = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort AuditSessionAuth = 2U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort AuditAuthorization = 3U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort AuditInvocation = 4U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort AuditSecEnvChange = 5U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort AuditPolicyChange = 6U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort AuditObjectCreation = 7U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort AuditObjectDestruction = 8U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::UShort AuditNonRepudiation = 9U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum DayOfTheWeek
  {
    Monday,
    Tuesday,
    Wednesday,
    Thursday,
    Friday,
    Saturday,
    Sunday
  };

  typedef DayOfTheWeek &DayOfTheWeek_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_DayOfTheWeek;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:47

  enum AuditCombinator
  {
    SecAllSelectors,
    SecAnySelector
  };

  typedef AuditCombinator &AuditCombinator_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AuditCombinator;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct AuditEventType;

  typedef
    ::TAO_Fixed_Var_T<
        AuditEventType
      >
    AuditEventType_var;
  
  typedef
    AuditEventType &
    AuditEventType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export AuditEventType
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AuditEventType_var _var_type;
    typedef AuditEventType_out _out_type;

    static void _tao_any_destructor (void *);
    
    Security::ExtensibleFamily event_family;
    Security::EventType event_type;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AuditEventType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_AUDITEVENTTYPELIST_CH_)
#define _SECURITY_AUDITEVENTTYPELIST_CH_

  class AuditEventTypeList;

  typedef
    ::TAO_FixedSeq_Var_T<
        AuditEventTypeList
      >
    AuditEventTypeList_var;

  typedef
    ::TAO_Seq_Out_T<
        AuditEventTypeList
      >
    AuditEventTypeList_out;

  class TAO_Security_Export AuditEventTypeList
    : public
        ::TAO::unbounded_value_sequence<
            AuditEventType
          >
  {
  public:
    AuditEventTypeList (void);
    AuditEventTypeList ( ::CORBA::ULong max);
    AuditEventTypeList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      AuditEventType* buffer, 
      ::CORBA::Boolean release = false);
    AuditEventTypeList (const AuditEventTypeList &);
    virtual ~AuditEventTypeList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef AuditEventTypeList_var _var_type;
    typedef AuditEventTypeList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_AuditEventTypeList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::ULong SelectorType;
  typedef ::CORBA::ULong_out SelectorType_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SelectorType;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong InterfaceName = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong ObjectRef = 2U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong Operation = 3U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong Initiator = 4U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SuccessFailure = 5U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong Time = 6U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong DayOfWeek = 7U;

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct SelectorValue;

  typedef
    ::TAO_Var_Var_T<
        SelectorValue
      >
    SelectorValue_var;
  
  typedef
    ::TAO_Out_T<
        SelectorValue
      >
    SelectorValue_out;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:49

  struct TAO_Security_Export SelectorValue
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SelectorValue_var _var_type;
    typedef SelectorValue_out _out_type;

    static void _tao_any_destructor (void *);
    
    Security::SelectorType selector;
    ::CORBA::Any value;
  };

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SelectorValue;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_SECURITY_SELECTORVALUELIST_CH_)
#define _SECURITY_SELECTORVALUELIST_CH_

  class SelectorValueList;

  typedef
    ::TAO_VarSeq_Var_T<
        SelectorValueList
      >
    SelectorValueList_var;

  typedef
    ::TAO_Seq_Out_T<
        SelectorValueList
      >
    SelectorValueList_out;

  class TAO_Security_Export SelectorValueList
    : public
        ::TAO::unbounded_value_sequence<
            SelectorValue
          >
  {
  public:
    SelectorValueList (void);
    SelectorValueList ( ::CORBA::ULong max);
    SelectorValueList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      SelectorValue* buffer, 
      ::CORBA::Boolean release = false);
    SelectorValueList (const SelectorValueList &);
    virtual ~SelectorValueList (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307
    
    typedef SelectorValueList_var _var_type;
    typedef SelectorValueList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

  extern TAO_Security_Export ::CORBA::TypeCode_ptr const _tc_SelectorValueList;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecClientInvocationAccess = 1U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecTargetInvocationAccess = 2U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecApplicationAccess = 3U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecClientInvocationAudit = 4U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecTargetInvocationAudit = 5U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecApplicationAudit = 6U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecDelegation = 7U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecClientSecureInvocation = 8U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecTargetSecureInvocation = 9U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecNonRepudiation = 10U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecMechanismsPolicy = 12U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecInvocationCredentialsPolicy = 13U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecFeaturePolicy = 14U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecQOPPolicy = 15U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecDelegationDirectivePolicy = 38U;

  // TAO_IDL - Generated from
  // e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:41

  const CORBA::ULong SecEstablishTrustPolicy = 39U;

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:70

} // module Security

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::Opaque>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::Opaque,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::ExtensibleFamily>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Security::ExtensibleFamily,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::OID>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::OID,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::OIDList>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::OIDList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::AttributeType>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Security::AttributeType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::AttributeTypeList>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::AttributeTypeList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::SecAttribute>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::SecAttribute,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::AttributeList>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::AttributeList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::AuthenticationStatus>
    : public
        Basic_Arg_Traits_T<
            ::Security::AuthenticationStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::AssociationStatus>
    : public
        Basic_Arg_Traits_T<
            ::Security::AssociationStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::AuthenticationMethodList>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::AuthenticationMethodList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::InvocationCredentialsType>
    : public
        Basic_Arg_Traits_T<
            ::Security::InvocationCredentialsType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::Right>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::Right,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::RightsList>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::RightsList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::RightsCombinator>
    : public
        Basic_Arg_Traits_T<
            ::Security::RightsCombinator,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::DelegationState>
    : public
        Basic_Arg_Traits_T<
            ::Security::DelegationState,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::DelegationDirective>
    : public
        Basic_Arg_Traits_T<
            ::Security::DelegationDirective,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::SecurityFeature>
    : public
        Basic_Arg_Traits_T<
            ::Security::SecurityFeature,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::QOP>
    : public
        Basic_Arg_Traits_T<
            ::Security::QOP,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::SecurityContextType>
    : public
        Basic_Arg_Traits_T<
            ::Security::SecurityContextType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::SecurityContextState>
    : public
        Basic_Arg_Traits_T<
            ::Security::SecurityContextState,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::ChannelBindings>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::ChannelBindings,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::OpaqueBuffer>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::OpaqueBuffer,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::RequiresSupports>
    : public
        Basic_Arg_Traits_T<
            ::Security::RequiresSupports,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::CommunicationDirection>
    : public
        Basic_Arg_Traits_T<
            ::Security::CommunicationDirection,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::MechanismTypeList>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::MechanismTypeList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::OptionsDirectionPair>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Security::OptionsDirectionPair,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::OptionsDirectionPairList>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::OptionsDirectionPairList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::DelegationMode>
    : public
        Basic_Arg_Traits_T<
            ::Security::DelegationMode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::MechandOptions>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::MechandOptions,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::MechandOptionsList>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::MechandOptionsList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::EstablishTrust>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Security::EstablishTrust,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::DayOfTheWeek>
    : public
        Basic_Arg_Traits_T<
            ::Security::DayOfTheWeek,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::Security::AuditCombinator>
    : public
        Basic_Arg_Traits_T<
            ::Security::AuditCombinator,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::AuditEventType>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Security::AuditEventType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::AuditEventTypeList>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::AuditEventTypeList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::Security::SelectorValue>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::SelectorValue,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::Security::SelectorValueList>
    : public
        Var_Size_Arg_Traits_T<
            ::Security::SelectorValueList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::Opaque &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::Opaque*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::Opaque *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::Opaque *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::Opaque &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::Opaque*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::Opaque *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::Opaque *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::ExtensibleFamily &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::ExtensibleFamily*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::ExtensibleFamily *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::ExtensibleFamily *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::ExtensibleFamily &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::ExtensibleFamily*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::ExtensibleFamily *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::ExtensibleFamily *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::OID &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::OID*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::OID *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::OID *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::OID &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::OID*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::OID *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::OID *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::OIDList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::OIDList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::OIDList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::OIDList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::OIDList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::OIDList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::OIDList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::OIDList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::AttributeType &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::AttributeType*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::AttributeType *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::AttributeType *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::AttributeType &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::AttributeType*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::AttributeType *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::AttributeType *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::AttributeTypeList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::AttributeTypeList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::AttributeTypeList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::AttributeTypeList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::AttributeTypeList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::AttributeTypeList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::AttributeTypeList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::AttributeTypeList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::SecAttribute &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::SecAttribute*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::SecAttribute *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::SecAttribute *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::SecAttribute &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::SecAttribute*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::SecAttribute *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::SecAttribute *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::AttributeList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::AttributeList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::AttributeList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::AttributeList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::AttributeList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::AttributeList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::AttributeList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::AttributeList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::AuthenticationStatus);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::AuthenticationStatus &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::AuthenticationStatus);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::AuthenticationStatus &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::AssociationStatus);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::AssociationStatus &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::AssociationStatus);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::AssociationStatus &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::AuthenticationMethodList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::AuthenticationMethodList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::AuthenticationMethodList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::AuthenticationMethodList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::AuthenticationMethodList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::AuthenticationMethodList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::AuthenticationMethodList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::AuthenticationMethodList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::InvocationCredentialsType);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::InvocationCredentialsType &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::InvocationCredentialsType);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::InvocationCredentialsType &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::Right &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::Right*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::Right *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::Right *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::Right &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::Right*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::Right *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::Right *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::RightsList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::RightsList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::RightsList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::RightsList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::RightsList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::RightsList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::RightsList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::RightsList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::RightsCombinator);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::RightsCombinator &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::RightsCombinator);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::RightsCombinator &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::DelegationState);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::DelegationState &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::DelegationState);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::DelegationState &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::DelegationDirective);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::DelegationDirective &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::DelegationDirective);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::DelegationDirective &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::SecurityFeature);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::SecurityFeature &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::SecurityFeature);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::SecurityFeature &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::QOP);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::QOP &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::QOP);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::QOP &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::SecurityContextType);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::SecurityContextType &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::SecurityContextType);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::SecurityContextType &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::SecurityContextState);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::SecurityContextState &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::SecurityContextState);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::SecurityContextState &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::ChannelBindings &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::ChannelBindings*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::ChannelBindings *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::ChannelBindings *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::ChannelBindings &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::ChannelBindings*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::ChannelBindings *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::ChannelBindings *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::OpaqueBuffer &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::OpaqueBuffer*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::OpaqueBuffer *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::OpaqueBuffer *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::OpaqueBuffer &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::OpaqueBuffer*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::OpaqueBuffer *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::OpaqueBuffer *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::RequiresSupports);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::RequiresSupports &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::RequiresSupports);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::RequiresSupports &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::CommunicationDirection);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::CommunicationDirection &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::CommunicationDirection);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::CommunicationDirection &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::MechanismTypeList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::MechanismTypeList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::MechanismTypeList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::MechanismTypeList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::MechanismTypeList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::MechanismTypeList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::MechanismTypeList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::MechanismTypeList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::OptionsDirectionPair &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::OptionsDirectionPair*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::OptionsDirectionPair *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::OptionsDirectionPair *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::OptionsDirectionPair &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::OptionsDirectionPair*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::OptionsDirectionPair *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::OptionsDirectionPair *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::OptionsDirectionPairList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::OptionsDirectionPairList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::OptionsDirectionPairList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::OptionsDirectionPairList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::OptionsDirectionPairList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::OptionsDirectionPairList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::OptionsDirectionPairList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::OptionsDirectionPairList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::DelegationMode);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::DelegationMode &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::DelegationMode);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::DelegationMode &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::MechandOptions &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::MechandOptions*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::MechandOptions *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::MechandOptions *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::MechandOptions &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::MechandOptions*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::MechandOptions *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::MechandOptions *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::MechandOptionsList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::MechandOptionsList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::MechandOptionsList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::MechandOptionsList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::MechandOptionsList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::MechandOptionsList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::MechandOptionsList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::MechandOptionsList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::EstablishTrust &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::EstablishTrust*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::EstablishTrust *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::EstablishTrust *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::EstablishTrust &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::EstablishTrust*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::EstablishTrust *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::EstablishTrust *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::DayOfTheWeek);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::DayOfTheWeek &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::DayOfTheWeek);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::DayOfTheWeek &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  

  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::AuditCombinator);
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::AuditCombinator &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Security_Export void operator<<= (::CORBA::Any &, Security::AuditCombinator);
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::AuditCombinator &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::AuditEventType &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::AuditEventType*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::AuditEventType *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::AuditEventType *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::AuditEventType &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::AuditEventType*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::AuditEventType *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::AuditEventType *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::AuditEventTypeList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::AuditEventTypeList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::AuditEventTypeList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::AuditEventTypeList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::AuditEventTypeList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::AuditEventTypeList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::AuditEventTypeList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::AuditEventTypeList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= (::CORBA::Any &, const ::Security::SelectorValue &); // copying version
  TAO_Security_Export void operator<<= (::CORBA::Any &, ::Security::SelectorValue*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::SelectorValue *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::SelectorValue *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= (::CORBA::Any &, const Security::SelectorValue &); // copying version
TAO_Security_Export void operator<<= (::CORBA::Any &, Security::SelectorValue*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::SelectorValue *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::SelectorValue *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Security
{
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, const ::Security::SelectorValueList &); // copying version
  TAO_Security_Export void operator<<= ( ::CORBA::Any &, ::Security::SelectorValueList*); // noncopying version
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Security::SelectorValueList *&); // deprecated
  TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Security::SelectorValueList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export void operator<<= ( ::CORBA::Any &, const Security::SelectorValueList &); // copying version
TAO_Security_Export void operator<<= ( ::CORBA::Any &, Security::SelectorValueList*); // noncopying version
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Security::SelectorValueList *&); // deprecated
TAO_Security_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Security::SelectorValueList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_Opaque_H_
#define _TAO_CDR_OP_Security_Opaque_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::Opaque &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::Opaque &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_Opaque_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::ExtensibleFamily &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::ExtensibleFamily &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_OID_H_
#define _TAO_CDR_OP_Security_OID_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::OID &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::OID &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_OID_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_OIDList_H_
#define _TAO_CDR_OP_Security_OIDList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::OIDList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::OIDList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_OIDList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::AttributeType &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::AttributeType &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_AttributeTypeList_H_
#define _TAO_CDR_OP_Security_AttributeTypeList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::AttributeTypeList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::AttributeTypeList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_AttributeTypeList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::SecAttribute &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::SecAttribute &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_AttributeList_H_
#define _TAO_CDR_OP_Security_AttributeList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::AttributeList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::AttributeList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_AttributeList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::AuthenticationStatus _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::AuthenticationStatus &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::AssociationStatus _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::AssociationStatus &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_AuthenticationMethodList_H_
#define _TAO_CDR_OP_Security_AuthenticationMethodList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::AuthenticationMethodList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::AuthenticationMethodList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_AuthenticationMethodList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::InvocationCredentialsType _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::InvocationCredentialsType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::Right &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::Right &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_RightsList_H_
#define _TAO_CDR_OP_Security_RightsList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::RightsList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::RightsList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_RightsList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::RightsCombinator _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::RightsCombinator &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::DelegationState _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::DelegationState &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::DelegationDirective _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::DelegationDirective &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::SecurityFeature _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::SecurityFeature &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::QOP _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::QOP &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::SecurityContextType _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::SecurityContextType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::SecurityContextState _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::SecurityContextState &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::ChannelBindings &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::ChannelBindings &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::OpaqueBuffer &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::OpaqueBuffer &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::RequiresSupports _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::RequiresSupports &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::CommunicationDirection _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::CommunicationDirection &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_MechanismTypeList_H_
#define _TAO_CDR_OP_Security_MechanismTypeList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::MechanismTypeList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::MechanismTypeList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_MechanismTypeList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::OptionsDirectionPair &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::OptionsDirectionPair &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_OptionsDirectionPairList_H_
#define _TAO_CDR_OP_Security_OptionsDirectionPairList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::OptionsDirectionPairList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::OptionsDirectionPairList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_OptionsDirectionPairList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::DelegationMode _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::DelegationMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::MechandOptions &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::MechandOptions &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_MechandOptionsList_H_
#define _TAO_CDR_OP_Security_MechandOptionsList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::MechandOptionsList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::MechandOptionsList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_MechandOptionsList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::EstablishTrust &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::EstablishTrust &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::DayOfTheWeek _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::DayOfTheWeek &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:40



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Security::AuditCombinator _tao_enumerator);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Security::AuditCombinator &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::AuditEventType &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::AuditEventType &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_AuditEventTypeList_H_
#define _TAO_CDR_OP_Security_AuditEventTypeList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::AuditEventTypeList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::AuditEventTypeList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_AuditEventTypeList_H_ */

// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:45



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Security_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Security::SelectorValue &);
TAO_Security_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Security::SelectorValue &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// e:\sca\ace_diab\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_Security_SelectorValueList_H_
#define _TAO_CDR_OP_Security_SelectorValueList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_Security_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Security::SelectorValueList &_tao_sequence);
TAO_Security_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Security::SelectorValueList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_Security_SelectorValueList_H_ */

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1581


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "SecurityC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

